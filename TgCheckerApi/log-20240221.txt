2024-02-21 03:57:41.648 +03:00 [INF] User profile is available. Using 'C:\Users\79103\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-21 03:57:42.334 +03:00 [INF] Default Quartz.NET properties loaded from embedded resource file
2024-02-21 03:57:42.549 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-02-21 03:57:42.552 +03:00 [INF] Quartz Scheduler created
2024-02-21 03:57:42.555 +03:00 [INF] RAMJobStore initialized.
2024-02-21 03:57:42.571 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-02-21 03:57:42.574 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-02-21 03:57:42.576 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-02-21 03:57:42.581 +03:00 [INF] JobFactory set to: TgCheckerApi.Job.QuartzJobFactory
2024-02-21 03:57:42.744 +03:00 [INF] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2024-02-21 03:57:43.489 +03:00 [INF] Now listening on: https://localhost:7256
2024-02-21 03:57:43.492 +03:00 [INF] Now listening on: https://localhost:5244
2024-02-21 03:57:43.507 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-21 03:57:43.512 +03:00 [INF] Hosting environment: Development
2024-02-21 03:57:43.515 +03:00 [INF] Content root path: C:\Users\79103\source\Repos\TgCheckerApiCurrent\TgCheckerApi\
2024-02-21 03:57:43.762 +03:00 [INF] RecalculateTopPosJob started at "2024-02-21T03:57:43.7604660+03:00"
2024-02-21 03:57:45.399 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/swagger/index.html - -
2024-02-21 03:57:46.153 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/swagger/index.html - - - 200 - text/html;charset=utf-8 759.3933ms
2024-02-21 03:57:46.153 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/_framework/aspnetcore-browser-refresh.js - -
2024-02-21 03:57:46.168 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/_vs/browserLink - -
2024-02-21 03:57:46.171 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/_framework/aspnetcore-browser-refresh.js - - - 200 12356 application/javascript;+charset=utf-8 17.3647ms
2024-02-21 03:57:46.254 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 85.1740ms
2024-02-21 03:57:46.355 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/swagger/v1/swagger.json - -
2024-02-21 03:57:46.868 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 513.8779ms
2024-02-21 03:57:49.136 +03:00 [INF] Executed DbCommand (157ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c."IsPartner", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."TopPos", c."Url", c."user"
FROM "Channel" AS c
ORDER BY c.bumps DESC
2024-02-21 03:57:49.784 +03:00 [INF] Executed DbCommand (33ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Int32), @p3='?' (DbType = Int32), @p2='?' (DbType = Int32), @p5='?' (DbType = Int32), @p4='?' (DbType = Int32), @p7='?' (DbType = Int32), @p6='?' (DbType = Int32), @p9='?' (DbType = Int32), @p8='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Channel" SET "TopPos" = @p0
WHERE id = @p1;
UPDATE "Channel" SET "TopPos" = @p2
WHERE id = @p3;
UPDATE "Channel" SET "TopPos" = @p4
WHERE id = @p5;
UPDATE "Channel" SET "TopPos" = @p6
WHERE id = @p7;
UPDATE "Channel" SET "TopPos" = @p8
WHERE id = @p9;
2024-02-21 03:57:49.876 +03:00 [INF] RecalculateTopPosJob completed at "2024-02-21T03:57:49.8760999+03:00"
2024-02-21 03:57:53.214 +03:00 [INF] Start processing HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-21 03:57:53.227 +03:00 [INF] Sending HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-21 03:57:53.666 +03:00 [INF] Received HTTP response headers after 433.3486ms - 200
2024-02-21 03:57:53.670 +03:00 [INF] End processing HTTP request after 463.9481ms - 200
2024-02-21 03:57:53.675 +03:00 [INF] Successfully processed all channels via HTTP request at: {DateTime.UtcNow}
2024-02-21 04:00:00.785 +03:00 [INF] User profile is available. Using 'C:\Users\79103\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-21 04:00:01.002 +03:00 [INF] Default Quartz.NET properties loaded from embedded resource file
2024-02-21 04:00:01.062 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-02-21 04:00:01.066 +03:00 [INF] Quartz Scheduler created
2024-02-21 04:00:01.068 +03:00 [INF] RAMJobStore initialized.
2024-02-21 04:00:01.069 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-02-21 04:00:01.070 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-02-21 04:00:01.070 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-02-21 04:00:01.072 +03:00 [INF] JobFactory set to: TgCheckerApi.Job.QuartzJobFactory
2024-02-21 04:00:01.130 +03:00 [INF] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2024-02-21 04:00:01.260 +03:00 [INF] Now listening on: http://localhost:7256
2024-02-21 04:00:01.261 +03:00 [INF] Now listening on: http://localhost:5244
2024-02-21 04:00:01.274 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-21 04:00:01.275 +03:00 [INF] Hosting environment: Development
2024-02-21 04:00:01.275 +03:00 [INF] Content root path: C:\Users\79103\source\Repos\TgCheckerApiCurrent\TgCheckerApi\
2024-02-21 04:00:01.381 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-21 04:00:01.444 +03:00 [INF] RecalculateTopPosJob started at "2024-02-21T04:00:01.4435090+03:00"
2024-02-21 04:00:01.465 +03:00 [WRN] Failed to determine the https port for redirect.
2024-02-21 04:00:01.668 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-21 04:00:01.770 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger - -
2024-02-21 04:00:01.801 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-21 04:00:01.808 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 429.7879ms
2024-02-21 04:00:01.844 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger - - - 301 0 - 74.8286ms
2024-02-21 04:00:01.846 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=X-RKJeR4eyY-3x34WgnEDQ - -
2024-02-21 04:00:01.852 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-21 04:00:01.856 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/index.html - -
2024-02-21 04:00:02.354 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/swagger-ui.css - -
2024-02-21 04:00:02.357 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/swagger-ui-standalone-preset.js - -
2024-02-21 04:00:02.361 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/swagger-ui-bundle.js - -
2024-02-21 04:00:02.370 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/index.html - - - 200 - text/html;charset=utf-8 514.1769ms
2024-02-21 04:00:02.382 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_vs/browserLink - -
2024-02-21 04:00:02.388 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - -
2024-02-21 04:00:02.431 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - - - 200 12356 application/javascript;+charset=utf-8 44.7962ms
2024-02-21 04:00:02.445 +03:00 [INF] Sending file. Request path: '/swagger-ui.css'. Physical path: 'N/A'
2024-02-21 04:00:02.446 +03:00 [INF] Sending file. Request path: '/swagger-ui-bundle.js'. Physical path: 'N/A'
2024-02-21 04:00:02.449 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/swagger-ui.css - - - 200 144929 text/css 95.3153ms
2024-02-21 04:00:02.445 +03:00 [INF] Sending file. Request path: '/swagger-ui-standalone-preset.js'. Physical path: 'N/A'
2024-02-21 04:00:02.453 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/swagger-ui-bundle.js - - - 200 1061536 application/javascript 91.8864ms
2024-02-21 04:00:02.455 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 72.3391ms
2024-02-21 04:00:02.462 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/swagger-ui-standalone-preset.js - - - 200 312163 application/javascript 105.0441ms
2024-02-21 04:00:02.660 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - -
2024-02-21 04:00:02.683 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/favicon-32x32.png - -
2024-02-21 04:00:02.684 +03:00 [INF] Sending file. Request path: '/favicon-32x32.png'. Physical path: 'N/A'
2024-02-21 04:00:02.690 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/favicon-32x32.png - - - 200 628 image/png 7.3752ms
2024-02-21 04:00:02.932 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 272.5367ms
2024-02-21 04:00:04.759 +03:00 [INF] Executed DbCommand (114ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c."IsPartner", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."TopPos", c."Url", c."user"
FROM "Channel" AS c
ORDER BY c.bumps DESC
2024-02-21 04:00:05.185 +03:00 [INF] Executed DbCommand (18ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Int32), @p3='?' (DbType = Int32), @p2='?' (DbType = Int32), @p5='?' (DbType = Int32), @p4='?' (DbType = Int32), @p7='?' (DbType = Int32), @p6='?' (DbType = Int32), @p9='?' (DbType = Int32), @p8='?' (DbType = Int32), @p11='?' (DbType = Int32), @p10='?' (DbType = Int32), @p13='?' (DbType = Int32), @p12='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Channel" SET "TopPos" = @p0
WHERE id = @p1;
UPDATE "Channel" SET "TopPos" = @p2
WHERE id = @p3;
UPDATE "Channel" SET "TopPos" = @p4
WHERE id = @p5;
UPDATE "Channel" SET "TopPos" = @p6
WHERE id = @p7;
UPDATE "Channel" SET "TopPos" = @p8
WHERE id = @p9;
UPDATE "Channel" SET "TopPos" = @p10
WHERE id = @p11;
UPDATE "Channel" SET "TopPos" = @p12
WHERE id = @p13;
2024-02-21 04:00:05.247 +03:00 [INF] RecalculateTopPosJob completed at "2024-02-21T04:00:05.2479135+03:00"
2024-02-21 04:00:11.322 +03:00 [INF] Start processing HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-21 04:00:11.326 +03:00 [INF] Sending HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-21 04:00:11.837 +03:00 [INF] Received HTTP response headers after 500.4181ms - 200
2024-02-21 04:00:11.847 +03:00 [INF] End processing HTTP request after 525.972ms - 200
2024-02-21 04:00:11.859 +03:00 [INF] Successfully processed all channels via HTTP request at: {DateTime.UtcNow}
2024-02-21 04:00:17.366 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/api/User application/json 165
2024-02-21 04:00:17.371 +03:00 [INF] Executing endpoint 'TgCheckerApi.MapperProfiles.UserController.PostUser (TgCheckerApi)'
2024-02-21 04:00:17.406 +03:00 [INF] Route matched with {action = "PostUser", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TgCheckerApi.Models.BaseModels.User]] PostUser(TgCheckerApi.Models.UserPostModel) on controller TgCheckerApi.MapperProfiles.UserController (TgCheckerApi).
2024-02-21 04:00:17.800 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[@__user_TelegramId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "User" AS u
WHERE u.telegram_id = @__user_TelegramId_0
LIMIT 1
2024-02-21 04:00:17.841 +03:00 [INF] Executing BadRequestObjectResult, writing value of type 'System.String'.
2024-02-21 04:00:17.849 +03:00 [INF] Executed action TgCheckerApi.MapperProfiles.UserController.PostUser (TgCheckerApi) in 434.6211ms
2024-02-21 04:00:17.851 +03:00 [INF] Executed endpoint 'TgCheckerApi.MapperProfiles.UserController.PostUser (TgCheckerApi)'
2024-02-21 04:00:17.866 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/api/User application/json 165 - 400 - text/plain;+charset=utf-8 501.9958ms
2024-02-21 04:00:24.302 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Channel/ExistsByUrl?url=https://t.me/bebratestt - -
2024-02-21 04:00:24.309 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.ChannelController.ChannelExists (TgCheckerApi)'
2024-02-21 04:00:24.320 +03:00 [INF] Route matched with {action = "ChannelExists", controller = "Channel"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Boolean]] ChannelExists(System.String) on controller TgCheckerApi.Controllers.ChannelController (TgCheckerApi).
2024-02-21 04:00:24.519 +03:00 [INF] Executed DbCommand (26ms) [Parameters=[@__url_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Channel" AS c
    WHERE c."Url" = @__url_0)
2024-02-21 04:00:24.559 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Boolean'.
2024-02-21 04:00:24.598 +03:00 [INF] Executed action TgCheckerApi.Controllers.ChannelController.ChannelExists (TgCheckerApi) in 266.662ms
2024-02-21 04:00:24.603 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.ChannelController.ChannelExists (TgCheckerApi)'
2024-02-21 04:00:24.611 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Channel/ExistsByUrl?url=https://t.me/bebratestt - - - 200 5 application/json;+charset=utf-8 309.1959ms
2024-02-21 04:00:28.650 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/User/ByTelegramId/1342147816 - -
2024-02-21 04:00:28.653 +03:00 [INF] Executing endpoint 'TgCheckerApi.MapperProfiles.UserController.GetUserByTelegramId (TgCheckerApi)'
2024-02-21 04:00:28.665 +03:00 [INF] Route matched with {action = "GetUserByTelegramId", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TgCheckerApi.Models.BaseModels.User]] GetUserByTelegramId(Int64) on controller TgCheckerApi.MapperProfiles.UserController (TgCheckerApi).
2024-02-21 04:00:28.695 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__telegramId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "User" AS u
WHERE u.telegram_id = @__telegramId_0
LIMIT 1
2024-02-21 04:00:28.714 +03:00 [INF] Executing ObjectResult, writing value of type 'Castle.Proxies.UserProxy'.
2024-02-21 04:00:28.748 +03:00 [INF] Executed action TgCheckerApi.MapperProfiles.UserController.GetUserByTelegramId (TgCheckerApi) in 76.4027ms
2024-02-21 04:00:28.754 +03:00 [INF] Executed endpoint 'TgCheckerApi.MapperProfiles.UserController.GetUserByTelegramId (TgCheckerApi)'
2024-02-21 04:00:28.758 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/api/Channel application/json 7558
2024-02-21 04:00:28.758 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/User/ByTelegramId/1342147816 - - - 200 8947 application/json;+charset=utf-8 108.7858ms
2024-02-21 04:00:28.762 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.ChannelController.PostChannel (TgCheckerApi)'
2024-02-21 04:00:28.780 +03:00 [INF] Route matched with {action = "PostChannel", controller = "Channel"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TgCheckerApi.Models.BaseModels.Channel]] PostChannel(TgCheckerApi.Models.ChannelPostModel) on controller TgCheckerApi.Controllers.ChannelController (TgCheckerApi).
2024-02-21 04:00:28.852 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__channel_User_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "User" AS u
WHERE u.telegram_id = @__channel_User_0
LIMIT 1
2024-02-21 04:00:29.005 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT max(c."TopPos")
FROM "Channel" AS c
2024-02-21 04:00:29.255 +03:00 [INF] Executed DbCommand (63ms) [Parameters=[@p0='?' (DbType = Binary), @p1='?' (DbType = Decimal), @p2='?', @p3='?', @p4='?' (DbType = Boolean), @p5='?' (DbType = Boolean), @p6='?', @p7='?' (DbType = DateTime2), @p8='?' (DbType = Int32), @p9='?', @p10='?' (DbType = Boolean), @p11='?' (DbType = Boolean), @p12='?' (DbType = Boolean), @p13='?' (DbType = Int32), @p14='?' (DbType = DateTime2), @p15='?' (DbType = Boolean), @p16='?' (DbType = Time), @p17='?' (DbType = Int64), @p18='?' (DbType = Int32), @p19='?', @p20='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Channel" (avatar, bumps, description, flag, "Hidden", "IsPartner", language, last_bump, members, name, notification_sent, notifications, promo_post, promo_post_interval, promo_post_last, promo_post_sent, promo_post_time, telegram_id, "TopPos", "Url", "user")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20)
RETURNING id;
2024-02-21 04:00:29.335 +03:00 [INF] Executing CreatedAtActionResult, writing value of type 'TgCheckerApi.Models.ChannelPostModel'.
2024-02-21 04:00:29.421 +03:00 [INF] Executed action TgCheckerApi.Controllers.ChannelController.PostChannel (TgCheckerApi) in 634.8136ms
2024-02-21 04:00:29.423 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.ChannelController.PostChannel (TgCheckerApi)'
2024-02-21 04:00:29.427 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/api/ChannelAccess application/json 33
2024-02-21 04:00:29.429 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/api/Channel application/json 7558 - 201 7788 application/json;+charset=utf-8 671.3580ms
2024-02-21 04:00:29.432 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.ChannelAccessController.PostChannelAccess (TgCheckerApi)'
2024-02-21 04:00:29.464 +03:00 [INF] Route matched with {action = "PostChannelAccess", controller = "ChannelAccess"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TgCheckerApi.Models.BaseModels.ChannelAccess]] PostChannelAccess(TgCheckerApi.Models.ChannelAccessPostModel) on controller TgCheckerApi.Controllers.ChannelAccessController (TgCheckerApi).
2024-02-21 04:00:29.543 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "ChannelAccess" (channel_id, user_id)
VALUES (@p0, @p1)
RETURNING id;
2024-02-21 04:00:29.566 +03:00 [INF] Executing CreatedAtActionResult, writing value of type 'TgCheckerApi.Models.ChannelAccessPostModel'.
2024-02-21 04:00:29.579 +03:00 [INF] Executed action TgCheckerApi.Controllers.ChannelAccessController.PostChannelAccess (TgCheckerApi) in 99.4017ms
2024-02-21 04:00:29.587 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.ChannelAccessController.PostChannelAccess (TgCheckerApi)'
2024-02-21 04:00:29.591 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/api/ChannelAccess application/json 33 - 201 65 application/json;+charset=utf-8 164.2865ms
2024-02-21 04:05:33.107 +03:00 [INF] User profile is available. Using 'C:\Users\79103\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-21 04:05:33.333 +03:00 [INF] Default Quartz.NET properties loaded from embedded resource file
2024-02-21 04:05:33.394 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-02-21 04:05:33.399 +03:00 [INF] Quartz Scheduler created
2024-02-21 04:05:33.400 +03:00 [INF] RAMJobStore initialized.
2024-02-21 04:05:33.401 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-02-21 04:05:33.402 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-02-21 04:05:33.403 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-02-21 04:05:33.405 +03:00 [INF] JobFactory set to: TgCheckerApi.Job.QuartzJobFactory
2024-02-21 04:05:33.469 +03:00 [INF] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2024-02-21 04:05:33.612 +03:00 [INF] Now listening on: http://localhost:7256
2024-02-21 04:05:33.619 +03:00 [INF] Now listening on: http://localhost:5244
2024-02-21 04:05:33.626 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-21 04:05:33.628 +03:00 [INF] Hosting environment: Development
2024-02-21 04:05:33.629 +03:00 [INF] Content root path: C:\Users\79103\source\Repos\TgCheckerApiCurrent\TgCheckerApi\
2024-02-21 04:05:33.765 +03:00 [INF] RecalculateTopPosJob started at "2024-02-21T04:05:33.7648848+03:00"
2024-02-21 04:05:33.865 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-21 04:05:33.952 +03:00 [WRN] Failed to determine the https port for redirect.
2024-02-21 04:05:34.018 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/index.html - -
2024-02-21 04:05:34.163 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-21 04:05:34.221 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-21 04:05:34.226 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=lygTzrOThJR7f3l8WnpjLw - -
2024-02-21 04:05:34.228 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 366.8370ms
2024-02-21 04:05:34.230 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-21 04:05:34.602 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/index.html - - - 200 - text/html;charset=utf-8 583.6622ms
2024-02-21 04:05:34.621 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_vs/browserLink - -
2024-02-21 04:05:34.624 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - -
2024-02-21 04:05:34.633 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - - - 200 12356 application/javascript;+charset=utf-8 9.3748ms
2024-02-21 04:05:34.659 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 37.4947ms
2024-02-21 04:05:34.859 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - -
2024-02-21 04:05:35.121 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 261.8818ms
2024-02-21 04:05:35.345 +03:00 [ERR] Error occurred executing RecalculateTopPosJob.
System.InvalidOperationException: The relationship from 'Channel.UserNavigation' to 'User.Channels' with foreign key properties {'User' : long?} cannot target the primary key {'Id' : int} because it is not compatible. Configure a principal key or a set of foreign key properties with compatible types for this relationship.
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelValidator.ValidateNoShadowKeys(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.Internal.NpgsqlModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelRuntimeInitializer.Initialize(IModel model, Boolean designTime, IDiagnosticsLogger`1 validationLogger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.GetModel(DbContext context, ModelCreationDependencies modelCreationDependencies, Boolean designTime)
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.CreateModel(Boolean designTime)
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.get_Model()
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at Microsoft.EntityFrameworkCore.DbContext.get_DbContextDependencies()
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at System.Linq.Queryable.OrderByDescending[TSource,TKey](IQueryable`1 source, Expression`1 keySelector)
   at TgCheckerApi.Job.RecalculateTopPosJob.Execute(IJobExecutionContext context) in C:\Users\79103\source\Repos\TgCheckerApiCurrent\TgCheckerApi\Job\RecalculateRatingJob.cs:line 25
2024-02-21 04:05:35.472 +03:00 [INF] RecalculateTopPosJob completed at "2024-02-21T04:05:35.4723978+03:00"
