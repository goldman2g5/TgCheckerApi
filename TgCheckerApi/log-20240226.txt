2024-02-26 20:02:09.371 +03:00 [INF] User profile is available. Using 'C:\Users\timar\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-26 20:02:09.673 +03:00 [INF] Default Quartz.NET properties loaded from embedded resource file
2024-02-26 20:02:09.718 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-02-26 20:02:09.719 +03:00 [INF] Quartz Scheduler created
2024-02-26 20:02:09.721 +03:00 [INF] RAMJobStore initialized.
2024-02-26 20:02:09.722 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-02-26 20:02:09.724 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-02-26 20:02:09.724 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-02-26 20:02:09.726 +03:00 [INF] JobFactory set to: TgCheckerApi.Job.QuartzJobFactory
2024-02-26 20:02:09.777 +03:00 [INF] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2024-02-26 20:02:10.066 +03:00 [INF] Now listening on: https://localhost:7256
2024-02-26 20:02:10.066 +03:00 [INF] Now listening on: https://localhost:5244
2024-02-26 20:02:10.070 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-26 20:02:10.071 +03:00 [INF] Hosting environment: Development
2024-02-26 20:02:10.071 +03:00 [INF] Content root path: C:\Users\timar\source\Repos\goldman2g5\TgCheckerApi\TgCheckerApi\
2024-02-26 20:02:10.108 +03:00 [INF] RecalculateTopPosJob started at "2024-02-26T20:02:10.1077975+03:00"
2024-02-26 20:02:10.751 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/swagger/index.html - -
2024-02-26 20:02:11.090 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/swagger/index.html - - - 200 - text/html;charset=utf-8 341.3279ms
2024-02-26 20:02:11.111 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/_framework/aspnetcore-browser-refresh.js - -
2024-02-26 20:02:11.117 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/_vs/browserLink - -
2024-02-26 20:02:11.120 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/_framework/aspnetcore-browser-refresh.js - - - 200 12356 application/javascript;+charset=utf-8 9.4941ms
2024-02-26 20:02:11.159 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 42.2797ms
2024-02-26 20:02:11.212 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/swagger/v1/swagger.json - -
2024-02-26 20:02:11.345 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 132.9440ms
2024-02-26 20:02:17.756 +03:00 [INF] Executed DbCommand (415ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c."IsPartner", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."TopPos", c."Url", c."user"
FROM "Channel" AS c
ORDER BY c.bumps DESC
2024-02-26 20:02:17.942 +03:00 [INF] RecalculateTopPosJob completed at "2024-02-26T20:02:17.9422585+03:00"
2024-02-26 20:02:19.934 +03:00 [INF] Start processing HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-26 20:02:19.936 +03:00 [INF] Sending HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-26 20:02:20.244 +03:00 [INF] Received HTTP response headers after 303.7172ms - 200
2024-02-26 20:02:20.247 +03:00 [INF] End processing HTTP request after 318.887ms - 200
2024-02-26 20:02:20.251 +03:00 [INF] Successfully processed all channels via HTTP request at: {DateTime.UtcNow}
2024-02-26 20:02:38.562 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7256/api/Bot/SubscribersHistory application/json-patch+json 58
2024-02-26 20:02:38.567 +03:00 [INF] CORS policy execution successful.
2024-02-26 20:02:38.687 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.BotController.GetSubscribersHistoryAsync (TgCheckerApi)'
2024-02-26 20:02:38.717 +03:00 [INF] Route matched with {action = "GetSubscribersHistory", controller = "Bot"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[System.Double]]] GetSubscribersHistoryAsync(SubHistoryRequest) on controller TgCheckerApi.Controllers.BotController (TgCheckerApi).
2024-02-26 20:02:39.228 +03:00 [INF] Executed DbCommand (312ms) [Parameters=[@__channelId_0='?' (DbType = Int32), @__startDate_1='?' (DbType = DateTime), @__endDate_2='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.date, s.sheet, s.subscribers
FROM "SubscribersRecord" AS s
INNER JOIN "StatisticsSheet" AS s0 ON s.sheet = s0.id
WHERE s0.channel_id = @__channelId_0 AND s.date >= @__startDate_1 AND s.date <= @__endDate_2
2024-02-26 20:02:39.246 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.Double, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-02-26 20:02:39.268 +03:00 [INF] Executed action TgCheckerApi.Controllers.BotController.GetSubscribersHistoryAsync (TgCheckerApi) in 540.0694ms
2024-02-26 20:02:39.270 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.BotController.GetSubscribersHistoryAsync (TgCheckerApi)'
2024-02-26 20:02:39.281 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7256/api/Bot/SubscribersHistory application/json-patch+json 58 - 200 187 application/json;+charset=utf-8 718.9700ms
2024-02-26 20:09:06.376 +03:00 [INF] User profile is available. Using 'C:\Users\timar\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-26 20:09:06.681 +03:00 [INF] Default Quartz.NET properties loaded from embedded resource file
2024-02-26 20:09:06.723 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-02-26 20:09:06.726 +03:00 [INF] Quartz Scheduler created
2024-02-26 20:09:06.727 +03:00 [INF] RAMJobStore initialized.
2024-02-26 20:09:06.728 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-02-26 20:09:06.729 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-02-26 20:09:06.729 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-02-26 20:09:06.730 +03:00 [INF] JobFactory set to: TgCheckerApi.Job.QuartzJobFactory
2024-02-26 20:09:06.772 +03:00 [INF] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2024-02-26 20:09:06.897 +03:00 [INF] Now listening on: https://localhost:7256
2024-02-26 20:09:06.898 +03:00 [INF] Now listening on: https://localhost:5244
2024-02-26 20:09:06.901 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-26 20:09:06.902 +03:00 [INF] Hosting environment: Development
2024-02-26 20:09:06.903 +03:00 [INF] Content root path: C:\Users\timar\source\Repos\goldman2g5\TgCheckerApi\TgCheckerApi\
2024-02-26 20:09:06.958 +03:00 [INF] RecalculateTopPosJob started at "2024-02-26T20:09:06.9557970+03:00"
2024-02-26 20:09:07.157 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/swagger/index.html - -
2024-02-26 20:09:07.406 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/swagger/index.html - - - 200 - text/html;charset=utf-8 252.7057ms
2024-02-26 20:09:07.416 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/_framework/aspnetcore-browser-refresh.js - -
2024-02-26 20:09:07.416 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/_vs/browserLink - -
2024-02-26 20:09:07.423 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/_framework/aspnetcore-browser-refresh.js - - - 200 12356 application/javascript;+charset=utf-8 6.6848ms
2024-02-26 20:09:07.429 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 12.4764ms
2024-02-26 20:09:07.467 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/swagger/v1/swagger.json - -
2024-02-26 20:09:07.592 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 125.6528ms
2024-02-26 20:09:08.552 +03:00 [INF] Executed DbCommand (49ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c."IsPartner", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."TopPos", c."Url", c."user"
FROM "Channel" AS c
ORDER BY c.bumps DESC
2024-02-26 20:09:08.726 +03:00 [INF] RecalculateTopPosJob completed at "2024-02-26T20:09:08.7261090+03:00"
2024-02-26 20:09:16.974 +03:00 [INF] Start processing HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-26 20:09:16.979 +03:00 [INF] Sending HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-26 20:09:17.541 +03:00 [INF] Received HTTP response headers after 549.8877ms - 200
2024-02-26 20:09:17.544 +03:00 [INF] End processing HTTP request after 580.5066ms - 200
2024-02-26 20:09:17.549 +03:00 [INF] Successfully processed all channels via HTTP request at: {DateTime.UtcNow}
2024-02-26 20:14:33.945 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7256/api/Bot/SubscribersHistory application/json-patch+json 58
2024-02-26 20:14:33.957 +03:00 [INF] CORS policy execution successful.
2024-02-26 20:14:34.056 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.BotController.GetSubscribersHistoryAsync (TgCheckerApi)'
2024-02-26 20:14:34.090 +03:00 [INF] Route matched with {action = "GetSubscribersHistory", controller = "Bot"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[System.Double]]] GetSubscribersHistoryAsync(SubHistoryRequest) on controller TgCheckerApi.Controllers.BotController (TgCheckerApi).
2024-02-26 20:14:34.441 +03:00 [INF] Executed DbCommand (25ms) [Parameters=[@__channelId_0='?' (DbType = Int32), @__startDate_1='?' (DbType = DateTime), @__endDate_2='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.date, s.sheet, s.subscribers
FROM "SubscribersRecord" AS s
INNER JOIN "StatisticsSheet" AS s0 ON s.sheet = s0.id
WHERE s0.channel_id = @__channelId_0 AND s.date >= @__startDate_1 AND s.date <= @__endDate_2
2024-02-26 20:14:34.480 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.Double, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-02-26 20:14:34.506 +03:00 [INF] Executed action TgCheckerApi.Controllers.BotController.GetSubscribersHistoryAsync (TgCheckerApi) in 407.92ms
2024-02-26 20:14:34.508 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.BotController.GetSubscribersHistoryAsync (TgCheckerApi)'
2024-02-26 20:14:34.525 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7256/api/Bot/SubscribersHistory application/json-patch+json 58 - 200 91 application/json;+charset=utf-8 580.1235ms
2024-02-26 20:16:00.012 +03:00 [INF] RecalculateTopPosJob started at "2024-02-26T20:16:00.0128277+03:00"
2024-02-26 20:16:00.071 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c."IsPartner", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."TopPos", c."Url", c."user"
FROM "Channel" AS c
ORDER BY c.bumps DESC
2024-02-26 20:16:00.074 +03:00 [INF] RecalculateTopPosJob completed at "2024-02-26T20:16:00.0745182+03:00"
2024-02-26 20:17:14.989 +03:00 [INF] User profile is available. Using 'C:\Users\timar\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-26 20:17:15.129 +03:00 [INF] Default Quartz.NET properties loaded from embedded resource file
2024-02-26 20:17:15.171 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-02-26 20:17:15.172 +03:00 [INF] Quartz Scheduler created
2024-02-26 20:17:15.176 +03:00 [INF] RAMJobStore initialized.
2024-02-26 20:17:15.177 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-02-26 20:17:15.178 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-02-26 20:17:15.179 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-02-26 20:17:15.181 +03:00 [INF] JobFactory set to: TgCheckerApi.Job.QuartzJobFactory
2024-02-26 20:17:15.221 +03:00 [INF] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2024-02-26 20:17:15.350 +03:00 [INF] Now listening on: https://localhost:7256
2024-02-26 20:17:15.351 +03:00 [INF] Now listening on: https://localhost:5244
2024-02-26 20:17:15.355 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-26 20:17:15.355 +03:00 [INF] Hosting environment: Development
2024-02-26 20:17:15.356 +03:00 [INF] Content root path: C:\Users\timar\source\Repos\goldman2g5\TgCheckerApi\TgCheckerApi\
2024-02-26 20:17:15.413 +03:00 [INF] RecalculateTopPosJob started at "2024-02-26T20:17:15.4132092+03:00"
2024-02-26 20:17:15.788 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/swagger/index.html - -
2024-02-26 20:17:16.048 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/swagger/index.html - - - 200 - text/html;charset=utf-8 262.9265ms
2024-02-26 20:17:16.050 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/_framework/aspnetcore-browser-refresh.js - -
2024-02-26 20:17:16.055 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/_vs/browserLink - -
2024-02-26 20:17:16.058 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/_framework/aspnetcore-browser-refresh.js - - - 200 12356 application/javascript;+charset=utf-8 8.0673ms
2024-02-26 20:17:16.070 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 14.9818ms
2024-02-26 20:17:16.214 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/swagger/v1/swagger.json - -
2024-02-26 20:17:16.336 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 122.0850ms
2024-02-26 20:17:16.936 +03:00 [INF] Executed DbCommand (49ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c."IsPartner", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."TopPos", c."Url", c."user"
FROM "Channel" AS c
ORDER BY c.bumps DESC
2024-02-26 20:17:17.118 +03:00 [INF] RecalculateTopPosJob completed at "2024-02-26T20:17:17.1189377+03:00"
2024-02-26 20:17:25.416 +03:00 [INF] Start processing HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-26 20:17:25.420 +03:00 [INF] Sending HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-26 20:17:25.696 +03:00 [INF] Received HTTP response headers after 270.4913ms - 200
2024-02-26 20:17:25.700 +03:00 [INF] End processing HTTP request after 294.3583ms - 200
2024-02-26 20:17:25.704 +03:00 [INF] Successfully processed all channels via HTTP request at: {DateTime.UtcNow}
2024-02-26 20:17:25.908 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7256/api/Bot/SubscribersHistory application/json-patch+json 58
2024-02-26 20:17:25.924 +03:00 [INF] CORS policy execution successful.
2024-02-26 20:17:26.020 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.BotController.GetSubscribersHistoryAsync (TgCheckerApi)'
2024-02-26 20:17:26.056 +03:00 [INF] Route matched with {action = "GetSubscribersHistory", controller = "Bot"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[TgCheckerApi.Controllers.BotController+SubscriberHistoryItem]]] GetSubscribersHistoryAsync(SubHistoryRequest) on controller TgCheckerApi.Controllers.BotController (TgCheckerApi).
2024-02-26 20:17:26.380 +03:00 [ERR] Failed executing DbCommand (11ms) [Parameters=[@__channelId_0='?' (DbType = Int32), @__startDate_1='?' (DbType = DateTime), @__endDate_2='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.date, s.sheet, s.subscribers
FROM "SubscribersRecord" AS s
INNER JOIN "StatisticsSheet" AS s0 ON s.sheet = s0.id
WHERE s0.channel_id = @__channelId_0 AND s.date >= @__startDate_1 AND s.date <= @__endDate_2
2024-02-26 20:17:26.462 +03:00 [ERR] An exception occurred while iterating over the results of a query for context type 'TgCheckerApi.Models.BaseModels.TgDbContext'.
System.InvalidCastException: Cannot write DateTime with Kind=Unspecified to PostgreSQL type 'timestamp with time zone', only UTC is supported. Note that it's not possible to mix DateTimes with different Kinds in an array/range. See the Npgsql.EnableLegacyTimestampBehavior AppContext switch to enable legacy behavior.
   at Npgsql.Internal.TypeHandlers.DateTimeHandlers.TimestampTzHandler.ValidateAndGetLength(DateTime value, NpgsqlParameter parameter)
   at Npgsql.Internal.TypeHandlers.DateTimeHandlers.TimestampTzHandler.ValidateObjectAndGetLength(Object value, NpgsqlLengthCache& lengthCache, NpgsqlParameter parameter)
   at Npgsql.NpgsqlParameter.ValidateAndGetLength()
   at Npgsql.NpgsqlParameterCollection.ProcessParameters(TypeMapper typeMapper, Boolean validateValues, CommandType commandType)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
System.InvalidCastException: Cannot write DateTime with Kind=Unspecified to PostgreSQL type 'timestamp with time zone', only UTC is supported. Note that it's not possible to mix DateTimes with different Kinds in an array/range. See the Npgsql.EnableLegacyTimestampBehavior AppContext switch to enable legacy behavior.
   at Npgsql.Internal.TypeHandlers.DateTimeHandlers.TimestampTzHandler.ValidateAndGetLength(DateTime value, NpgsqlParameter parameter)
   at Npgsql.Internal.TypeHandlers.DateTimeHandlers.TimestampTzHandler.ValidateObjectAndGetLength(Object value, NpgsqlLengthCache& lengthCache, NpgsqlParameter parameter)
   at Npgsql.NpgsqlParameter.ValidateAndGetLength()
   at Npgsql.NpgsqlParameterCollection.ProcessParameters(TypeMapper typeMapper, Boolean validateValues, CommandType commandType)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
2024-02-26 20:17:26.602 +03:00 [INF] Executed action TgCheckerApi.Controllers.BotController.GetSubscribersHistoryAsync (TgCheckerApi) in 537.4783ms
2024-02-26 20:17:26.606 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.BotController.GetSubscribersHistoryAsync (TgCheckerApi)'
2024-02-26 20:17:26.608 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidCastException: Cannot write DateTime with Kind=Unspecified to PostgreSQL type 'timestamp with time zone', only UTC is supported. Note that it's not possible to mix DateTimes with different Kinds in an array/range. See the Npgsql.EnableLegacyTimestampBehavior AppContext switch to enable legacy behavior.
   at Npgsql.Internal.TypeHandlers.DateTimeHandlers.TimestampTzHandler.ValidateAndGetLength(DateTime value, NpgsqlParameter parameter)
   at Npgsql.Internal.TypeHandlers.DateTimeHandlers.TimestampTzHandler.ValidateObjectAndGetLength(Object value, NpgsqlLengthCache& lengthCache, NpgsqlParameter parameter)
   at Npgsql.NpgsqlParameter.ValidateAndGetLength()
   at Npgsql.NpgsqlParameterCollection.ProcessParameters(TypeMapper typeMapper, Boolean validateValues, CommandType commandType)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at TgCheckerApi.Services.BotControllerService.CalculateDailySubscribersHistory(DateTime startDate, DateTime endDate, Int32 channelId) in C:\Users\timar\source\Repos\goldman2g5\TgCheckerApi\TgCheckerApi\Services\BotControllerService.cs:line 551
   at TgCheckerApi.Controllers.BotController.GetSubscribersHistoryAsync(SubHistoryRequest dailyViewsRequest) in C:\Users\timar\source\Repos\goldman2g5\TgCheckerApi\TgCheckerApi\Controllers\BotController.cs:line 362
   at lambda_method311(Closure , Object )
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2024-02-26 20:17:26.679 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7256/api/Bot/SubscribersHistory application/json-patch+json 58 - 500 - text/plain;+charset=utf-8 770.5843ms
2024-02-26 20:21:28.780 +03:00 [INF] User profile is available. Using 'C:\Users\timar\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-26 20:21:28.925 +03:00 [INF] Default Quartz.NET properties loaded from embedded resource file
2024-02-26 20:21:28.961 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-02-26 20:21:28.966 +03:00 [INF] Quartz Scheduler created
2024-02-26 20:21:28.967 +03:00 [INF] RAMJobStore initialized.
2024-02-26 20:21:28.967 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-02-26 20:21:28.968 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-02-26 20:21:28.968 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-02-26 20:21:28.970 +03:00 [INF] JobFactory set to: TgCheckerApi.Job.QuartzJobFactory
2024-02-26 20:21:29.010 +03:00 [INF] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2024-02-26 20:21:29.135 +03:00 [INF] Now listening on: https://localhost:7256
2024-02-26 20:21:29.136 +03:00 [INF] Now listening on: https://localhost:5244
2024-02-26 20:21:29.140 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-26 20:21:29.140 +03:00 [INF] Hosting environment: Development
2024-02-26 20:21:29.141 +03:00 [INF] Content root path: C:\Users\timar\source\Repos\goldman2g5\TgCheckerApi\TgCheckerApi\
2024-02-26 20:21:29.195 +03:00 [INF] RecalculateTopPosJob started at "2024-02-26T20:21:29.1944693+03:00"
2024-02-26 20:21:29.672 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/swagger/index.html - -
2024-02-26 20:21:29.945 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/_framework/aspnetcore-browser-refresh.js - -
2024-02-26 20:21:29.946 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/swagger/index.html - - - 200 - text/html;charset=utf-8 275.9938ms
2024-02-26 20:21:29.952 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/_vs/browserLink - -
2024-02-26 20:21:29.953 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/_framework/aspnetcore-browser-refresh.js - - - 200 12356 application/javascript;+charset=utf-8 7.9306ms
2024-02-26 20:21:29.964 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 11.8661ms
2024-02-26 20:21:30.036 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/swagger/v1/swagger.json - -
2024-02-26 20:21:30.177 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 140.9154ms
2024-02-26 20:21:30.751 +03:00 [INF] Executed DbCommand (51ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c."IsPartner", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."TopPos", c."Url", c."user"
FROM "Channel" AS c
ORDER BY c.bumps DESC
2024-02-26 20:21:30.930 +03:00 [INF] RecalculateTopPosJob completed at "2024-02-26T20:21:30.9301590+03:00"
2024-02-26 20:21:38.584 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7256/api/Bot/SubscribersHistory application/json-patch+json 58
2024-02-26 20:21:38.593 +03:00 [INF] CORS policy execution successful.
2024-02-26 20:21:38.708 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.BotController.GetSubscribersHistoryAsync (TgCheckerApi)'
2024-02-26 20:21:38.747 +03:00 [INF] Route matched with {action = "GetSubscribersHistory", controller = "Bot"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[TgCheckerApi.Controllers.BotController+SubscriberHistoryItem]]] GetSubscribersHistoryAsync(SubHistoryRequest) on controller TgCheckerApi.Controllers.BotController (TgCheckerApi).
2024-02-26 20:21:39.141 +03:00 [INF] Start processing HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-26 20:21:39.145 +03:00 [INF] Sending HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-26 20:21:39.154 +03:00 [ERR] Failed executing DbCommand (10ms) [Parameters=[@__channelId_0='?' (DbType = Int32), @__startDate_1='?' (DbType = DateTime), @__endDate_2='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.date, s.sheet, s.subscribers
FROM "SubscribersRecord" AS s
INNER JOIN "StatisticsSheet" AS s0 ON s.sheet = s0.id
WHERE s0.channel_id = @__channelId_0 AND s.date >= @__startDate_1 AND s.date <= @__endDate_2
2024-02-26 20:21:39.191 +03:00 [ERR] An exception occurred while iterating over the results of a query for context type 'TgCheckerApi.Models.BaseModels.TgDbContext'.
System.InvalidCastException: Cannot write DateTime with Kind=Unspecified to PostgreSQL type 'timestamp with time zone', only UTC is supported. Note that it's not possible to mix DateTimes with different Kinds in an array/range. See the Npgsql.EnableLegacyTimestampBehavior AppContext switch to enable legacy behavior.
   at Npgsql.Internal.TypeHandlers.DateTimeHandlers.TimestampTzHandler.ValidateAndGetLength(DateTime value, NpgsqlParameter parameter)
   at Npgsql.Internal.TypeHandlers.DateTimeHandlers.TimestampTzHandler.ValidateObjectAndGetLength(Object value, NpgsqlLengthCache& lengthCache, NpgsqlParameter parameter)
   at Npgsql.NpgsqlParameter.ValidateAndGetLength()
   at Npgsql.NpgsqlParameterCollection.ProcessParameters(TypeMapper typeMapper, Boolean validateValues, CommandType commandType)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
System.InvalidCastException: Cannot write DateTime with Kind=Unspecified to PostgreSQL type 'timestamp with time zone', only UTC is supported. Note that it's not possible to mix DateTimes with different Kinds in an array/range. See the Npgsql.EnableLegacyTimestampBehavior AppContext switch to enable legacy behavior.
   at Npgsql.Internal.TypeHandlers.DateTimeHandlers.TimestampTzHandler.ValidateAndGetLength(DateTime value, NpgsqlParameter parameter)
   at Npgsql.Internal.TypeHandlers.DateTimeHandlers.TimestampTzHandler.ValidateObjectAndGetLength(Object value, NpgsqlLengthCache& lengthCache, NpgsqlParameter parameter)
   at Npgsql.NpgsqlParameter.ValidateAndGetLength()
   at Npgsql.NpgsqlParameterCollection.ProcessParameters(TypeMapper typeMapper, Boolean validateValues, CommandType commandType)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
2024-02-26 20:21:39.304 +03:00 [INF] Executed action TgCheckerApi.Controllers.BotController.GetSubscribersHistoryAsync (TgCheckerApi) in 548.8366ms
2024-02-26 20:21:39.307 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.BotController.GetSubscribersHistoryAsync (TgCheckerApi)'
2024-02-26 20:21:39.309 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidCastException: Cannot write DateTime with Kind=Unspecified to PostgreSQL type 'timestamp with time zone', only UTC is supported. Note that it's not possible to mix DateTimes with different Kinds in an array/range. See the Npgsql.EnableLegacyTimestampBehavior AppContext switch to enable legacy behavior.
   at Npgsql.Internal.TypeHandlers.DateTimeHandlers.TimestampTzHandler.ValidateAndGetLength(DateTime value, NpgsqlParameter parameter)
   at Npgsql.Internal.TypeHandlers.DateTimeHandlers.TimestampTzHandler.ValidateObjectAndGetLength(Object value, NpgsqlLengthCache& lengthCache, NpgsqlParameter parameter)
   at Npgsql.NpgsqlParameter.ValidateAndGetLength()
   at Npgsql.NpgsqlParameterCollection.ProcessParameters(TypeMapper typeMapper, Boolean validateValues, CommandType commandType)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at TgCheckerApi.Services.BotControllerService.CalculateDailySubscribersHistory(DateTime startDate, DateTime endDate, Int32 channelId) in C:\Users\timar\source\Repos\goldman2g5\TgCheckerApi\TgCheckerApi\Services\BotControllerService.cs:line 551
   at TgCheckerApi.Controllers.BotController.GetSubscribersHistoryAsync(SubHistoryRequest dailyViewsRequest) in C:\Users\timar\source\Repos\goldman2g5\TgCheckerApi\TgCheckerApi\Controllers\BotController.cs:line 362
   at lambda_method309(Closure , Object )
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2024-02-26 20:21:39.358 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7256/api/Bot/SubscribersHistory application/json-patch+json 58 - 500 - text/plain;+charset=utf-8 773.9079ms
2024-02-26 20:21:39.540 +03:00 [INF] Received HTTP response headers after 388.8334ms - 200
2024-02-26 20:21:39.543 +03:00 [INF] End processing HTTP request after 409.0649ms - 200
2024-02-26 20:21:39.547 +03:00 [INF] Successfully processed all channels via HTTP request at: {DateTime.UtcNow}
2024-02-26 20:21:51.899 +03:00 [INF] User profile is available. Using 'C:\Users\timar\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-26 20:21:52.046 +03:00 [INF] Default Quartz.NET properties loaded from embedded resource file
2024-02-26 20:21:52.085 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-02-26 20:21:52.089 +03:00 [INF] Quartz Scheduler created
2024-02-26 20:21:52.090 +03:00 [INF] RAMJobStore initialized.
2024-02-26 20:21:52.091 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-02-26 20:21:52.091 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-02-26 20:21:52.092 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-02-26 20:21:52.093 +03:00 [INF] JobFactory set to: TgCheckerApi.Job.QuartzJobFactory
2024-02-26 20:21:52.135 +03:00 [INF] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2024-02-26 20:21:52.263 +03:00 [INF] Now listening on: https://localhost:7256
2024-02-26 20:21:52.264 +03:00 [INF] Now listening on: https://localhost:5244
2024-02-26 20:21:52.268 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-26 20:21:52.269 +03:00 [INF] Hosting environment: Development
2024-02-26 20:21:52.270 +03:00 [INF] Content root path: C:\Users\timar\source\Repos\goldman2g5\TgCheckerApi\TgCheckerApi\
2024-02-26 20:21:52.372 +03:00 [INF] RecalculateTopPosJob started at "2024-02-26T20:21:52.3720895+03:00"
2024-02-26 20:21:52.865 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/swagger/index.html - -
2024-02-26 20:21:53.123 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/swagger/index.html - - - 200 - text/html;charset=utf-8 260.5604ms
2024-02-26 20:21:53.125 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/_framework/aspnetcore-browser-refresh.js - -
2024-02-26 20:21:53.136 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/_vs/browserLink - -
2024-02-26 20:21:53.139 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/_framework/aspnetcore-browser-refresh.js - - - 200 12356 application/javascript;+charset=utf-8 14.2858ms
2024-02-26 20:21:53.146 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 9.7718ms
2024-02-26 20:21:53.217 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/swagger/v1/swagger.json - -
2024-02-26 20:21:53.354 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 137.1759ms
2024-02-26 20:21:53.951 +03:00 [INF] Executed DbCommand (50ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c."IsPartner", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."TopPos", c."Url", c."user"
FROM "Channel" AS c
ORDER BY c.bumps DESC
2024-02-26 20:21:54.138 +03:00 [INF] RecalculateTopPosJob completed at "2024-02-26T20:21:54.1384477+03:00"
2024-02-26 20:21:59.355 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7256/api/Bot/SubscribersHistory application/json-patch+json 58
2024-02-26 20:21:59.362 +03:00 [INF] CORS policy execution successful.
2024-02-26 20:21:59.481 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.BotController.GetSubscribersHistoryAsync (TgCheckerApi)'
2024-02-26 20:21:59.517 +03:00 [INF] Route matched with {action = "GetSubscribersHistory", controller = "Bot"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[TgCheckerApi.Controllers.BotController+SubscriberHistoryItem]]] GetSubscribersHistoryAsync(SubHistoryRequest) on controller TgCheckerApi.Controllers.BotController (TgCheckerApi).
2024-02-26 20:21:59.898 +03:00 [ERR] Failed executing DbCommand (10ms) [Parameters=[@__channelId_0='?' (DbType = Int32), @__startDate_1='?' (DbType = DateTime), @__endDate_2='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.date, s.sheet, s.subscribers
FROM "SubscribersRecord" AS s
INNER JOIN "StatisticsSheet" AS s0 ON s.sheet = s0.id
WHERE s0.channel_id = @__channelId_0 AND s.date >= @__startDate_1 AND s.date <= @__endDate_2
2024-02-26 20:21:59.938 +03:00 [ERR] An exception occurred while iterating over the results of a query for context type 'TgCheckerApi.Models.BaseModels.TgDbContext'.
System.InvalidCastException: Cannot write DateTime with Kind=Unspecified to PostgreSQL type 'timestamp with time zone', only UTC is supported. Note that it's not possible to mix DateTimes with different Kinds in an array/range. See the Npgsql.EnableLegacyTimestampBehavior AppContext switch to enable legacy behavior.
   at Npgsql.Internal.TypeHandlers.DateTimeHandlers.TimestampTzHandler.ValidateAndGetLength(DateTime value, NpgsqlParameter parameter)
   at Npgsql.Internal.TypeHandlers.DateTimeHandlers.TimestampTzHandler.ValidateObjectAndGetLength(Object value, NpgsqlLengthCache& lengthCache, NpgsqlParameter parameter)
   at Npgsql.NpgsqlParameter.ValidateAndGetLength()
   at Npgsql.NpgsqlParameterCollection.ProcessParameters(TypeMapper typeMapper, Boolean validateValues, CommandType commandType)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
System.InvalidCastException: Cannot write DateTime with Kind=Unspecified to PostgreSQL type 'timestamp with time zone', only UTC is supported. Note that it's not possible to mix DateTimes with different Kinds in an array/range. See the Npgsql.EnableLegacyTimestampBehavior AppContext switch to enable legacy behavior.
   at Npgsql.Internal.TypeHandlers.DateTimeHandlers.TimestampTzHandler.ValidateAndGetLength(DateTime value, NpgsqlParameter parameter)
   at Npgsql.Internal.TypeHandlers.DateTimeHandlers.TimestampTzHandler.ValidateObjectAndGetLength(Object value, NpgsqlLengthCache& lengthCache, NpgsqlParameter parameter)
   at Npgsql.NpgsqlParameter.ValidateAndGetLength()
   at Npgsql.NpgsqlParameterCollection.ProcessParameters(TypeMapper typeMapper, Boolean validateValues, CommandType commandType)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
2024-02-26 20:22:00.047 +03:00 [INF] Executed action TgCheckerApi.Controllers.BotController.GetSubscribersHistoryAsync (TgCheckerApi) in 522.3892ms
2024-02-26 20:22:00.051 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.BotController.GetSubscribersHistoryAsync (TgCheckerApi)'
2024-02-26 20:22:00.053 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidCastException: Cannot write DateTime with Kind=Unspecified to PostgreSQL type 'timestamp with time zone', only UTC is supported. Note that it's not possible to mix DateTimes with different Kinds in an array/range. See the Npgsql.EnableLegacyTimestampBehavior AppContext switch to enable legacy behavior.
   at Npgsql.Internal.TypeHandlers.DateTimeHandlers.TimestampTzHandler.ValidateAndGetLength(DateTime value, NpgsqlParameter parameter)
   at Npgsql.Internal.TypeHandlers.DateTimeHandlers.TimestampTzHandler.ValidateObjectAndGetLength(Object value, NpgsqlLengthCache& lengthCache, NpgsqlParameter parameter)
   at Npgsql.NpgsqlParameter.ValidateAndGetLength()
   at Npgsql.NpgsqlParameterCollection.ProcessParameters(TypeMapper typeMapper, Boolean validateValues, CommandType commandType)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at TgCheckerApi.Services.BotControllerService.CalculateDailySubscribersHistory(DateTime startDate, DateTime endDate, Int32 channelId) in C:\Users\timar\source\Repos\goldman2g5\TgCheckerApi\TgCheckerApi\Services\BotControllerService.cs:line 551
   at TgCheckerApi.Controllers.BotController.GetSubscribersHistoryAsync(SubHistoryRequest dailyViewsRequest) in C:\Users\timar\source\Repos\goldman2g5\TgCheckerApi\TgCheckerApi\Controllers\BotController.cs:line 362
   at lambda_method309(Closure , Object )
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2024-02-26 20:22:00.101 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7256/api/Bot/SubscribersHistory application/json-patch+json 58 - 500 - text/plain;+charset=utf-8 746.1308ms
2024-02-26 20:22:02.259 +03:00 [INF] Start processing HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-26 20:22:02.263 +03:00 [INF] Sending HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-26 20:22:02.882 +03:00 [INF] Received HTTP response headers after 613.7998ms - 200
2024-02-26 20:22:02.884 +03:00 [INF] End processing HTTP request after 632.0442ms - 200
2024-02-26 20:22:02.889 +03:00 [INF] Successfully processed all channels via HTTP request at: {DateTime.UtcNow}
2024-02-26 20:22:13.741 +03:00 [INF] User profile is available. Using 'C:\Users\timar\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-26 20:22:13.894 +03:00 [INF] Default Quartz.NET properties loaded from embedded resource file
2024-02-26 20:22:13.931 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-02-26 20:22:13.935 +03:00 [INF] Quartz Scheduler created
2024-02-26 20:22:13.936 +03:00 [INF] RAMJobStore initialized.
2024-02-26 20:22:13.937 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-02-26 20:22:13.937 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-02-26 20:22:13.938 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-02-26 20:22:13.939 +03:00 [INF] JobFactory set to: TgCheckerApi.Job.QuartzJobFactory
2024-02-26 20:22:13.982 +03:00 [INF] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2024-02-26 20:22:14.117 +03:00 [INF] Now listening on: https://localhost:7256
2024-02-26 20:22:14.118 +03:00 [INF] Now listening on: https://localhost:5244
2024-02-26 20:22:14.126 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-26 20:22:14.126 +03:00 [INF] Hosting environment: Development
2024-02-26 20:22:14.127 +03:00 [INF] Content root path: C:\Users\timar\source\Repos\goldman2g5\TgCheckerApi\TgCheckerApi\
2024-02-26 20:22:14.173 +03:00 [INF] RecalculateTopPosJob started at "2024-02-26T20:22:14.1725753+03:00"
2024-02-26 20:22:14.612 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/swagger/index.html - -
2024-02-26 20:22:14.866 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/swagger/index.html - - - 200 - text/html;charset=utf-8 256.5685ms
2024-02-26 20:22:14.867 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/_framework/aspnetcore-browser-refresh.js - -
2024-02-26 20:22:14.873 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/_vs/browserLink - -
2024-02-26 20:22:14.875 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/_framework/aspnetcore-browser-refresh.js - - - 200 12356 application/javascript;+charset=utf-8 7.7261ms
2024-02-26 20:22:14.887 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 14.0234ms
2024-02-26 20:22:14.962 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/swagger/v1/swagger.json - -
2024-02-26 20:22:15.101 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 138.7074ms
2024-02-26 20:22:15.722 +03:00 [INF] Executed DbCommand (51ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c."IsPartner", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."TopPos", c."Url", c."user"
FROM "Channel" AS c
ORDER BY c.bumps DESC
2024-02-26 20:22:15.900 +03:00 [INF] RecalculateTopPosJob completed at "2024-02-26T20:22:15.9006993+03:00"
2024-02-26 20:22:23.004 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7256/api/Bot/SubscribersHistory application/json-patch+json 58
2024-02-26 20:22:23.013 +03:00 [INF] CORS policy execution successful.
2024-02-26 20:22:23.123 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.BotController.GetSubscribersHistoryAsync (TgCheckerApi)'
2024-02-26 20:22:23.158 +03:00 [INF] Route matched with {action = "GetSubscribersHistory", controller = "Bot"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[TgCheckerApi.Controllers.BotController+SubscriberHistoryItem]]] GetSubscribersHistoryAsync(SubHistoryRequest) on controller TgCheckerApi.Controllers.BotController (TgCheckerApi).
2024-02-26 20:22:23.542 +03:00 [ERR] Failed executing DbCommand (9ms) [Parameters=[@__channelId_0='?' (DbType = Int32), @__startDate_1='?' (DbType = DateTime), @__endDate_2='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.date, s.sheet, s.subscribers
FROM "SubscribersRecord" AS s
INNER JOIN "StatisticsSheet" AS s0 ON s.sheet = s0.id
WHERE s0.channel_id = @__channelId_0 AND s.date >= @__startDate_1 AND s.date <= @__endDate_2
2024-02-26 20:22:23.582 +03:00 [ERR] An exception occurred while iterating over the results of a query for context type 'TgCheckerApi.Models.BaseModels.TgDbContext'.
System.InvalidCastException: Cannot write DateTime with Kind=Unspecified to PostgreSQL type 'timestamp with time zone', only UTC is supported. Note that it's not possible to mix DateTimes with different Kinds in an array/range. See the Npgsql.EnableLegacyTimestampBehavior AppContext switch to enable legacy behavior.
   at Npgsql.Internal.TypeHandlers.DateTimeHandlers.TimestampTzHandler.ValidateAndGetLength(DateTime value, NpgsqlParameter parameter)
   at Npgsql.Internal.TypeHandlers.DateTimeHandlers.TimestampTzHandler.ValidateObjectAndGetLength(Object value, NpgsqlLengthCache& lengthCache, NpgsqlParameter parameter)
   at Npgsql.NpgsqlParameter.ValidateAndGetLength()
   at Npgsql.NpgsqlParameterCollection.ProcessParameters(TypeMapper typeMapper, Boolean validateValues, CommandType commandType)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
System.InvalidCastException: Cannot write DateTime with Kind=Unspecified to PostgreSQL type 'timestamp with time zone', only UTC is supported. Note that it's not possible to mix DateTimes with different Kinds in an array/range. See the Npgsql.EnableLegacyTimestampBehavior AppContext switch to enable legacy behavior.
   at Npgsql.Internal.TypeHandlers.DateTimeHandlers.TimestampTzHandler.ValidateAndGetLength(DateTime value, NpgsqlParameter parameter)
   at Npgsql.Internal.TypeHandlers.DateTimeHandlers.TimestampTzHandler.ValidateObjectAndGetLength(Object value, NpgsqlLengthCache& lengthCache, NpgsqlParameter parameter)
   at Npgsql.NpgsqlParameter.ValidateAndGetLength()
   at Npgsql.NpgsqlParameterCollection.ProcessParameters(TypeMapper typeMapper, Boolean validateValues, CommandType commandType)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
2024-02-26 20:22:23.698 +03:00 [INF] Executed action TgCheckerApi.Controllers.BotController.GetSubscribersHistoryAsync (TgCheckerApi) in 530.9319ms
2024-02-26 20:22:23.701 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.BotController.GetSubscribersHistoryAsync (TgCheckerApi)'
2024-02-26 20:22:23.703 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidCastException: Cannot write DateTime with Kind=Unspecified to PostgreSQL type 'timestamp with time zone', only UTC is supported. Note that it's not possible to mix DateTimes with different Kinds in an array/range. See the Npgsql.EnableLegacyTimestampBehavior AppContext switch to enable legacy behavior.
   at Npgsql.Internal.TypeHandlers.DateTimeHandlers.TimestampTzHandler.ValidateAndGetLength(DateTime value, NpgsqlParameter parameter)
   at Npgsql.Internal.TypeHandlers.DateTimeHandlers.TimestampTzHandler.ValidateObjectAndGetLength(Object value, NpgsqlLengthCache& lengthCache, NpgsqlParameter parameter)
   at Npgsql.NpgsqlParameter.ValidateAndGetLength()
   at Npgsql.NpgsqlParameterCollection.ProcessParameters(TypeMapper typeMapper, Boolean validateValues, CommandType commandType)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at TgCheckerApi.Services.BotControllerService.CalculateDailySubscribersHistory(DateTime startDate, DateTime endDate, Int32 channelId) in C:\Users\timar\source\Repos\goldman2g5\TgCheckerApi\TgCheckerApi\Services\BotControllerService.cs:line 551
   at TgCheckerApi.Controllers.BotController.GetSubscribersHistoryAsync(SubHistoryRequest dailyViewsRequest) in C:\Users\timar\source\Repos\goldman2g5\TgCheckerApi\TgCheckerApi\Controllers\BotController.cs:line 362
   at lambda_method309(Closure , Object )
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2024-02-26 20:22:23.755 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7256/api/Bot/SubscribersHistory application/json-patch+json 58 - 500 - text/plain;+charset=utf-8 750.3847ms
2024-02-26 20:22:24.116 +03:00 [INF] Start processing HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-26 20:22:24.120 +03:00 [INF] Sending HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-26 20:22:24.544 +03:00 [INF] Received HTTP response headers after 418.0302ms - 200
2024-02-26 20:22:24.547 +03:00 [INF] End processing HTTP request after 439.2128ms - 200
2024-02-26 20:22:24.551 +03:00 [INF] Successfully processed all channels via HTTP request at: {DateTime.UtcNow}
2024-02-26 20:22:42.732 +03:00 [INF] User profile is available. Using 'C:\Users\timar\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-26 20:22:42.888 +03:00 [INF] Default Quartz.NET properties loaded from embedded resource file
2024-02-26 20:22:42.927 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-02-26 20:22:42.931 +03:00 [INF] Quartz Scheduler created
2024-02-26 20:22:42.932 +03:00 [INF] RAMJobStore initialized.
2024-02-26 20:22:42.933 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-02-26 20:22:42.933 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-02-26 20:22:42.934 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-02-26 20:22:42.935 +03:00 [INF] JobFactory set to: TgCheckerApi.Job.QuartzJobFactory
2024-02-26 20:22:42.976 +03:00 [INF] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2024-02-26 20:22:43.099 +03:00 [INF] Now listening on: https://localhost:7256
2024-02-26 20:22:43.100 +03:00 [INF] Now listening on: https://localhost:5244
2024-02-26 20:22:43.103 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-26 20:22:43.104 +03:00 [INF] Hosting environment: Development
2024-02-26 20:22:43.105 +03:00 [INF] Content root path: C:\Users\timar\source\Repos\goldman2g5\TgCheckerApi\TgCheckerApi\
2024-02-26 20:22:43.157 +03:00 [INF] RecalculateTopPosJob started at "2024-02-26T20:22:43.1566978+03:00"
2024-02-26 20:22:43.622 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/swagger/index.html - -
2024-02-26 20:22:43.878 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/_framework/aspnetcore-browser-refresh.js - -
2024-02-26 20:22:43.879 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/swagger/index.html - - - 200 - text/html;charset=utf-8 258.4400ms
2024-02-26 20:22:43.886 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/_vs/browserLink - -
2024-02-26 20:22:43.887 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/_framework/aspnetcore-browser-refresh.js - - - 200 12356 application/javascript;+charset=utf-8 9.1393ms
2024-02-26 20:22:43.903 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 16.4005ms
2024-02-26 20:22:43.971 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/swagger/v1/swagger.json - -
2024-02-26 20:22:44.103 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 131.9602ms
2024-02-26 20:22:44.694 +03:00 [INF] Executed DbCommand (47ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c."IsPartner", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."TopPos", c."Url", c."user"
FROM "Channel" AS c
ORDER BY c.bumps DESC
2024-02-26 20:22:44.891 +03:00 [INF] RecalculateTopPosJob completed at "2024-02-26T20:22:44.8917003+03:00"
2024-02-26 20:22:51.104 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7256/api/Bot/SubscribersHistory application/json-patch+json 58
2024-02-26 20:22:51.116 +03:00 [INF] CORS policy execution successful.
2024-02-26 20:22:51.229 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.BotController.GetSubscribersHistoryAsync (TgCheckerApi)'
2024-02-26 20:22:51.263 +03:00 [INF] Route matched with {action = "GetSubscribersHistory", controller = "Bot"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[TgCheckerApi.Controllers.BotController+SubscriberHistoryItem]]] GetSubscribersHistoryAsync(SubHistoryRequest) on controller TgCheckerApi.Controllers.BotController (TgCheckerApi).
2024-02-26 20:22:51.673 +03:00 [INF] Executed DbCommand (26ms) [Parameters=[@__channelId_0='?' (DbType = Int32), @__startDate_1='?' (DbType = DateTime), @__endDate_2='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.date, s.sheet, s.subscribers
FROM "SubscribersRecord" AS s
INNER JOIN "StatisticsSheet" AS s0 ON s.sheet = s0.id
WHERE s0.channel_id = @__channelId_0 AND s.date >= @__startDate_1 AND s.date <= @__endDate_2
2024-02-26 20:22:51.712 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Controllers.BotController+SubscriberHistoryItem, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-26 20:22:51.778 +03:00 [INF] Executed action TgCheckerApi.Controllers.BotController.GetSubscribersHistoryAsync (TgCheckerApi) in 507.6999ms
2024-02-26 20:22:51.782 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.BotController.GetSubscribersHistoryAsync (TgCheckerApi)'
2024-02-26 20:22:51.798 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7256/api/Bot/SubscribersHistory application/json-patch+json 58 - 200 702 application/json;+charset=utf-8 694.2444ms
2024-02-26 20:22:53.059 +03:00 [INF] Start processing HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-26 20:22:53.062 +03:00 [INF] Sending HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-26 20:22:53.540 +03:00 [INF] Received HTTP response headers after 472.0815ms - 200
2024-02-26 20:22:53.542 +03:00 [INF] End processing HTTP request after 485.0915ms - 200
2024-02-26 20:22:53.546 +03:00 [INF] Successfully processed all channels via HTTP request at: {DateTime.UtcNow}
