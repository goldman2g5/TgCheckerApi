2024-02-11 00:18:07.730 +03:00 [INF] User profile is available. Using 'C:\Users\79103\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-11 00:18:07.991 +03:00 [INF] Default Quartz.NET properties loaded from embedded resource file
2024-02-11 00:18:08.089 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-02-11 00:18:08.090 +03:00 [INF] Quartz Scheduler created
2024-02-11 00:18:08.091 +03:00 [INF] RAMJobStore initialized.
2024-02-11 00:18:08.094 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-02-11 00:18:08.096 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-02-11 00:18:08.097 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-02-11 00:18:08.106 +03:00 [INF] JobFactory set to: TgCheckerApi.Job.QuartzJobFactory
2024-02-11 00:18:08.184 +03:00 [INF] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2024-02-11 00:18:08.423 +03:00 [INF] Now listening on: https://localhost:7256
2024-02-11 00:18:08.424 +03:00 [INF] Now listening on: https://localhost:5244
2024-02-11 00:18:08.428 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-11 00:18:08.429 +03:00 [INF] Hosting environment: Development
2024-02-11 00:18:08.429 +03:00 [INF] Content root path: C:\Users\79103\Source\Repos\goldman2g5\TgCheckerApiPOLAMPUS\TgCheckerApi\
2024-02-11 00:18:09.207 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/swagger/index.html - -
2024-02-11 00:18:09.563 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/swagger/index.html - - - 200 - text/html;charset=utf-8 358.8833ms
2024-02-11 00:18:09.600 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/_framework/aspnetcore-browser-refresh.js - -
2024-02-11 00:18:09.608 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/_framework/aspnetcore-browser-refresh.js - - - 200 12356 application/javascript;+charset=utf-8 8.1815ms
2024-02-11 00:18:09.616 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/_vs/browserLink - -
2024-02-11 00:18:09.637 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 20.4567ms
2024-02-11 00:18:09.705 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/swagger/v1/swagger.json - -
2024-02-11 00:18:09.883 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 177.9417ms
2024-02-11 00:18:18.430 +03:00 [INF] Start processing HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-11 00:18:18.438 +03:00 [INF] Sending HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-11 00:18:18.908 +03:00 [INF] Received HTTP response headers after 465.7469ms - 200
2024-02-11 00:18:18.911 +03:00 [INF] End processing HTTP request after 488.6339ms - 200
2024-02-11 00:18:18.915 +03:00 [INF] Successfully processed all channels via HTTP request at: {DateTime.UtcNow}
2024-02-11 00:18:59.842 +03:00 [INF] User profile is available. Using 'C:\Users\79103\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-11 00:19:00.032 +03:00 [INF] Default Quartz.NET properties loaded from embedded resource file
2024-02-11 00:19:00.081 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-02-11 00:19:00.086 +03:00 [INF] Quartz Scheduler created
2024-02-11 00:19:00.087 +03:00 [INF] RAMJobStore initialized.
2024-02-11 00:19:00.088 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-02-11 00:19:00.089 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-02-11 00:19:00.090 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-02-11 00:19:00.091 +03:00 [INF] JobFactory set to: TgCheckerApi.Job.QuartzJobFactory
2024-02-11 00:19:00.141 +03:00 [INF] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2024-02-11 00:19:00.264 +03:00 [INF] Now listening on: http://localhost:7256
2024-02-11 00:19:00.265 +03:00 [INF] Now listening on: http://localhost:5244
2024-02-11 00:19:00.271 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-11 00:19:00.273 +03:00 [INF] Hosting environment: Development
2024-02-11 00:19:00.274 +03:00 [INF] Content root path: C:\Users\79103\Source\Repos\goldman2g5\TgCheckerApiPOLAMPUS\TgCheckerApi\
2024-02-11 00:19:00.383 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-11 00:19:00.452 +03:00 [WRN] Failed to determine the https port for redirect.
2024-02-11 00:19:00.472 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/index.html - -
2024-02-11 00:19:00.589 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-11 00:19:00.635 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-11 00:19:00.639 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 261.0695ms
2024-02-11 00:19:00.664 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=HOO4CscjprEDvzy02VXCSw - -
2024-02-11 00:19:00.666 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-11 00:19:00.837 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/index.html - - - 200 - text/html;charset=utf-8 364.9162ms
2024-02-11 00:19:00.875 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - -
2024-02-11 00:19:00.880 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - - - 200 12356 application/javascript;+charset=utf-8 4.4796ms
2024-02-11 00:19:00.893 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_vs/browserLink - -
2024-02-11 00:19:00.919 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 25.9837ms
2024-02-11 00:19:01.072 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - -
2024-02-11 00:19:01.263 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 191.1583ms
2024-02-11 00:19:10.359 +03:00 [INF] Start processing HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-11 00:19:10.369 +03:00 [INF] Sending HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-11 00:19:10.938 +03:00 [INF] Received HTTP response headers after 563.3286ms - 200
2024-02-11 00:19:10.941 +03:00 [INF] End processing HTTP request after 588.5411ms - 200
2024-02-11 00:19:10.945 +03:00 [INF] Successfully processed all channels via HTTP request at: {DateTime.UtcNow}
2024-02-11 00:20:04.405 +03:00 [ERR] Failed to invoke hub method 'ReceiveStream'.
System.OperationCanceledException: The underlying connection was closed.
   at System.Threading.Channels.AsyncOperation`1.GetResult(Int16 token)
   at System.Threading.Channels.ChannelReader`1.ReadAllAsync(CancellationToken cancellationToken)+MoveNext()
   at System.Threading.Channels.ChannelReader`1.ReadAllAsync(CancellationToken cancellationToken)+System.Threading.Tasks.Sources.IValueTaskSource<System.Boolean>.GetResult()
   at TgCheckerApi.Websockets.BotHub.ReceiveStream(IAsyncEnumerable`1 stream, String param) in C:\Users\79103\Source\Repos\goldman2g5\TgCheckerApiPOLAMPUS\TgCheckerApi\Websockets\BotHub.cs:line 39
   at TgCheckerApi.Websockets.BotHub.ReceiveStream(IAsyncEnumerable`1 stream, String param) in C:\Users\79103\Source\Repos\goldman2g5\TgCheckerApiPOLAMPUS\TgCheckerApi\Websockets\BotHub.cs:line 39
   at Microsoft.AspNetCore.SignalR.Internal.DefaultHubDispatcher`1.ExecuteMethod(ObjectMethodExecutor methodExecutor, Hub hub, Object[] arguments)
   at Microsoft.AspNetCore.SignalR.Internal.DefaultHubDispatcher`1.<Invoke>g__ExecuteInvocation|16_0(DefaultHubDispatcher`1 dispatcher, ObjectMethodExecutor methodExecutor, THub hub, Object[] arguments, AsyncServiceScope scope, IHubActivator`1 hubActivator, HubConnectionContext connection, HubMethodInvocationMessage hubMethodInvocationMessage, Boolean isStreamCall)
2024-02-11 00:20:04.409 +03:00 [INF] Executed endpoint '/BotHub'
2024-02-11 00:20:04.491 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/BotHub?id=HOO4CscjprEDvzy02VXCSw - - - 101 - - 63826.9093ms
2024-02-11 00:34:43.740 +03:00 [INF] User profile is available. Using 'C:\Users\79103\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-11 00:34:43.962 +03:00 [INF] Default Quartz.NET properties loaded from embedded resource file
2024-02-11 00:34:44.013 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-02-11 00:34:44.014 +03:00 [INF] Quartz Scheduler created
2024-02-11 00:34:44.019 +03:00 [INF] RAMJobStore initialized.
2024-02-11 00:34:44.021 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-02-11 00:34:44.021 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-02-11 00:34:44.022 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-02-11 00:34:44.024 +03:00 [INF] JobFactory set to: TgCheckerApi.Job.QuartzJobFactory
2024-02-11 00:34:44.079 +03:00 [INF] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2024-02-11 00:34:44.175 +03:00 [INF] Now listening on: http://localhost:7256
2024-02-11 00:34:44.175 +03:00 [INF] Now listening on: http://localhost:5244
2024-02-11 00:34:44.180 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-11 00:34:44.180 +03:00 [INF] Hosting environment: Development
2024-02-11 00:34:44.181 +03:00 [INF] Content root path: C:\Users\79103\Source\Repos\goldman2g5\TgCheckerApiPOLAMPUS\TgCheckerApi\
2024-02-11 00:34:44.448 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/index.html - -
2024-02-11 00:34:44.793 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/index.html - - - 200 - text/html;charset=utf-8 348.0662ms
2024-02-11 00:34:44.822 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - -
2024-02-11 00:34:44.828 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - - - 200 12356 application/javascript;+charset=utf-8 5.5201ms
2024-02-11 00:34:44.838 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_vs/browserLink - -
2024-02-11 00:34:44.862 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 24.1222ms
2024-02-11 00:34:44.904 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - -
2024-02-11 00:34:45.079 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 174.5908ms
2024-02-11 00:34:54.334 +03:00 [INF] Start processing HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-11 00:34:54.341 +03:00 [INF] Sending HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-11 00:34:54.887 +03:00 [INF] Received HTTP response headers after 542.425ms - 200
2024-02-11 00:34:54.890 +03:00 [INF] End processing HTTP request after 564.4283ms - 200
2024-02-11 00:34:54.894 +03:00 [INF] Successfully processed all channels via HTTP request at: {DateTime.UtcNow}
2024-02-11 00:35:27.525 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/api/Channel/Bump/80 - 0
2024-02-11 00:35:27.534 +03:00 [WRN] Failed to determine the https port for redirect.
2024-02-11 00:35:27.536 +03:00 [INF] CORS policy execution successful.
2024-02-11 00:35:27.658 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.ChannelController.BumpChannel (TgCheckerApi)'
2024-02-11 00:35:27.690 +03:00 [INF] Route matched with {action = "BumpChannel", controller = "Channel"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] BumpChannel(Int32) on controller TgCheckerApi.Controllers.ChannelController (TgCheckerApi).
2024-02-11 00:35:30.160 +03:00 [INF] Executed DbCommand (81ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.avatar, t.bumps, t.description, t.flag, t."Hidden", t.language, t.last_bump, t.members, t.name, t.notification_sent, t.notifications, t.promo_post, t.promo_post_interval, t.promo_post_last, t.promo_post_sent, t.promo_post_time, t.telegram_id, t."Url", t."user", t0.id, t0.channel_id, t0.expires, t0.type_id, t0.id0, t0.multiplier, t0.name, t0.price, t0.tag_limit
FROM (
    SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."Url", c."user"
    FROM "Channel" AS c
    WHERE c.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT c0.id, c0.channel_id, c0.expires, c0.type_id, s.id AS id0, s.multiplier, s.name, s.price, s.tag_limit
    FROM "ChannelHasSubscription" AS c0
    LEFT JOIN "SubType" AS s ON c0.type_id = s.id
) AS t0 ON t.id = t0.channel_id
ORDER BY t.id, t0.id
2024-02-11 00:35:30.343 +03:00 [INF] Executing BadRequestObjectResult, writing value of type 'System.String'.
2024-02-11 00:35:30.351 +03:00 [INF] Executed action TgCheckerApi.Controllers.ChannelController.BumpChannel (TgCheckerApi) in 2654.2983ms
2024-02-11 00:35:30.353 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.ChannelController.BumpChannel (TgCheckerApi)'
2024-02-11 00:35:30.371 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/api/Channel/Bump/80 - 0 - 400 - text/plain;+charset=utf-8 2845.1566ms
2024-02-11 00:36:16.939 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/api/Channel/Bump/80 - 0
2024-02-11 00:36:16.940 +03:00 [INF] CORS policy execution successful.
2024-02-11 00:36:16.945 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.ChannelController.BumpChannel (TgCheckerApi)'
2024-02-11 00:36:16.951 +03:00 [INF] Route matched with {action = "BumpChannel", controller = "Channel"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] BumpChannel(Int32) on controller TgCheckerApi.Controllers.ChannelController (TgCheckerApi).
2024-02-11 00:36:16.982 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.avatar, t.bumps, t.description, t.flag, t."Hidden", t.language, t.last_bump, t.members, t.name, t.notification_sent, t.notifications, t.promo_post, t.promo_post_interval, t.promo_post_last, t.promo_post_sent, t.promo_post_time, t.telegram_id, t."Url", t."user", t0.id, t0.channel_id, t0.expires, t0.type_id, t0.id0, t0.multiplier, t0.name, t0.price, t0.tag_limit
FROM (
    SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."Url", c."user"
    FROM "Channel" AS c
    WHERE c.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT c0.id, c0.channel_id, c0.expires, c0.type_id, s.id AS id0, s.multiplier, s.name, s.price, s.tag_limit
    FROM "ChannelHasSubscription" AS c0
    LEFT JOIN "SubType" AS s ON c0.type_id = s.id
) AS t0 ON t.id = t0.channel_id
ORDER BY t.id, t0.id
2024-02-11 00:36:16.986 +03:00 [INF] Executing BadRequestObjectResult, writing value of type 'System.String'.
2024-02-11 00:36:16.987 +03:00 [INF] Executed action TgCheckerApi.Controllers.ChannelController.BumpChannel (TgCheckerApi) in 34.5232ms
2024-02-11 00:36:16.988 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.ChannelController.BumpChannel (TgCheckerApi)'
2024-02-11 00:36:16.989 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/api/Channel/Bump/80 - 0 - 400 - text/plain;+charset=utf-8 50.0096ms
2024-02-11 00:36:17.208 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/api/Channel/Bump/80 - 0
2024-02-11 00:36:17.209 +03:00 [INF] CORS policy execution successful.
2024-02-11 00:36:17.212 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.ChannelController.BumpChannel (TgCheckerApi)'
2024-02-11 00:36:17.219 +03:00 [INF] Route matched with {action = "BumpChannel", controller = "Channel"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] BumpChannel(Int32) on controller TgCheckerApi.Controllers.ChannelController (TgCheckerApi).
2024-02-11 00:36:17.267 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.avatar, t.bumps, t.description, t.flag, t."Hidden", t.language, t.last_bump, t.members, t.name, t.notification_sent, t.notifications, t.promo_post, t.promo_post_interval, t.promo_post_last, t.promo_post_sent, t.promo_post_time, t.telegram_id, t."Url", t."user", t0.id, t0.channel_id, t0.expires, t0.type_id, t0.id0, t0.multiplier, t0.name, t0.price, t0.tag_limit
FROM (
    SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."Url", c."user"
    FROM "Channel" AS c
    WHERE c.id = @__id_0
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT c0.id, c0.channel_id, c0.expires, c0.type_id, s.id AS id0, s.multiplier, s.name, s.price, s.tag_limit
    FROM "ChannelHasSubscription" AS c0
    LEFT JOIN "SubType" AS s ON c0.type_id = s.id
) AS t0 ON t.id = t0.channel_id
ORDER BY t.id, t0.id
2024-02-11 00:36:17.272 +03:00 [INF] Executing BadRequestObjectResult, writing value of type 'System.String'.
2024-02-11 00:36:17.273 +03:00 [INF] Executed action TgCheckerApi.Controllers.ChannelController.BumpChannel (TgCheckerApi) in 51.1312ms
2024-02-11 00:36:17.274 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.ChannelController.BumpChannel (TgCheckerApi)'
2024-02-11 00:36:17.276 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/api/Channel/Bump/80 - 0 - 400 - text/plain;+charset=utf-8 67.6580ms
2024-02-11 19:11:28.501 +03:00 [INF] User profile is available. Using 'C:\Users\79103\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-11 19:11:28.837 +03:00 [INF] Default Quartz.NET properties loaded from embedded resource file
2024-02-11 19:11:28.920 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-02-11 19:11:28.921 +03:00 [INF] Quartz Scheduler created
2024-02-11 19:11:28.922 +03:00 [INF] RAMJobStore initialized.
2024-02-11 19:11:28.924 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-02-11 19:11:28.934 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-02-11 19:11:28.935 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-02-11 19:11:28.937 +03:00 [INF] JobFactory set to: TgCheckerApi.Job.QuartzJobFactory
2024-02-11 19:11:29.004 +03:00 [INF] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2024-02-11 19:11:29.270 +03:00 [INF] Now listening on: https://localhost:7256
2024-02-11 19:11:29.271 +03:00 [INF] Now listening on: https://localhost:5244
2024-02-11 19:11:29.276 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-11 19:11:29.277 +03:00 [INF] Hosting environment: Development
2024-02-11 19:11:29.277 +03:00 [INF] Content root path: C:\Users\79103\Source\Repos\goldman2g5\TgCheckerApiPOLAMPUS\TgCheckerApi\
2024-02-11 19:11:30.488 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/swagger/index.html - -
2024-02-11 19:11:31.193 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/swagger/index.html - - - 200 - text/html;charset=utf-8 713.7898ms
2024-02-11 19:11:31.330 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/_framework/aspnetcore-browser-refresh.js - -
2024-02-11 19:11:31.340 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/_framework/aspnetcore-browser-refresh.js - - - 200 12356 application/javascript;+charset=utf-8 9.4972ms
2024-02-11 19:11:31.364 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/_vs/browserLink - -
2024-02-11 19:11:31.388 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 23.6186ms
2024-02-11 19:11:31.530 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/swagger/v1/swagger.json - -
2024-02-11 19:11:31.885 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 354.5348ms
2024-02-11 19:11:39.264 +03:00 [INF] Start processing HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-11 19:11:39.272 +03:00 [INF] Sending HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-11 19:11:41.283 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/api/Channel/Page/1?&sortOption=rating&ascending=False&language= - -
2024-02-11 19:11:41.289 +03:00 [INF] CORS policy execution successful.
2024-02-11 19:11:41.447 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.ChannelController.GetChannels (TgCheckerApi)'
2024-02-11 19:11:41.489 +03:00 [INF] Route matched with {action = "GetChannels", controller = "Channel"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.GetModels.ChannelGetModel]]] GetChannels(Int32, System.String, System.String, System.String, System.String, System.String) on controller TgCheckerApi.Controllers.ChannelController (TgCheckerApi).
2024-02-11 19:11:41.799 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7256/api/Notification/UserNotifications - -
2024-02-11 19:11:41.800 +03:00 [INF] CORS policy execution successful.
2024-02-11 19:11:41.803 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7256/api/Notification/UserNotifications - - - 204 - - 3.6673ms
2024-02-11 19:11:41.810 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/api/Notification/UserNotifications - -
2024-02-11 19:11:41.811 +03:00 [INF] CORS policy execution successful.
2024-02-11 19:11:41.894 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetUserNotifications (TgCheckerApi)'
2024-02-11 19:11:41.898 +03:00 [INF] Route matched with {action = "GetUserNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetUserNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-11 19:11:44.264 +03:00 [INF] Executed DbCommand (91ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "User" AS u
WHERE u.unique_key = @__uniqueKeyClaim_0
LIMIT 2
2024-02-11 19:11:44.264 +03:00 [INF] Executed DbCommand (85ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Channel" AS c
WHERE c."Hidden" <> TRUE OR c."Hidden" IS NULL
2024-02-11 19:11:44.514 +03:00 [INF] Executed DbCommand (19ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."Url", c."user"
FROM "Channel" AS c
WHERE c."Hidden" <> TRUE OR c."Hidden" IS NULL
ORDER BY COALESCE(c.bumps, 0.0) DESC
LIMIT @__p_1 OFFSET @__p_0
2024-02-11 19:11:44.629 +03:00 [INF] Executed DbCommand (48ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.user_id = @__user_Id_0
2024-02-11 19:11:44.709 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.BaseModels.Notification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-11 19:11:44.722 +03:00 [INF] Executed DbCommand (19ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-11 19:11:44.749 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetUserNotifications (TgCheckerApi) in 2834.9107ms
2024-02-11 19:11:44.752 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetUserNotifications (TgCheckerApi)'
2024-02-11 19:11:44.776 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/api/Notification/UserNotifications - - - 200 465 application/json;+charset=utf-8 2966.8546ms
2024-02-11 19:11:44.833 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.text
FROM "Tag" AS t
WHERE t.id = @__p_0
LIMIT 1
2024-02-11 19:11:44.854 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.text
FROM "Tag" AS t
WHERE t.id = @__p_0
LIMIT 1
2024-02-11 19:11:44.858 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.text
FROM "Tag" AS t
WHERE t.id = @__p_0
LIMIT 1
2024-02-11 19:11:44.861 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.text
FROM "Tag" AS t
WHERE t.id = @__p_0
LIMIT 1
2024-02-11 19:11:44.886 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-11 19:11:44.890 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-11 19:11:44.898 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-11 19:11:44.904 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-11 19:11:44.908 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-11 19:11:44.914 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.GetModels.ChannelGetModel, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-11 19:11:44.929 +03:00 [INF] Executed action TgCheckerApi.Controllers.ChannelController.GetChannels (TgCheckerApi) in 3435.9335ms
2024-02-11 19:11:44.931 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.ChannelController.GetChannels (TgCheckerApi)'
2024-02-11 19:11:44.934 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/api/Channel/Page/1?&sortOption=rating&ascending=False&language= - - - 200 16390 application/json;+charset=utf-8 3651.2420ms
2024-02-11 19:11:44.976 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7256/api/Auth - -
2024-02-11 19:11:44.977 +03:00 [INF] CORS policy execution successful.
2024-02-11 19:11:44.978 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7256/api/Auth - - - 204 - - 2.5202ms
2024-02-11 19:11:44.985 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/api/Auth - -
2024-02-11 19:11:44.986 +03:00 [INF] CORS policy execution successful.
2024-02-11 19:11:44.988 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-11 19:11:44.992 +03:00 [INF] Route matched with {action = "GetMe", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TgCheckerApi.Models.GetModels.UserProfileModel]] GetMe() on controller TgCheckerApi.Controllers.AuthController (TgCheckerApi).
2024-02-11 19:11:45.234 +03:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2024-02-11 19:11:45.273 +03:00 [INF] Executed DbCommand (32ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.avatar, t.chat_id, t.last_update, t.notification_settings, t.telegram_id, t.unique_key, t.username, t1.id, t1.channel_id, t1.user_id, t1.id0, t1.avatar, t1.bumps, t1.description, t1.flag, t1."Hidden", t1.language, t1.last_bump, t1.members, t1.name, t1.notification_sent, t1.notifications, t1.promo_post, t1.promo_post_interval, t1.promo_post_last, t1.promo_post_sent, t1.promo_post_time, t1.telegram_id, t1."Url", t1."user", t1.id1, t1.channel, t1.tag, t1.id00, t1.text, t3.id, t3.channel_id, t3.content, t3.created_at, t3.parent_id, t3.rating, t3.user_id, t3.id0, t3.avatar, t3.bumps, t3.description, t3.flag, t3."Hidden", t3.language, t3.last_bump, t3.members, t3.name, t3.notification_sent, t3.notifications, t3.promo_post, t3.promo_post_interval, t3.promo_post_last, t3.promo_post_sent, t3.promo_post_time, t3.telegram_id, t3."Url", t3."user"
FROM (
    SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
    FROM "User" AS u
    WHERE u.unique_key = @__uniqueKeyClaim_0
    LIMIT 2
) AS t
LEFT JOIN (
    SELECT c.id, c.channel_id, c.user_id, c0.id AS id0, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."Url", c0."user", t0.id AS id1, t0.channel, t0.tag, t0.id0 AS id00, t0.text
    FROM "ChannelAccess" AS c
    LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
    LEFT JOIN (
        SELECT c1.id, c1.channel, c1.tag, t2.id AS id0, t2.text
        FROM "ChannelHasTag" AS c1
        LEFT JOIN "Tag" AS t2 ON c1.tag = t2.id
    ) AS t0 ON c0.id = t0.channel
) AS t1 ON t.id = t1.user_id
LEFT JOIN (
    SELECT c2.id, c2.channel_id, c2.content, c2.created_at, c2.parent_id, c2.rating, c2.user_id, c3.id AS id0, c3.avatar, c3.bumps, c3.description, c3.flag, c3."Hidden", c3.language, c3.last_bump, c3.members, c3.name, c3.notification_sent, c3.notifications, c3.promo_post, c3.promo_post_interval, c3.promo_post_last, c3.promo_post_sent, c3.promo_post_time, c3.telegram_id, c3."Url", c3."user"
    FROM "Comment" AS c2
    INNER JOIN "Channel" AS c3 ON c2.channel_id = c3.id
) AS t3 ON t.id = t3.user_id
ORDER BY t.id, t1.id, t1.id0, t1.id1, t1.id00, t3.id
2024-02-11 19:11:45.300 +03:00 [INF] initializing user data update
2024-02-11 19:11:45.327 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.parent_id = @__p_0
2024-02-11 19:11:45.329 +03:00 [INF] Received request for getProfilePictureAndUsername. Request hash: 5ec5950f142bca89e2aa6cb4127bdea9391929bfdb585a0fda8bc0406276e946
2024-02-11 19:11:45.381 +03:00 [INF] Executed DbCommand (21ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.comment_id = @__p_0
2024-02-11 19:11:45.389 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.parent_id = @__p_0
2024-02-11 19:11:45.393 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.comment_id = @__p_0
2024-02-11 19:11:45.396 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.parent_id = @__p_0
2024-02-11 19:11:45.400 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.comment_id = @__p_0
2024-02-11 19:11:45.419 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-11 19:11:45.423 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-11 19:11:45.431 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-11 19:11:45.439 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-11 19:11:45.477 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-11 19:11:45.538 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-11 19:11:45.579 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-11 19:11:45.625 +03:00 [INF] Executed DbCommand (13ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-11 19:11:45.630 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-11 19:11:45.635 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-11 19:11:45.637 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-11 19:11:45.640 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-11 19:11:45.645 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-11 19:11:45.651 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-11 19:11:45.668 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-11 19:11:45.674 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-11 19:11:45.676 +03:00 [INF] Executing OkObjectResult, writing value of type 'TgCheckerApi.Models.GetModels.UserProfileModel'.
2024-02-11 19:11:45.683 +03:00 [INF] Executed action TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi) in 688.9226ms
2024-02-11 19:11:45.684 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-11 19:11:45.687 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/api/Auth - - - 200 25488 application/json;+charset=utf-8 701.7293ms
2024-02-11 19:12:15.379 +03:00 [WRN] New task timed out. Hash: 5ec5950f142bca89e2aa6cb4127bdea9391929bfdb585a0fda8bc0406276e946
2024-02-11 19:12:15.381 +03:00 [WRN] Response is not in expected 'OkObjectResult' format or does not contain a string value.
2024-02-11 19:12:15.421 +03:00 [ERR] Invalid operation when updating user profile.
System.InvalidOperationException: Invalid response format.
   at TgCheckerApi.Services.WebSocketService.ResponseToObject[T](IActionResult response) in C:\Users\79103\Source\Repos\goldman2g5\TgCheckerApiPOLAMPUS\TgCheckerApi\Services\WebSocketService.cs:line 75
   at TgCheckerApi.Controllers.AuthController.UpdateUserProfileIfNeeded(User user) in C:\Users\79103\Source\Repos\goldman2g5\TgCheckerApiPOLAMPUS\TgCheckerApi\Controllers\AuthController.cs:line 146
2024-02-11 19:13:19.340 +03:00 [ERR] Error occurred executing UpdateSubscribersJob via HTTP request.
System.Threading.Tasks.TaskCanceledException: The request was canceled due to the configured HttpClient.Timeout of 100 seconds elapsing.
 ---> System.TimeoutException: The operation was canceled.
 ---> System.Threading.Tasks.TaskCanceledException: The operation was canceled.
 ---> System.IO.IOException: Unable to read data from the transport connection: The I/O operation has been aborted because of either a thread exit or an application request..
 ---> System.Net.Sockets.SocketException (995): The I/O operation has been aborted because of either a thread exit or an application request.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Security.SslStream.EnsureFullTlsFrameAsync[TIOAdapter](TIOAdapter adapter)
   at System.Net.Security.SslStream.ReadAsyncInternal[TIOAdapter](TIOAdapter adapter, Memory`1 buffer)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsyncCore(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsyncCore(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   --- End of inner exception stack trace ---
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpClient.HandleFailure(Exception e, Boolean telemetryStarted, HttpResponseMessage response, CancellationTokenSource cts, CancellationToken cancellationToken, CancellationTokenSource pendingRequestsCts)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at TgCheckerApi.Job.UpdateSubscribersJob.Execute(IJobExecutionContext context) in C:\Users\79103\Source\Repos\goldman2g5\TgCheckerApiPOLAMPUS\TgCheckerApi\Job\UpdateSubscribersJob.cs:line 49
2024-02-11 19:14:28.474 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/api/Channel/Page/1?&sortOption=rating&ascending=False&language= - -
2024-02-11 19:14:28.476 +03:00 [INF] CORS policy execution successful.
2024-02-11 19:14:28.482 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.ChannelController.GetChannels (TgCheckerApi)'
2024-02-11 19:14:28.483 +03:00 [INF] Route matched with {action = "GetChannels", controller = "Channel"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.GetModels.ChannelGetModel]]] GetChannels(Int32, System.String, System.String, System.String, System.String, System.String) on controller TgCheckerApi.Controllers.ChannelController (TgCheckerApi).
2024-02-11 19:14:28.491 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Channel" AS c
WHERE c."Hidden" <> TRUE OR c."Hidden" IS NULL
2024-02-11 19:14:28.495 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."Url", c."user"
FROM "Channel" AS c
WHERE c."Hidden" <> TRUE OR c."Hidden" IS NULL
ORDER BY COALESCE(c.bumps, 0.0) DESC
LIMIT @__p_1 OFFSET @__p_0
2024-02-11 19:14:28.498 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-11 19:14:28.502 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.text
FROM "Tag" AS t
WHERE t.id = @__p_0
LIMIT 1
2024-02-11 19:14:28.505 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.text
FROM "Tag" AS t
WHERE t.id = @__p_0
LIMIT 1
2024-02-11 19:14:28.508 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.text
FROM "Tag" AS t
WHERE t.id = @__p_0
LIMIT 1
2024-02-11 19:14:28.511 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.text
FROM "Tag" AS t
WHERE t.id = @__p_0
LIMIT 1
2024-02-11 19:14:28.514 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-11 19:14:28.524 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-11 19:14:28.528 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-11 19:14:28.531 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-11 19:14:28.533 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-11 19:14:28.536 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.GetModels.ChannelGetModel, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-11 19:14:28.537 +03:00 [INF] Executed action TgCheckerApi.Controllers.ChannelController.GetChannels (TgCheckerApi) in 52.1788ms
2024-02-11 19:14:28.538 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.ChannelController.GetChannels (TgCheckerApi)'
2024-02-11 19:14:28.539 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/api/Channel/Page/1?&sortOption=rating&ascending=False&language= - - - 200 16390 application/json;+charset=utf-8 64.9071ms
2024-02-11 19:14:29.024 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/api/Channel/Page/1?&sortOption=rating&ascending=False&language= - -
2024-02-11 19:14:29.026 +03:00 [INF] CORS policy execution successful.
2024-02-11 19:14:29.026 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.ChannelController.GetChannels (TgCheckerApi)'
2024-02-11 19:14:29.027 +03:00 [INF] Route matched with {action = "GetChannels", controller = "Channel"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.GetModels.ChannelGetModel]]] GetChannels(Int32, System.String, System.String, System.String, System.String, System.String) on controller TgCheckerApi.Controllers.ChannelController (TgCheckerApi).
2024-02-11 19:14:29.030 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Channel" AS c
WHERE c."Hidden" <> TRUE OR c."Hidden" IS NULL
2024-02-11 19:14:29.034 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."Url", c."user"
FROM "Channel" AS c
WHERE c."Hidden" <> TRUE OR c."Hidden" IS NULL
ORDER BY COALESCE(c.bumps, 0.0) DESC
LIMIT @__p_1 OFFSET @__p_0
2024-02-11 19:14:29.037 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-11 19:14:29.039 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.text
FROM "Tag" AS t
WHERE t.id = @__p_0
LIMIT 1
2024-02-11 19:14:29.042 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.text
FROM "Tag" AS t
WHERE t.id = @__p_0
LIMIT 1
2024-02-11 19:14:29.045 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.text
FROM "Tag" AS t
WHERE t.id = @__p_0
LIMIT 1
2024-02-11 19:14:29.048 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.text
FROM "Tag" AS t
WHERE t.id = @__p_0
LIMIT 1
2024-02-11 19:14:29.051 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-11 19:14:29.053 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-11 19:14:29.057 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-11 19:14:29.059 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-11 19:14:29.062 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-11 19:14:29.064 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.GetModels.ChannelGetModel, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-11 19:14:29.065 +03:00 [INF] Executed action TgCheckerApi.Controllers.ChannelController.GetChannels (TgCheckerApi) in 36.8235ms
2024-02-11 19:14:29.066 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.ChannelController.GetChannels (TgCheckerApi)'
2024-02-11 19:14:29.067 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/api/Channel/Page/1?&sortOption=rating&ascending=False&language= - - - 200 16390 application/json;+charset=utf-8 42.8538ms
2024-02-11 19:14:29.094 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/api/Channel/Page/1?&sortOption=rating&ascending=False&language= - -
2024-02-11 19:14:29.095 +03:00 [INF] CORS policy execution successful.
2024-02-11 19:14:29.096 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.ChannelController.GetChannels (TgCheckerApi)'
2024-02-11 19:14:29.096 +03:00 [INF] Route matched with {action = "GetChannels", controller = "Channel"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.GetModels.ChannelGetModel]]] GetChannels(Int32, System.String, System.String, System.String, System.String, System.String) on controller TgCheckerApi.Controllers.ChannelController (TgCheckerApi).
2024-02-11 19:14:29.100 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Channel" AS c
WHERE c."Hidden" <> TRUE OR c."Hidden" IS NULL
2024-02-11 19:14:29.104 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."Url", c."user"
FROM "Channel" AS c
WHERE c."Hidden" <> TRUE OR c."Hidden" IS NULL
ORDER BY COALESCE(c.bumps, 0.0) DESC
LIMIT @__p_1 OFFSET @__p_0
2024-02-11 19:14:29.108 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-11 19:14:29.111 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.text
FROM "Tag" AS t
WHERE t.id = @__p_0
LIMIT 1
2024-02-11 19:14:29.113 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.text
FROM "Tag" AS t
WHERE t.id = @__p_0
LIMIT 1
2024-02-11 19:14:29.117 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.text
FROM "Tag" AS t
WHERE t.id = @__p_0
LIMIT 1
2024-02-11 19:14:29.120 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.text
FROM "Tag" AS t
WHERE t.id = @__p_0
LIMIT 1
2024-02-11 19:14:29.123 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-11 19:14:29.125 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-11 19:14:29.127 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-11 19:14:29.131 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-11 19:14:29.134 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-11 19:14:29.136 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.GetModels.ChannelGetModel, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-11 19:14:29.137 +03:00 [INF] Executed action TgCheckerApi.Controllers.ChannelController.GetChannels (TgCheckerApi) in 39.2557ms
2024-02-11 19:14:29.138 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.ChannelController.GetChannels (TgCheckerApi)'
2024-02-11 19:14:29.139 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/api/Channel/Page/1?&sortOption=rating&ascending=False&language= - - - 200 16390 application/json;+charset=utf-8 44.8250ms
2024-02-11 19:14:29.156 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/api/Tags - -
2024-02-11 19:14:29.157 +03:00 [INF] CORS policy execution successful.
2024-02-11 19:14:29.158 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.TagsController.GetTags (TgCheckerApi)'
2024-02-11 19:14:29.160 +03:00 [INF] Route matched with {action = "GetTags", controller = "Tags"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.String]] GetTags() on controller TgCheckerApi.Controllers.TagsController (TgCheckerApi).
2024-02-11 19:14:29.168 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT t.text
FROM "Tag" AS t
2024-02-11 19:14:29.172 +03:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2024-02-11 19:14:29.173 +03:00 [INF] Executed action TgCheckerApi.Controllers.TagsController.GetTags (TgCheckerApi) in 10.184ms
2024-02-11 19:14:29.173 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.TagsController.GetTags (TgCheckerApi)'
2024-02-11 19:14:29.174 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/api/Tags - - - 200 - text/plain;+charset=utf-8 17.8537ms
2024-02-11 19:14:29.199 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7256/api/Notification/UserNotifications - -
2024-02-11 19:14:29.199 +03:00 [INF] CORS policy execution successful.
2024-02-11 19:14:29.200 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7256/api/Notification/UserNotifications - - - 204 - - 1.4047ms
2024-02-11 19:14:29.204 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/api/Notification/UserNotifications - -
2024-02-11 19:14:29.205 +03:00 [INF] CORS policy execution successful.
2024-02-11 19:14:29.207 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetUserNotifications (TgCheckerApi)'
2024-02-11 19:14:29.208 +03:00 [INF] Route matched with {action = "GetUserNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetUserNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-11 19:14:29.215 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "User" AS u
WHERE u.unique_key = @__uniqueKeyClaim_0
LIMIT 2
2024-02-11 19:14:29.219 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.user_id = @__user_Id_0
2024-02-11 19:14:29.222 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.BaseModels.Notification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-11 19:14:29.223 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetUserNotifications (TgCheckerApi) in 13.45ms
2024-02-11 19:14:29.224 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetUserNotifications (TgCheckerApi)'
2024-02-11 19:14:29.225 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/api/Notification/UserNotifications - - - 200 465 application/json;+charset=utf-8 20.5717ms
2024-02-11 19:14:29.375 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7256/api/Auth - -
2024-02-11 19:14:29.376 +03:00 [INF] CORS policy execution successful.
2024-02-11 19:14:29.377 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7256/api/Auth - - - 204 - - 2.0552ms
2024-02-11 19:14:29.381 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/api/Auth - -
2024-02-11 19:14:29.382 +03:00 [INF] CORS policy execution successful.
2024-02-11 19:14:29.383 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-11 19:14:29.384 +03:00 [INF] Route matched with {action = "GetMe", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TgCheckerApi.Models.GetModels.UserProfileModel]] GetMe() on controller TgCheckerApi.Controllers.AuthController (TgCheckerApi).
2024-02-11 19:14:29.390 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.avatar, t.chat_id, t.last_update, t.notification_settings, t.telegram_id, t.unique_key, t.username, t1.id, t1.channel_id, t1.user_id, t1.id0, t1.avatar, t1.bumps, t1.description, t1.flag, t1."Hidden", t1.language, t1.last_bump, t1.members, t1.name, t1.notification_sent, t1.notifications, t1.promo_post, t1.promo_post_interval, t1.promo_post_last, t1.promo_post_sent, t1.promo_post_time, t1.telegram_id, t1."Url", t1."user", t1.id1, t1.channel, t1.tag, t1.id00, t1.text, t3.id, t3.channel_id, t3.content, t3.created_at, t3.parent_id, t3.rating, t3.user_id, t3.id0, t3.avatar, t3.bumps, t3.description, t3.flag, t3."Hidden", t3.language, t3.last_bump, t3.members, t3.name, t3.notification_sent, t3.notifications, t3.promo_post, t3.promo_post_interval, t3.promo_post_last, t3.promo_post_sent, t3.promo_post_time, t3.telegram_id, t3."Url", t3."user"
FROM (
    SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
    FROM "User" AS u
    WHERE u.unique_key = @__uniqueKeyClaim_0
    LIMIT 2
) AS t
LEFT JOIN (
    SELECT c.id, c.channel_id, c.user_id, c0.id AS id0, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."Url", c0."user", t0.id AS id1, t0.channel, t0.tag, t0.id0 AS id00, t0.text
    FROM "ChannelAccess" AS c
    LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
    LEFT JOIN (
        SELECT c1.id, c1.channel, c1.tag, t2.id AS id0, t2.text
        FROM "ChannelHasTag" AS c1
        LEFT JOIN "Tag" AS t2 ON c1.tag = t2.id
    ) AS t0 ON c0.id = t0.channel
) AS t1 ON t.id = t1.user_id
LEFT JOIN (
    SELECT c2.id, c2.channel_id, c2.content, c2.created_at, c2.parent_id, c2.rating, c2.user_id, c3.id AS id0, c3.avatar, c3.bumps, c3.description, c3.flag, c3."Hidden", c3.language, c3.last_bump, c3.members, c3.name, c3.notification_sent, c3.notifications, c3.promo_post, c3.promo_post_interval, c3.promo_post_last, c3.promo_post_sent, c3.promo_post_time, c3.telegram_id, c3."Url", c3."user"
    FROM "Comment" AS c2
    INNER JOIN "Channel" AS c3 ON c2.channel_id = c3.id
) AS t3 ON t.id = t3.user_id
ORDER BY t.id, t1.id, t1.id0, t1.id1, t1.id00, t3.id
2024-02-11 19:14:29.396 +03:00 [INF] initializing user data update
2024-02-11 19:14:29.397 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.parent_id = @__p_0
2024-02-11 19:14:29.398 +03:00 [INF] Received request for getProfilePictureAndUsername. Request hash: 5ec5950f142bca89e2aa6cb4127bdea9391929bfdb585a0fda8bc0406276e946
2024-02-11 19:14:29.400 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.comment_id = @__p_0
2024-02-11 19:14:29.403 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.parent_id = @__p_0
2024-02-11 19:14:29.406 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.comment_id = @__p_0
2024-02-11 19:14:29.408 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.parent_id = @__p_0
2024-02-11 19:14:29.412 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.comment_id = @__p_0
2024-02-11 19:14:29.414 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-11 19:14:29.416 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-11 19:14:29.420 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-11 19:14:29.422 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-11 19:14:29.425 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-11 19:14:29.429 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-11 19:14:29.432 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-11 19:14:29.436 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-11 19:14:29.438 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-11 19:14:29.442 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-11 19:14:29.445 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-11 19:14:29.448 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-11 19:14:29.451 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-11 19:14:29.456 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-11 19:14:29.459 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-11 19:14:29.462 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-11 19:14:29.466 +03:00 [INF] Executing OkObjectResult, writing value of type 'TgCheckerApi.Models.GetModels.UserProfileModel'.
2024-02-11 19:14:29.467 +03:00 [INF] Executed action TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi) in 81.7898ms
2024-02-11 19:14:29.468 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-11 19:14:29.469 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/api/Auth - - - 200 25485 application/json;+charset=utf-8 88.5458ms
2024-02-11 19:14:55.748 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7256/api/Channel/Bump/80 - 0
2024-02-11 19:14:55.749 +03:00 [INF] CORS policy execution successful.
2024-02-11 19:14:55.750 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.ChannelController.BumpChannel (TgCheckerApi)'
2024-02-11 19:14:55.762 +03:00 [INF] Route matched with {action = "BumpChannel", controller = "Channel"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] BumpChannel(Int32) on controller TgCheckerApi.Controllers.ChannelController (TgCheckerApi).
2024-02-11 19:14:55.776 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."Url", c."user"
FROM "Channel" AS c
WHERE c.id = @__p_0
LIMIT 1
2024-02-11 19:14:55.781 +03:00 [INF] Executing BadRequestObjectResult, writing value of type 'System.String'.
2024-02-11 19:14:55.782 +03:00 [INF] Executed action TgCheckerApi.Controllers.ChannelController.BumpChannel (TgCheckerApi) in 17.7355ms
2024-02-11 19:14:55.783 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.ChannelController.BumpChannel (TgCheckerApi)'
2024-02-11 19:14:55.784 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7256/api/Channel/Bump/80 - 0 - 400 - text/plain;+charset=utf-8 35.9004ms
2024-02-11 19:14:59.407 +03:00 [WRN] New task timed out. Hash: 5ec5950f142bca89e2aa6cb4127bdea9391929bfdb585a0fda8bc0406276e946
2024-02-11 19:14:59.409 +03:00 [WRN] Response is not in expected 'OkObjectResult' format or does not contain a string value.
2024-02-11 19:14:59.429 +03:00 [ERR] Invalid operation when updating user profile.
System.InvalidOperationException: Invalid response format.
   at TgCheckerApi.Services.WebSocketService.ResponseToObject[T](IActionResult response) in C:\Users\79103\Source\Repos\goldman2g5\TgCheckerApiPOLAMPUS\TgCheckerApi\Services\WebSocketService.cs:line 75
   at TgCheckerApi.Controllers.AuthController.UpdateUserProfileIfNeeded(User user) in C:\Users\79103\Source\Repos\goldman2g5\TgCheckerApiPOLAMPUS\TgCheckerApi\Controllers\AuthController.cs:line 146
2024-02-11 19:15:07.495 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7256/api/Channel/Bump/80 - 0
2024-02-11 19:15:07.496 +03:00 [INF] CORS policy execution successful.
2024-02-11 19:15:07.498 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.ChannelController.BumpChannel (TgCheckerApi)'
2024-02-11 19:15:07.499 +03:00 [INF] Route matched with {action = "BumpChannel", controller = "Channel"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] BumpChannel(Int32) on controller TgCheckerApi.Controllers.ChannelController (TgCheckerApi).
2024-02-11 19:15:07.503 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."Url", c."user"
FROM "Channel" AS c
WHERE c.id = @__p_0
LIMIT 1
2024-02-11 19:15:07.505 +03:00 [INF] Executing BadRequestObjectResult, writing value of type 'System.String'.
2024-02-11 19:15:07.506 +03:00 [INF] Executed action TgCheckerApi.Controllers.ChannelController.BumpChannel (TgCheckerApi) in 5.8781ms
2024-02-11 19:15:07.507 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.ChannelController.BumpChannel (TgCheckerApi)'
2024-02-11 19:15:07.508 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7256/api/Channel/Bump/80 - 0 - 400 - text/plain;+charset=utf-8 13.2194ms
2024-02-11 19:15:17.673 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7256/api/Channel/Bump/83 - 0
2024-02-11 19:15:17.674 +03:00 [INF] CORS policy execution successful.
2024-02-11 19:15:17.675 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.ChannelController.BumpChannel (TgCheckerApi)'
2024-02-11 19:15:17.675 +03:00 [INF] Route matched with {action = "BumpChannel", controller = "Channel"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] BumpChannel(Int32) on controller TgCheckerApi.Controllers.ChannelController (TgCheckerApi).
2024-02-11 19:15:17.680 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."Url", c."user"
FROM "Channel" AS c
WHERE c.id = @__p_0
LIMIT 1
2024-02-11 19:15:17.685 +03:00 [INF] Executing BadRequestObjectResult, writing value of type 'System.String'.
2024-02-11 19:15:17.686 +03:00 [INF] Executed action TgCheckerApi.Controllers.ChannelController.BumpChannel (TgCheckerApi) in 8.1657ms
2024-02-11 19:15:17.687 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.ChannelController.BumpChannel (TgCheckerApi)'
2024-02-11 19:15:17.689 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7256/api/Channel/Bump/83 - 0 - 400 - text/plain;+charset=utf-8 15.6141ms
2024-02-11 19:15:29.550 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7256/api/Channel/Bump/80 - 0
2024-02-11 19:15:29.551 +03:00 [INF] CORS policy execution successful.
2024-02-11 19:15:29.552 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.ChannelController.BumpChannel (TgCheckerApi)'
2024-02-11 19:15:29.553 +03:00 [INF] Route matched with {action = "BumpChannel", controller = "Channel"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] BumpChannel(Int32) on controller TgCheckerApi.Controllers.ChannelController (TgCheckerApi).
2024-02-11 19:15:29.556 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."Url", c."user"
FROM "Channel" AS c
WHERE c.id = @__p_0
LIMIT 1
2024-02-11 19:15:29.561 +03:00 [INF] Executing BadRequestObjectResult, writing value of type 'System.String'.
2024-02-11 19:15:29.562 +03:00 [INF] Executed action TgCheckerApi.Controllers.ChannelController.BumpChannel (TgCheckerApi) in 8.5953ms
2024-02-11 19:15:29.563 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.ChannelController.BumpChannel (TgCheckerApi)'
2024-02-11 19:15:29.564 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7256/api/Channel/Bump/80 - 0 - 400 - text/plain;+charset=utf-8 14.7778ms
2024-02-11 19:15:43.927 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7256/api/Channel/Bump/80 - 0
2024-02-11 19:15:43.929 +03:00 [INF] CORS policy execution successful.
2024-02-11 19:15:43.929 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.ChannelController.BumpChannel (TgCheckerApi)'
2024-02-11 19:15:43.930 +03:00 [INF] Route matched with {action = "BumpChannel", controller = "Channel"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] BumpChannel(Int32) on controller TgCheckerApi.Controllers.ChannelController (TgCheckerApi).
2024-02-11 19:15:43.934 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."Url", c."user"
FROM "Channel" AS c
WHERE c.id = @__p_0
LIMIT 1
2024-02-11 19:15:43.938 +03:00 [INF] Executing BadRequestObjectResult, writing value of type 'System.String'.
2024-02-11 19:15:43.939 +03:00 [INF] Executed action TgCheckerApi.Controllers.ChannelController.BumpChannel (TgCheckerApi) in 7.5401ms
2024-02-11 19:15:43.940 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.ChannelController.BumpChannel (TgCheckerApi)'
2024-02-11 19:15:43.941 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7256/api/Channel/Bump/80 - 0 - 400 - text/plain;+charset=utf-8 14.3799ms
2024-02-11 19:19:13.324 +03:00 [INF] User profile is available. Using 'C:\Users\79103\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-11 19:19:13.546 +03:00 [INF] Default Quartz.NET properties loaded from embedded resource file
2024-02-11 19:19:13.598 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-02-11 19:19:13.598 +03:00 [INF] Quartz Scheduler created
2024-02-11 19:19:13.604 +03:00 [INF] RAMJobStore initialized.
2024-02-11 19:19:13.605 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-02-11 19:19:13.605 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-02-11 19:19:13.606 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-02-11 19:19:13.607 +03:00 [INF] JobFactory set to: TgCheckerApi.Job.QuartzJobFactory
2024-02-11 19:19:13.666 +03:00 [INF] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2024-02-11 19:19:13.833 +03:00 [INF] Now listening on: https://localhost:7256
2024-02-11 19:19:13.834 +03:00 [INF] Now listening on: https://localhost:5244
2024-02-11 19:19:13.839 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-11 19:19:13.840 +03:00 [INF] Hosting environment: Development
2024-02-11 19:19:13.841 +03:00 [INF] Content root path: C:\Users\79103\Source\Repos\goldman2g5\TgCheckerApiPOLAMPUS\TgCheckerApi\
2024-02-11 19:19:14.118 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/swagger/index.html - -
2024-02-11 19:19:14.469 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/swagger/index.html - - - 200 - text/html;charset=utf-8 353.6881ms
2024-02-11 19:19:14.519 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/_framework/aspnetcore-browser-refresh.js - -
2024-02-11 19:19:14.524 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/_framework/aspnetcore-browser-refresh.js - - - 200 12356 application/javascript;+charset=utf-8 4.9121ms
2024-02-11 19:19:14.583 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/_vs/browserLink - -
2024-02-11 19:19:14.602 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 19.4514ms
2024-02-11 19:19:14.674 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/swagger/v1/swagger.json - -
2024-02-11 19:19:14.857 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 182.2325ms
2024-02-11 19:19:23.855 +03:00 [INF] Start processing HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-11 19:19:23.862 +03:00 [INF] Sending HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-11 19:19:25.627 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7256/api/Channel/Bump/80 - 0
2024-02-11 19:19:25.635 +03:00 [INF] CORS policy execution successful.
2024-02-11 19:19:25.728 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.ChannelController.BumpChannel (TgCheckerApi)'
2024-02-11 19:19:25.758 +03:00 [INF] Route matched with {action = "BumpChannel", controller = "Channel"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] BumpChannel(Int32) on controller TgCheckerApi.Controllers.ChannelController (TgCheckerApi).
2024-02-11 19:19:28.025 +03:00 [INF] Executed DbCommand (66ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."Url", c."user"
FROM "Channel" AS c
WHERE c.id = @__p_0
LIMIT 1
2024-02-11 19:19:28.321 +03:00 [INF] Executed action TgCheckerApi.Controllers.ChannelController.BumpChannel (TgCheckerApi) in 2557.2352ms
2024-02-11 19:19:28.326 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.ChannelController.BumpChannel (TgCheckerApi)'
2024-02-11 19:19:28.331 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: The provider for the source IQueryable doesn't implement IDbAsyncQueryProvider. Only providers that implement IDbAsyncQueryProvider can be used for Entity Framework asynchronous operations. For more details see http://go.microsoft.com/fwlink/?LinkId=287068.
   at System.Data.Entity.QueryableExtensions.FirstOrDefaultAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at System.Data.Entity.QueryableExtensions.FirstOrDefaultAsync[TSource](IQueryable`1 source)
   at TgCheckerApi.Utility.ChannelService.GetChannelSubscriptionAsync(Int32 channelId) in C:\Users\79103\Source\Repos\goldman2g5\TgCheckerApiPOLAMPUS\TgCheckerApi\Services\ChannelService.cs:line 34
   at TgCheckerApi.Controllers.ChannelController.BumpChannel(Int32 id) in C:\Users\79103\Source\Repos\goldman2g5\TgCheckerApiPOLAMPUS\TgCheckerApi\Controllers\ChannelController.cs:line 369
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2024-02-11 19:19:28.403 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7256/api/Channel/Bump/80 - 0 - 500 - text/plain;+charset=utf-8 2776.5648ms
2024-02-11 19:20:51.320 +03:00 [INF] User profile is available. Using 'C:\Users\79103\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-11 19:20:51.509 +03:00 [INF] Default Quartz.NET properties loaded from embedded resource file
2024-02-11 19:20:51.557 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-02-11 19:20:51.558 +03:00 [INF] Quartz Scheduler created
2024-02-11 19:20:51.564 +03:00 [INF] RAMJobStore initialized.
2024-02-11 19:20:51.565 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-02-11 19:20:51.566 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-02-11 19:20:51.566 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-02-11 19:20:51.568 +03:00 [INF] JobFactory set to: TgCheckerApi.Job.QuartzJobFactory
2024-02-11 19:20:51.616 +03:00 [INF] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2024-02-11 19:20:51.773 +03:00 [INF] Now listening on: https://localhost:7256
2024-02-11 19:20:51.775 +03:00 [INF] Now listening on: https://localhost:5244
2024-02-11 19:20:51.779 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-11 19:20:51.780 +03:00 [INF] Hosting environment: Development
2024-02-11 19:20:51.780 +03:00 [INF] Content root path: C:\Users\79103\Source\Repos\goldman2g5\TgCheckerApiPOLAMPUS\TgCheckerApi\
2024-02-11 19:20:52.384 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/swagger/index.html - -
2024-02-11 19:20:52.735 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/swagger/index.html - - - 200 - text/html;charset=utf-8 355.6882ms
2024-02-11 19:20:52.783 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/_framework/aspnetcore-browser-refresh.js - -
2024-02-11 19:20:52.791 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/_framework/aspnetcore-browser-refresh.js - - - 200 12356 application/javascript;+charset=utf-8 8.5382ms
2024-02-11 19:20:52.802 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/_vs/browserLink - -
2024-02-11 19:20:52.827 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 24.8525ms
2024-02-11 19:20:52.893 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/swagger/v1/swagger.json - -
2024-02-11 19:20:53.132 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 239.1224ms
2024-02-11 19:21:01.793 +03:00 [INF] Start processing HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-11 19:21:01.801 +03:00 [INF] Sending HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-11 19:22:41.860 +03:00 [ERR] Error occurred executing UpdateSubscribersJob via HTTP request.
System.Threading.Tasks.TaskCanceledException: The request was canceled due to the configured HttpClient.Timeout of 100 seconds elapsing.
 ---> System.TimeoutException: The operation was canceled.
 ---> System.Threading.Tasks.TaskCanceledException: The operation was canceled.
 ---> System.IO.IOException: Unable to read data from the transport connection: The I/O operation has been aborted because of either a thread exit or an application request..
 ---> System.Net.Sockets.SocketException (995): The I/O operation has been aborted because of either a thread exit or an application request.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Security.SslStream.EnsureFullTlsFrameAsync[TIOAdapter](TIOAdapter adapter)
   at System.Net.Security.SslStream.ReadAsyncInternal[TIOAdapter](TIOAdapter adapter, Memory`1 buffer)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsyncCore(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsyncCore(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   --- End of inner exception stack trace ---
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpClient.HandleFailure(Exception e, Boolean telemetryStarted, HttpResponseMessage response, CancellationTokenSource cts, CancellationToken cancellationToken, CancellationTokenSource pendingRequestsCts)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at TgCheckerApi.Job.UpdateSubscribersJob.Execute(IJobExecutionContext context) in C:\Users\79103\Source\Repos\goldman2g5\TgCheckerApiPOLAMPUS\TgCheckerApi\Job\UpdateSubscribersJob.cs:line 49
2024-02-11 19:48:18.615 +03:00 [INF] User profile is available. Using 'C:\Users\79103\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-11 19:48:18.842 +03:00 [INF] Default Quartz.NET properties loaded from embedded resource file
2024-02-11 19:48:18.890 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-02-11 19:48:18.891 +03:00 [INF] Quartz Scheduler created
2024-02-11 19:48:18.895 +03:00 [INF] RAMJobStore initialized.
2024-02-11 19:48:18.896 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-02-11 19:48:18.897 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-02-11 19:48:18.898 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-02-11 19:48:18.899 +03:00 [INF] JobFactory set to: TgCheckerApi.Job.QuartzJobFactory
2024-02-11 19:48:18.953 +03:00 [INF] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2024-02-11 19:48:19.104 +03:00 [INF] Now listening on: https://localhost:7256
2024-02-11 19:48:19.105 +03:00 [INF] Now listening on: https://localhost:5244
2024-02-11 19:48:19.109 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-11 19:48:19.110 +03:00 [INF] Hosting environment: Development
2024-02-11 19:48:19.110 +03:00 [INF] Content root path: C:\Users\79103\Source\Repos\goldman2g5\TgCheckerApiPOLAMPUS\TgCheckerApi\
2024-02-11 19:48:19.547 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/swagger/index.html - -
2024-02-11 19:48:19.848 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/swagger/index.html - - - 200 - text/html;charset=utf-8 304.0880ms
2024-02-11 19:48:19.891 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/_framework/aspnetcore-browser-refresh.js - -
2024-02-11 19:48:19.903 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/_framework/aspnetcore-browser-refresh.js - - - 200 12356 application/javascript;+charset=utf-8 10.2250ms
2024-02-11 19:48:19.919 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/_vs/browserLink - -
2024-02-11 19:48:19.939 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 19.6435ms
2024-02-11 19:48:20.007 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/swagger/v1/swagger.json - -
2024-02-11 19:48:20.227 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 219.7108ms
2024-02-11 19:48:27.554 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7256/api/Channel/Bump/80 - 0
2024-02-11 19:48:27.560 +03:00 [INF] CORS policy execution successful.
2024-02-11 19:48:27.642 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.ChannelController.BumpChannel (TgCheckerApi)'
2024-02-11 19:48:27.668 +03:00 [INF] Route matched with {action = "BumpChannel", controller = "Channel"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] BumpChannel(Int32) on controller TgCheckerApi.Controllers.ChannelController (TgCheckerApi).
2024-02-11 19:48:29.155 +03:00 [INF] Start processing HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-11 19:48:29.166 +03:00 [INF] Sending HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-11 19:48:29.874 +03:00 [INF] Received HTTP response headers after 702.317ms - 200
2024-02-11 19:48:29.877 +03:00 [INF] End processing HTTP request after 727.8039ms - 200
2024-02-11 19:48:29.885 +03:00 [INF] Successfully processed all channels via HTTP request at: {DateTime.UtcNow}
2024-02-11 19:48:30.136 +03:00 [INF] Executed DbCommand (77ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."Url", c."user"
FROM "Channel" AS c
WHERE c.id = @__p_0
LIMIT 1
2024-02-11 19:48:30.414 +03:00 [INF] Executed action TgCheckerApi.Controllers.ChannelController.BumpChannel (TgCheckerApi) in 2740.5023ms
2024-02-11 19:48:30.417 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.ChannelController.BumpChannel (TgCheckerApi)'
2024-02-11 19:48:30.420 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: The source IQueryable doesn't implement IDbAsyncEnumerable<TgCheckerApi.Models.BaseModels.ChannelHasSubscription>. Only sources that implement IDbAsyncEnumerable can be used for Entity Framework asynchronous operations. For more details see http://go.microsoft.com/fwlink/?LinkId=287068.
   at System.Data.Entity.QueryableExtensions.AsDbAsyncEnumerable[T](IQueryable`1 source)
   at System.Data.Entity.QueryableExtensions.ToListAsync[TSource](IQueryable`1 source)
   at TgCheckerApi.Utility.ChannelService.GetChannelMultiplierAsync(Int32 channelId) in C:\Users\79103\Source\Repos\goldman2g5\TgCheckerApiPOLAMPUS\TgCheckerApi\Services\ChannelService.cs:line 35
   at TgCheckerApi.Controllers.ChannelController.BumpChannel(Int32 id) in C:\Users\79103\Source\Repos\goldman2g5\TgCheckerApiPOLAMPUS\TgCheckerApi\Controllers\ChannelController.cs:line 369
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2024-02-11 19:48:30.489 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7256/api/Channel/Bump/80 - 0 - 500 - text/plain;+charset=utf-8 2934.3801ms
2024-02-11 19:50:29.439 +03:00 [INF] User profile is available. Using 'C:\Users\79103\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-11 19:50:29.671 +03:00 [INF] Default Quartz.NET properties loaded from embedded resource file
2024-02-11 19:50:29.722 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-02-11 19:50:29.727 +03:00 [INF] Quartz Scheduler created
2024-02-11 19:50:29.728 +03:00 [INF] RAMJobStore initialized.
2024-02-11 19:50:29.730 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-02-11 19:50:29.730 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-02-11 19:50:29.731 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-02-11 19:50:29.732 +03:00 [INF] JobFactory set to: TgCheckerApi.Job.QuartzJobFactory
2024-02-11 19:50:29.782 +03:00 [INF] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2024-02-11 19:50:29.912 +03:00 [INF] Now listening on: https://localhost:7256
2024-02-11 19:50:29.916 +03:00 [INF] Now listening on: https://localhost:5244
2024-02-11 19:50:29.919 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-11 19:50:29.920 +03:00 [INF] Hosting environment: Development
2024-02-11 19:50:29.921 +03:00 [INF] Content root path: C:\Users\79103\Source\Repos\goldman2g5\TgCheckerApiPOLAMPUS\TgCheckerApi\
2024-02-11 19:50:30.348 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/swagger/index.html - -
2024-02-11 19:50:30.662 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/swagger/index.html - - - 200 - text/html;charset=utf-8 318.8156ms
2024-02-11 19:50:30.706 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/_framework/aspnetcore-browser-refresh.js - -
2024-02-11 19:50:30.713 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/_framework/aspnetcore-browser-refresh.js - - - 200 12356 application/javascript;+charset=utf-8 6.4143ms
2024-02-11 19:50:30.717 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/_vs/browserLink - -
2024-02-11 19:50:30.731 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 13.4497ms
2024-02-11 19:50:30.788 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/swagger/v1/swagger.json - -
2024-02-11 19:50:30.950 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 162.5982ms
2024-02-11 19:50:39.959 +03:00 [INF] Start processing HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-11 19:50:39.967 +03:00 [INF] Sending HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-11 19:50:42.274 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7256/api/Channel/Bump/80 - 0
2024-02-11 19:50:42.292 +03:00 [INF] CORS policy execution successful.
2024-02-11 19:50:42.383 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.ChannelController.BumpChannel (TgCheckerApi)'
2024-02-11 19:50:42.409 +03:00 [INF] Route matched with {action = "BumpChannel", controller = "Channel"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] BumpChannel(Int32) on controller TgCheckerApi.Controllers.ChannelController (TgCheckerApi).
2024-02-11 19:50:44.680 +03:00 [INF] Executed DbCommand (70ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."Url", c."user"
FROM "Channel" AS c
WHERE c.id = @__p_0
LIMIT 1
2024-02-11 19:50:44.870 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__channelId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__channelId_0
2024-02-11 19:50:44.921 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.multiplier, s.name, s.price, s.tag_limit
FROM "SubType" AS s
WHERE s.id = @__p_0
LIMIT 1
2024-02-11 19:50:45.067 +03:00 [INF] Executed DbCommand (23ms) [Parameters=[@p3='?' (DbType = Int32), @p0='?' (DbType = Decimal), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Channel" SET bumps = @p0, last_bump = @p1, notification_sent = @p2
WHERE id = @p3;
2024-02-11 19:50:45.100 +03:00 [INF] Executing StatusCodeResult, setting HTTP status code 204
2024-02-11 19:50:45.106 +03:00 [INF] Executed action TgCheckerApi.Controllers.ChannelController.BumpChannel (TgCheckerApi) in 2691.358ms
2024-02-11 19:50:45.109 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.ChannelController.BumpChannel (TgCheckerApi)'
2024-02-11 19:50:45.128 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7256/api/Channel/Bump/80 - 0 - 204 - - 2854.0941ms
2024-02-11 19:51:06.991 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7256/api/Channel/Bump/80 - 0
2024-02-11 19:51:06.993 +03:00 [INF] CORS policy execution successful.
2024-02-11 19:51:06.999 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.ChannelController.BumpChannel (TgCheckerApi)'
2024-02-11 19:51:07.000 +03:00 [INF] Route matched with {action = "BumpChannel", controller = "Channel"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] BumpChannel(Int32) on controller TgCheckerApi.Controllers.ChannelController (TgCheckerApi).
2024-02-11 19:51:07.016 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."Url", c."user"
FROM "Channel" AS c
WHERE c.id = @__p_0
LIMIT 1
2024-02-11 19:51:07.027 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__channelId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__channelId_0
2024-02-11 19:51:07.034 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.multiplier, s.name, s.price, s.tag_limit
FROM "SubType" AS s
WHERE s.id = @__p_0
LIMIT 1
2024-02-11 19:51:07.041 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@p2='?' (DbType = Int32), @p0='?' (DbType = Decimal), @p1='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Channel" SET bumps = @p0, last_bump = @p1
WHERE id = @p2;
2024-02-11 19:51:07.044 +03:00 [INF] Executing StatusCodeResult, setting HTTP status code 204
2024-02-11 19:51:07.045 +03:00 [INF] Executed action TgCheckerApi.Controllers.ChannelController.BumpChannel (TgCheckerApi) in 43.598ms
2024-02-11 19:51:07.046 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.ChannelController.BumpChannel (TgCheckerApi)'
2024-02-11 19:51:07.048 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7256/api/Channel/Bump/80 - 0 - 204 - - 57.1966ms
2024-02-11 19:51:45.536 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/api/Channel/Page/1?&sortOption=rating&ascending=False&language= - -
2024-02-11 19:51:45.537 +03:00 [INF] CORS policy execution successful.
2024-02-11 19:51:45.539 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.ChannelController.GetChannels (TgCheckerApi)'
2024-02-11 19:51:45.543 +03:00 [INF] Route matched with {action = "GetChannels", controller = "Channel"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.GetModels.ChannelGetModel]]] GetChannels(Int32, System.String, System.String, System.String, System.String, System.String) on controller TgCheckerApi.Controllers.ChannelController (TgCheckerApi).
2024-02-11 19:51:45.664 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Channel" AS c
WHERE c."Hidden" <> TRUE OR c."Hidden" IS NULL
2024-02-11 19:51:45.689 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."Url", c."user"
FROM "Channel" AS c
WHERE c."Hidden" <> TRUE OR c."Hidden" IS NULL
ORDER BY COALESCE(c.bumps, 0.0) DESC
LIMIT @__p_1 OFFSET @__p_0
2024-02-11 19:51:45.901 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag, t.id, t.text
FROM "ChannelHasTag" AS c
LEFT JOIN "Tag" AS t ON c.tag = t.id
WHERE c.channel = @__channel_Id_0
2024-02-11 19:51:45.931 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-11 19:51:45.935 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag, t.id, t.text
FROM "ChannelHasTag" AS c
LEFT JOIN "Tag" AS t ON c.tag = t.id
WHERE c.channel = @__channel_Id_0
2024-02-11 19:51:45.940 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-11 19:51:45.943 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag, t.id, t.text
FROM "ChannelHasTag" AS c
LEFT JOIN "Tag" AS t ON c.tag = t.id
WHERE c.channel = @__channel_Id_0
2024-02-11 19:51:45.946 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-11 19:51:45.953 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.GetModels.ChannelGetModel, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-11 19:51:45.986 +03:00 [INF] Executed action TgCheckerApi.Controllers.ChannelController.GetChannels (TgCheckerApi) in 441.3745ms
2024-02-11 19:51:45.987 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.ChannelController.GetChannels (TgCheckerApi)'
2024-02-11 19:51:45.989 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/api/Channel/Page/1?&sortOption=rating&ascending=False&language= - - - 200 16415 application/json;+charset=utf-8 454.9655ms
2024-02-11 19:51:46.251 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/api/Channel/Page/1?&sortOption=rating&ascending=False&language= - -
2024-02-11 19:51:46.253 +03:00 [INF] CORS policy execution successful.
2024-02-11 19:51:46.255 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.ChannelController.GetChannels (TgCheckerApi)'
2024-02-11 19:51:46.256 +03:00 [INF] Route matched with {action = "GetChannels", controller = "Channel"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.GetModels.ChannelGetModel]]] GetChannels(Int32, System.String, System.String, System.String, System.String, System.String) on controller TgCheckerApi.Controllers.ChannelController (TgCheckerApi).
2024-02-11 19:51:46.262 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Channel" AS c
WHERE c."Hidden" <> TRUE OR c."Hidden" IS NULL
2024-02-11 19:51:46.270 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."Url", c."user"
FROM "Channel" AS c
WHERE c."Hidden" <> TRUE OR c."Hidden" IS NULL
ORDER BY COALESCE(c.bumps, 0.0) DESC
LIMIT @__p_1 OFFSET @__p_0
2024-02-11 19:51:46.277 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag, t.id, t.text
FROM "ChannelHasTag" AS c
LEFT JOIN "Tag" AS t ON c.tag = t.id
WHERE c.channel = @__channel_Id_0
2024-02-11 19:51:46.280 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-11 19:51:46.283 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag, t.id, t.text
FROM "ChannelHasTag" AS c
LEFT JOIN "Tag" AS t ON c.tag = t.id
WHERE c.channel = @__channel_Id_0
2024-02-11 19:51:46.287 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-11 19:51:46.289 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag, t.id, t.text
FROM "ChannelHasTag" AS c
LEFT JOIN "Tag" AS t ON c.tag = t.id
WHERE c.channel = @__channel_Id_0
2024-02-11 19:51:46.292 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-11 19:51:46.295 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.GetModels.ChannelGetModel, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-11 19:51:46.297 +03:00 [INF] Executed action TgCheckerApi.Controllers.ChannelController.GetChannels (TgCheckerApi) in 36.8545ms
2024-02-11 19:51:46.298 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.ChannelController.GetChannels (TgCheckerApi)'
2024-02-11 19:51:46.299 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/api/Channel/Page/1?&sortOption=rating&ascending=False&language= - - - 200 16415 application/json;+charset=utf-8 48.6647ms
2024-02-11 19:51:46.318 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/api/Channel/Page/1?&sortOption=rating&ascending=False&language= - -
2024-02-11 19:51:46.319 +03:00 [INF] CORS policy execution successful.
2024-02-11 19:51:46.319 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.ChannelController.GetChannels (TgCheckerApi)'
2024-02-11 19:51:46.320 +03:00 [INF] Route matched with {action = "GetChannels", controller = "Channel"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.GetModels.ChannelGetModel]]] GetChannels(Int32, System.String, System.String, System.String, System.String, System.String) on controller TgCheckerApi.Controllers.ChannelController (TgCheckerApi).
2024-02-11 19:51:46.324 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Channel" AS c
WHERE c."Hidden" <> TRUE OR c."Hidden" IS NULL
2024-02-11 19:51:46.328 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."Url", c."user"
FROM "Channel" AS c
WHERE c."Hidden" <> TRUE OR c."Hidden" IS NULL
ORDER BY COALESCE(c.bumps, 0.0) DESC
LIMIT @__p_1 OFFSET @__p_0
2024-02-11 19:51:46.332 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag, t.id, t.text
FROM "ChannelHasTag" AS c
LEFT JOIN "Tag" AS t ON c.tag = t.id
WHERE c.channel = @__channel_Id_0
2024-02-11 19:51:46.335 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-11 19:51:46.338 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag, t.id, t.text
FROM "ChannelHasTag" AS c
LEFT JOIN "Tag" AS t ON c.tag = t.id
WHERE c.channel = @__channel_Id_0
2024-02-11 19:51:46.341 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-11 19:51:46.343 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag, t.id, t.text
FROM "ChannelHasTag" AS c
LEFT JOIN "Tag" AS t ON c.tag = t.id
WHERE c.channel = @__channel_Id_0
2024-02-11 19:51:46.344 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7256/api/Notification/UserNotifications - -
2024-02-11 19:51:46.346 +03:00 [INF] CORS policy execution successful.
2024-02-11 19:51:46.346 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-11 19:51:46.347 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7256/api/Notification/UserNotifications - - - 204 - - 2.4207ms
2024-02-11 19:51:46.348 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.GetModels.ChannelGetModel, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-11 19:51:46.351 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/api/Notification/UserNotifications - -
2024-02-11 19:51:46.352 +03:00 [INF] Executed action TgCheckerApi.Controllers.ChannelController.GetChannels (TgCheckerApi) in 28.7927ms
2024-02-11 19:51:46.352 +03:00 [INF] CORS policy execution successful.
2024-02-11 19:51:46.353 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.ChannelController.GetChannels (TgCheckerApi)'
2024-02-11 19:51:46.354 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/api/Channel/Page/1?&sortOption=rating&ascending=False&language= - - - 200 16415 application/json;+charset=utf-8 36.0191ms
2024-02-11 19:51:46.371 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/api/Tags - -
2024-02-11 19:51:46.372 +03:00 [INF] CORS policy execution successful.
2024-02-11 19:51:46.372 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.TagsController.GetTags (TgCheckerApi)'
2024-02-11 19:51:46.375 +03:00 [INF] Route matched with {action = "GetTags", controller = "Tags"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.String]] GetTags() on controller TgCheckerApi.Controllers.TagsController (TgCheckerApi).
2024-02-11 19:51:46.383 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT t.text
FROM "Tag" AS t
2024-02-11 19:51:46.385 +03:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2024-02-11 19:51:46.386 +03:00 [INF] Executed action TgCheckerApi.Controllers.TagsController.GetTags (TgCheckerApi) in 9.2544ms
2024-02-11 19:51:46.388 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.TagsController.GetTags (TgCheckerApi)'
2024-02-11 19:51:46.389 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/api/Tags - - - 200 - text/plain;+charset=utf-8 17.8169ms
2024-02-11 19:51:46.433 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetUserNotifications (TgCheckerApi)'
2024-02-11 19:51:46.437 +03:00 [INF] Route matched with {action = "GetUserNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetUserNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-11 19:51:46.533 +03:00 [INF] Executed DbCommand (13ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "User" AS u
WHERE u.unique_key = @__uniqueKeyClaim_0
LIMIT 2
2024-02-11 19:51:46.592 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.user_id = @__user_Id_0
2024-02-11 19:51:46.612 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.BaseModels.Notification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-11 19:51:46.617 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetUserNotifications (TgCheckerApi) in 178.2163ms
2024-02-11 19:51:46.618 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetUserNotifications (TgCheckerApi)'
2024-02-11 19:51:46.620 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/api/Notification/UserNotifications - - - 200 465 application/json;+charset=utf-8 269.6784ms
2024-02-11 19:51:46.643 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7256/api/Auth - -
2024-02-11 19:51:46.644 +03:00 [INF] CORS policy execution successful.
2024-02-11 19:51:46.644 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7256/api/Auth - - - 204 - - 1.4116ms
2024-02-11 19:51:46.648 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/api/Auth - -
2024-02-11 19:51:46.649 +03:00 [INF] CORS policy execution successful.
2024-02-11 19:51:46.650 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-11 19:51:46.654 +03:00 [INF] Route matched with {action = "GetMe", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TgCheckerApi.Models.GetModels.UserProfileModel]] GetMe() on controller TgCheckerApi.Controllers.AuthController (TgCheckerApi).
2024-02-11 19:51:46.777 +03:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2024-02-11 19:51:46.789 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.avatar, t.chat_id, t.last_update, t.notification_settings, t.telegram_id, t.unique_key, t.username, t1.id, t1.channel_id, t1.user_id, t1.id0, t1.avatar, t1.bumps, t1.description, t1.flag, t1."Hidden", t1.language, t1.last_bump, t1.members, t1.name, t1.notification_sent, t1.notifications, t1.promo_post, t1.promo_post_interval, t1.promo_post_last, t1.promo_post_sent, t1.promo_post_time, t1.telegram_id, t1."Url", t1."user", t1.id1, t1.channel, t1.tag, t1.id00, t1.text, t3.id, t3.channel_id, t3.content, t3.created_at, t3.parent_id, t3.rating, t3.user_id, t3.id0, t3.avatar, t3.bumps, t3.description, t3.flag, t3."Hidden", t3.language, t3.last_bump, t3.members, t3.name, t3.notification_sent, t3.notifications, t3.promo_post, t3.promo_post_interval, t3.promo_post_last, t3.promo_post_sent, t3.promo_post_time, t3.telegram_id, t3."Url", t3."user"
FROM (
    SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
    FROM "User" AS u
    WHERE u.unique_key = @__uniqueKeyClaim_0
    LIMIT 2
) AS t
LEFT JOIN (
    SELECT c.id, c.channel_id, c.user_id, c0.id AS id0, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."Url", c0."user", t0.id AS id1, t0.channel, t0.tag, t0.id0 AS id00, t0.text
    FROM "ChannelAccess" AS c
    LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
    LEFT JOIN (
        SELECT c1.id, c1.channel, c1.tag, t2.id AS id0, t2.text
        FROM "ChannelHasTag" AS c1
        LEFT JOIN "Tag" AS t2 ON c1.tag = t2.id
    ) AS t0 ON c0.id = t0.channel
) AS t1 ON t.id = t1.user_id
LEFT JOIN (
    SELECT c2.id, c2.channel_id, c2.content, c2.created_at, c2.parent_id, c2.rating, c2.user_id, c3.id AS id0, c3.avatar, c3.bumps, c3.description, c3.flag, c3."Hidden", c3.language, c3.last_bump, c3.members, c3.name, c3.notification_sent, c3.notifications, c3.promo_post, c3.promo_post_interval, c3.promo_post_last, c3.promo_post_sent, c3.promo_post_time, c3.telegram_id, c3."Url", c3."user"
    FROM "Comment" AS c2
    INNER JOIN "Channel" AS c3 ON c2.channel_id = c3.id
) AS t3 ON t.id = t3.user_id
ORDER BY t.id, t1.id, t1.id0, t1.id1, t1.id00, t3.id
2024-02-11 19:51:46.813 +03:00 [INF] initializing user data update
2024-02-11 19:51:46.838 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.parent_id = @__p_0
2024-02-11 19:51:46.838 +03:00 [INF] Received request for getProfilePictureAndUsername. Request hash: 5ec5950f142bca89e2aa6cb4127bdea9391929bfdb585a0fda8bc0406276e946
2024-02-11 19:51:46.871 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.comment_id = @__p_0
2024-02-11 19:51:46.877 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.parent_id = @__p_0
2024-02-11 19:51:46.880 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.comment_id = @__p_0
2024-02-11 19:51:46.882 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.parent_id = @__p_0
2024-02-11 19:51:46.884 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.comment_id = @__p_0
2024-02-11 19:51:46.898 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-11 19:51:46.901 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-11 19:51:46.906 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-11 19:51:46.912 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-11 19:51:46.936 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-11 19:51:46.981 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-11 19:51:47.008 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-11 19:51:47.037 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-11 19:51:47.041 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-11 19:51:47.044 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-11 19:51:47.047 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-11 19:51:47.048 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-11 19:51:47.051 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-11 19:51:47.055 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-11 19:51:47.072 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-11 19:51:47.075 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-11 19:51:47.077 +03:00 [INF] Executing OkObjectResult, writing value of type 'TgCheckerApi.Models.GetModels.UserProfileModel'.
2024-02-11 19:51:47.083 +03:00 [INF] Executed action TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi) in 427.6799ms
2024-02-11 19:51:47.084 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-11 19:51:47.085 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/api/Auth - - - 200 25510 application/json;+charset=utf-8 437.1861ms
2024-02-11 19:51:55.200 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/api/Channel/Page/1?&sortOption=rating&ascending=False&language=&search=z - -
2024-02-11 19:51:55.205 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/api/Channel/Page/1?&sortOption=rating&ascending=False&language=&search=za - -
2024-02-11 19:51:55.206 +03:00 [INF] CORS policy execution successful.
2024-02-11 19:51:55.207 +03:00 [INF] CORS policy execution successful.
2024-02-11 19:51:55.207 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.ChannelController.GetChannels (TgCheckerApi)'
2024-02-11 19:51:55.208 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.ChannelController.GetChannels (TgCheckerApi)'
2024-02-11 19:51:55.208 +03:00 [INF] Route matched with {action = "GetChannels", controller = "Channel"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.GetModels.ChannelGetModel]]] GetChannels(Int32, System.String, System.String, System.String, System.String, System.String) on controller TgCheckerApi.Controllers.ChannelController (TgCheckerApi).
2024-02-11 19:51:55.210 +03:00 [INF] Route matched with {action = "GetChannels", controller = "Channel"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.GetModels.ChannelGetModel]]] GetChannels(Int32, System.String, System.String, System.String, System.String, System.String) on controller TgCheckerApi.Controllers.ChannelController (TgCheckerApi).
2024-02-11 19:51:55.245 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__search_0='?', @__ToLower_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Channel" AS c
WHERE (c."Hidden" <> TRUE OR c."Hidden" IS NULL) AND (@__search_0 = '' OR strpos(c.name, @__search_0) > 0 OR EXISTS (
    SELECT 1
    FROM "ChannelHasTag" AS c0
    LEFT JOIN "Tag" AS t ON c0.tag = t.id
    WHERE c.id = c0.channel AND (@__ToLower_1 = '' OR strpos(lower(t.text), @__ToLower_1) > 0)))
2024-02-11 19:51:55.265 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__search_0='?', @__ToLower_1='?', @__p_3='?' (DbType = Int32), @__p_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t0.id, t0.avatar, t0.bumps, t0.description, t0.flag, t0."Hidden", t0.language, t0.last_bump, t0.members, t0.name, t0.notification_sent, t0.notifications, t0.promo_post, t0.promo_post_interval, t0.promo_post_last, t0.promo_post_sent, t0.promo_post_time, t0.telegram_id, t0."Url", t0."user", c1.id, c1.channel, c1.tag
FROM (
    SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."Url", c."user", COALESCE(c.bumps, 0.0) AS c
    FROM "Channel" AS c
    WHERE (c."Hidden" <> TRUE OR c."Hidden" IS NULL) AND (@__search_0 = '' OR strpos(c.name, @__search_0) > 0 OR EXISTS (
        SELECT 1
        FROM "ChannelHasTag" AS c0
        LEFT JOIN "Tag" AS t ON c0.tag = t.id
        WHERE c.id = c0.channel AND (@__ToLower_1 = '' OR strpos(lower(t.text), @__ToLower_1) > 0)))
    ORDER BY COALESCE(c.bumps, 0.0) DESC
    LIMIT @__p_3 OFFSET @__p_2
) AS t0
LEFT JOIN "ChannelHasTag" AS c1 ON t0.id = c1.channel
ORDER BY t0.c DESC, t0.id
2024-02-11 19:51:55.270 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag, t.id, t.text
FROM "ChannelHasTag" AS c
LEFT JOIN "Tag" AS t ON c.tag = t.id
WHERE c.channel = @__channel_Id_0
2024-02-11 19:51:55.274 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-11 19:51:55.277 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag, t.id, t.text
FROM "ChannelHasTag" AS c
LEFT JOIN "Tag" AS t ON c.tag = t.id
WHERE c.channel = @__channel_Id_0
2024-02-11 19:51:55.280 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-11 19:51:55.283 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag, t.id, t.text
FROM "ChannelHasTag" AS c
LEFT JOIN "Tag" AS t ON c.tag = t.id
WHERE c.channel = @__channel_Id_0
2024-02-11 19:51:55.286 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-11 19:51:55.289 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.GetModels.ChannelGetModel, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-11 19:51:55.291 +03:00 [INF] Executed action TgCheckerApi.Controllers.ChannelController.GetChannels (TgCheckerApi) in 79.4001ms
2024-02-11 19:51:55.292 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.ChannelController.GetChannels (TgCheckerApi)'
2024-02-11 19:51:55.292 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__search_0='?', @__ToLower_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Channel" AS c
WHERE (c."Hidden" <> TRUE OR c."Hidden" IS NULL) AND (@__search_0 = '' OR strpos(c.name, @__search_0) > 0 OR EXISTS (
    SELECT 1
    FROM "ChannelHasTag" AS c0
    LEFT JOIN "Tag" AS t ON c0.tag = t.id
    WHERE c.id = c0.channel AND (@__ToLower_1 = '' OR strpos(lower(t.text), @__ToLower_1) > 0)))
2024-02-11 19:51:55.293 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/api/Channel/Page/1?&sortOption=rating&ascending=False&language=&search=z - - - 200 16415 application/json;+charset=utf-8 94.9093ms
2024-02-11 19:51:55.297 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__search_0='?', @__ToLower_1='?', @__p_3='?' (DbType = Int32), @__p_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t0.id, t0.avatar, t0.bumps, t0.description, t0.flag, t0."Hidden", t0.language, t0.last_bump, t0.members, t0.name, t0.notification_sent, t0.notifications, t0.promo_post, t0.promo_post_interval, t0.promo_post_last, t0.promo_post_sent, t0.promo_post_time, t0.telegram_id, t0."Url", t0."user", c1.id, c1.channel, c1.tag
FROM (
    SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."Url", c."user", COALESCE(c.bumps, 0.0) AS c
    FROM "Channel" AS c
    WHERE (c."Hidden" <> TRUE OR c."Hidden" IS NULL) AND (@__search_0 = '' OR strpos(c.name, @__search_0) > 0 OR EXISTS (
        SELECT 1
        FROM "ChannelHasTag" AS c0
        LEFT JOIN "Tag" AS t ON c0.tag = t.id
        WHERE c.id = c0.channel AND (@__ToLower_1 = '' OR strpos(lower(t.text), @__ToLower_1) > 0)))
    ORDER BY COALESCE(c.bumps, 0.0) DESC
    LIMIT @__p_3 OFFSET @__p_2
) AS t0
LEFT JOIN "ChannelHasTag" AS c1 ON t0.id = c1.channel
ORDER BY t0.c DESC, t0.id
2024-02-11 19:51:55.302 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag, t.id, t.text
FROM "ChannelHasTag" AS c
LEFT JOIN "Tag" AS t ON c.tag = t.id
WHERE c.channel = @__channel_Id_0
2024-02-11 19:51:55.306 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-11 19:51:55.308 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.GetModels.ChannelGetModel, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-11 19:51:55.309 +03:00 [INF] Executed action TgCheckerApi.Controllers.ChannelController.GetChannels (TgCheckerApi) in 95.9539ms
2024-02-11 19:51:55.310 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.ChannelController.GetChannels (TgCheckerApi)'
2024-02-11 19:51:55.311 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/api/Channel/Page/1?&sortOption=rating&ascending=False&language=&search=za - - - 200 15569 application/json;+charset=utf-8 105.4060ms
2024-02-11 19:51:55.946 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/api/Channel/Page/1?&sortOption=rating&ascending=False&language=&search=z - -
2024-02-11 19:51:55.947 +03:00 [INF] CORS policy execution successful.
2024-02-11 19:51:55.948 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.ChannelController.GetChannels (TgCheckerApi)'
2024-02-11 19:51:55.948 +03:00 [INF] Route matched with {action = "GetChannels", controller = "Channel"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.GetModels.ChannelGetModel]]] GetChannels(Int32, System.String, System.String, System.String, System.String, System.String) on controller TgCheckerApi.Controllers.ChannelController (TgCheckerApi).
2024-02-11 19:51:55.952 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__search_0='?', @__ToLower_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Channel" AS c
WHERE (c."Hidden" <> TRUE OR c."Hidden" IS NULL) AND (@__search_0 = '' OR strpos(c.name, @__search_0) > 0 OR EXISTS (
    SELECT 1
    FROM "ChannelHasTag" AS c0
    LEFT JOIN "Tag" AS t ON c0.tag = t.id
    WHERE c.id = c0.channel AND (@__ToLower_1 = '' OR strpos(lower(t.text), @__ToLower_1) > 0)))
2024-02-11 19:51:55.956 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__search_0='?', @__ToLower_1='?', @__p_3='?' (DbType = Int32), @__p_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t0.id, t0.avatar, t0.bumps, t0.description, t0.flag, t0."Hidden", t0.language, t0.last_bump, t0.members, t0.name, t0.notification_sent, t0.notifications, t0.promo_post, t0.promo_post_interval, t0.promo_post_last, t0.promo_post_sent, t0.promo_post_time, t0.telegram_id, t0."Url", t0."user", c1.id, c1.channel, c1.tag
FROM (
    SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."Url", c."user", COALESCE(c.bumps, 0.0) AS c
    FROM "Channel" AS c
    WHERE (c."Hidden" <> TRUE OR c."Hidden" IS NULL) AND (@__search_0 = '' OR strpos(c.name, @__search_0) > 0 OR EXISTS (
        SELECT 1
        FROM "ChannelHasTag" AS c0
        LEFT JOIN "Tag" AS t ON c0.tag = t.id
        WHERE c.id = c0.channel AND (@__ToLower_1 = '' OR strpos(lower(t.text), @__ToLower_1) > 0)))
    ORDER BY COALESCE(c.bumps, 0.0) DESC
    LIMIT @__p_3 OFFSET @__p_2
) AS t0
LEFT JOIN "ChannelHasTag" AS c1 ON t0.id = c1.channel
ORDER BY t0.c DESC, t0.id
2024-02-11 19:51:55.959 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag, t.id, t.text
FROM "ChannelHasTag" AS c
LEFT JOIN "Tag" AS t ON c.tag = t.id
WHERE c.channel = @__channel_Id_0
2024-02-11 19:51:55.963 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-11 19:51:55.965 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag, t.id, t.text
FROM "ChannelHasTag" AS c
LEFT JOIN "Tag" AS t ON c.tag = t.id
WHERE c.channel = @__channel_Id_0
2024-02-11 19:51:55.968 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-11 19:51:55.970 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag, t.id, t.text
FROM "ChannelHasTag" AS c
LEFT JOIN "Tag" AS t ON c.tag = t.id
WHERE c.channel = @__channel_Id_0
2024-02-11 19:51:55.973 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-11 19:51:55.975 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.GetModels.ChannelGetModel, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-11 19:51:55.977 +03:00 [INF] Executed action TgCheckerApi.Controllers.ChannelController.GetChannels (TgCheckerApi) in 26.8121ms
2024-02-11 19:51:55.978 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.ChannelController.GetChannels (TgCheckerApi)'
2024-02-11 19:51:55.979 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/api/Channel/Page/1?&sortOption=rating&ascending=False&language=&search=z - - - 200 16415 application/json;+charset=utf-8 32.9940ms
2024-02-11 19:51:56.073 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/api/Channel/Page/1?&sortOption=rating&ascending=False&language=&search=zx - -
2024-02-11 19:51:56.074 +03:00 [INF] CORS policy execution successful.
2024-02-11 19:51:56.074 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.ChannelController.GetChannels (TgCheckerApi)'
2024-02-11 19:51:56.075 +03:00 [INF] Route matched with {action = "GetChannels", controller = "Channel"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.GetModels.ChannelGetModel]]] GetChannels(Int32, System.String, System.String, System.String, System.String, System.String) on controller TgCheckerApi.Controllers.ChannelController (TgCheckerApi).
2024-02-11 19:51:56.079 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__search_0='?', @__ToLower_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Channel" AS c
WHERE (c."Hidden" <> TRUE OR c."Hidden" IS NULL) AND (@__search_0 = '' OR strpos(c.name, @__search_0) > 0 OR EXISTS (
    SELECT 1
    FROM "ChannelHasTag" AS c0
    LEFT JOIN "Tag" AS t ON c0.tag = t.id
    WHERE c.id = c0.channel AND (@__ToLower_1 = '' OR strpos(lower(t.text), @__ToLower_1) > 0)))
2024-02-11 19:51:56.083 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__search_0='?', @__ToLower_1='?', @__p_3='?' (DbType = Int32), @__p_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t0.id, t0.avatar, t0.bumps, t0.description, t0.flag, t0."Hidden", t0.language, t0.last_bump, t0.members, t0.name, t0.notification_sent, t0.notifications, t0.promo_post, t0.promo_post_interval, t0.promo_post_last, t0.promo_post_sent, t0.promo_post_time, t0.telegram_id, t0."Url", t0."user", c1.id, c1.channel, c1.tag
FROM (
    SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."Url", c."user", COALESCE(c.bumps, 0.0) AS c
    FROM "Channel" AS c
    WHERE (c."Hidden" <> TRUE OR c."Hidden" IS NULL) AND (@__search_0 = '' OR strpos(c.name, @__search_0) > 0 OR EXISTS (
        SELECT 1
        FROM "ChannelHasTag" AS c0
        LEFT JOIN "Tag" AS t ON c0.tag = t.id
        WHERE c.id = c0.channel AND (@__ToLower_1 = '' OR strpos(lower(t.text), @__ToLower_1) > 0)))
    ORDER BY COALESCE(c.bumps, 0.0) DESC
    LIMIT @__p_3 OFFSET @__p_2
) AS t0
LEFT JOIN "ChannelHasTag" AS c1 ON t0.id = c1.channel
ORDER BY t0.c DESC, t0.id
2024-02-11 19:51:56.087 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag, t.id, t.text
FROM "ChannelHasTag" AS c
LEFT JOIN "Tag" AS t ON c.tag = t.id
WHERE c.channel = @__channel_Id_0
2024-02-11 19:51:56.091 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-11 19:51:56.092 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.GetModels.ChannelGetModel, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-11 19:51:56.094 +03:00 [INF] Executed action TgCheckerApi.Controllers.ChannelController.GetChannels (TgCheckerApi) in 16.9499ms
2024-02-11 19:51:56.094 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.ChannelController.GetChannels (TgCheckerApi)'
2024-02-11 19:51:56.095 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/api/Channel/Page/1?&sortOption=rating&ascending=False&language=&search=zx - - - 200 415 application/json;+charset=utf-8 22.4572ms
2024-02-11 19:51:56.329 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/api/Channel/Page/1?&sortOption=rating&ascending=False&language=&search=zxz - -
2024-02-11 19:51:56.330 +03:00 [INF] CORS policy execution successful.
2024-02-11 19:51:56.331 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.ChannelController.GetChannels (TgCheckerApi)'
2024-02-11 19:51:56.332 +03:00 [INF] Route matched with {action = "GetChannels", controller = "Channel"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.GetModels.ChannelGetModel]]] GetChannels(Int32, System.String, System.String, System.String, System.String, System.String) on controller TgCheckerApi.Controllers.ChannelController (TgCheckerApi).
2024-02-11 19:51:56.336 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__search_0='?', @__ToLower_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Channel" AS c
WHERE (c."Hidden" <> TRUE OR c."Hidden" IS NULL) AND (@__search_0 = '' OR strpos(c.name, @__search_0) > 0 OR EXISTS (
    SELECT 1
    FROM "ChannelHasTag" AS c0
    LEFT JOIN "Tag" AS t ON c0.tag = t.id
    WHERE c.id = c0.channel AND (@__ToLower_1 = '' OR strpos(lower(t.text), @__ToLower_1) > 0)))
2024-02-11 19:51:56.340 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__search_0='?', @__ToLower_1='?', @__p_3='?' (DbType = Int32), @__p_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t0.id, t0.avatar, t0.bumps, t0.description, t0.flag, t0."Hidden", t0.language, t0.last_bump, t0.members, t0.name, t0.notification_sent, t0.notifications, t0.promo_post, t0.promo_post_interval, t0.promo_post_last, t0.promo_post_sent, t0.promo_post_time, t0.telegram_id, t0."Url", t0."user", c1.id, c1.channel, c1.tag
FROM (
    SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."Url", c."user", COALESCE(c.bumps, 0.0) AS c
    FROM "Channel" AS c
    WHERE (c."Hidden" <> TRUE OR c."Hidden" IS NULL) AND (@__search_0 = '' OR strpos(c.name, @__search_0) > 0 OR EXISTS (
        SELECT 1
        FROM "ChannelHasTag" AS c0
        LEFT JOIN "Tag" AS t ON c0.tag = t.id
        WHERE c.id = c0.channel AND (@__ToLower_1 = '' OR strpos(lower(t.text), @__ToLower_1) > 0)))
    ORDER BY COALESCE(c.bumps, 0.0) DESC
    LIMIT @__p_3 OFFSET @__p_2
) AS t0
LEFT JOIN "ChannelHasTag" AS c1 ON t0.id = c1.channel
ORDER BY t0.c DESC, t0.id
2024-02-11 19:51:56.344 +03:00 [INF] Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
2024-02-11 19:51:56.355 +03:00 [INF] Executed action TgCheckerApi.Controllers.ChannelController.GetChannels (TgCheckerApi) in 22.0278ms
2024-02-11 19:51:56.357 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.ChannelController.GetChannels (TgCheckerApi)'
2024-02-11 19:51:56.357 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/api/Channel/Page/1?&sortOption=rating&ascending=False&language=&search=zxz - - - 404 161 application/problem+json;+charset=utf-8 28.3905ms
2024-02-11 19:51:56.810 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/api/Channel/Page/1?&sortOption=rating&ascending=False&language=&search=zx - -
2024-02-11 19:51:56.812 +03:00 [INF] CORS policy execution successful.
2024-02-11 19:51:56.812 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.ChannelController.GetChannels (TgCheckerApi)'
2024-02-11 19:51:56.813 +03:00 [INF] Route matched with {action = "GetChannels", controller = "Channel"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.GetModels.ChannelGetModel]]] GetChannels(Int32, System.String, System.String, System.String, System.String, System.String) on controller TgCheckerApi.Controllers.ChannelController (TgCheckerApi).
2024-02-11 19:51:56.817 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__search_0='?', @__ToLower_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Channel" AS c
WHERE (c."Hidden" <> TRUE OR c."Hidden" IS NULL) AND (@__search_0 = '' OR strpos(c.name, @__search_0) > 0 OR EXISTS (
    SELECT 1
    FROM "ChannelHasTag" AS c0
    LEFT JOIN "Tag" AS t ON c0.tag = t.id
    WHERE c.id = c0.channel AND (@__ToLower_1 = '' OR strpos(lower(t.text), @__ToLower_1) > 0)))
2024-02-11 19:51:56.821 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__search_0='?', @__ToLower_1='?', @__p_3='?' (DbType = Int32), @__p_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t0.id, t0.avatar, t0.bumps, t0.description, t0.flag, t0."Hidden", t0.language, t0.last_bump, t0.members, t0.name, t0.notification_sent, t0.notifications, t0.promo_post, t0.promo_post_interval, t0.promo_post_last, t0.promo_post_sent, t0.promo_post_time, t0.telegram_id, t0."Url", t0."user", c1.id, c1.channel, c1.tag
FROM (
    SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."Url", c."user", COALESCE(c.bumps, 0.0) AS c
    FROM "Channel" AS c
    WHERE (c."Hidden" <> TRUE OR c."Hidden" IS NULL) AND (@__search_0 = '' OR strpos(c.name, @__search_0) > 0 OR EXISTS (
        SELECT 1
        FROM "ChannelHasTag" AS c0
        LEFT JOIN "Tag" AS t ON c0.tag = t.id
        WHERE c.id = c0.channel AND (@__ToLower_1 = '' OR strpos(lower(t.text), @__ToLower_1) > 0)))
    ORDER BY COALESCE(c.bumps, 0.0) DESC
    LIMIT @__p_3 OFFSET @__p_2
) AS t0
LEFT JOIN "ChannelHasTag" AS c1 ON t0.id = c1.channel
ORDER BY t0.c DESC, t0.id
2024-02-11 19:51:56.824 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag, t.id, t.text
FROM "ChannelHasTag" AS c
LEFT JOIN "Tag" AS t ON c.tag = t.id
WHERE c.channel = @__channel_Id_0
2024-02-11 19:51:56.826 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-11 19:51:56.828 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.GetModels.ChannelGetModel, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-11 19:51:56.829 +03:00 [INF] Executed action TgCheckerApi.Controllers.ChannelController.GetChannels (TgCheckerApi) in 14.1185ms
2024-02-11 19:51:56.830 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.ChannelController.GetChannels (TgCheckerApi)'
2024-02-11 19:51:56.831 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/api/Channel/Page/1?&sortOption=rating&ascending=False&language=&search=zx - - - 200 415 application/json;+charset=utf-8 20.6399ms
2024-02-11 19:51:56.867 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/api/Channel/Page/1?&sortOption=rating&ascending=False&language=&search=zxc - -
2024-02-11 19:51:56.873 +03:00 [INF] CORS policy execution successful.
2024-02-11 19:51:56.874 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.ChannelController.GetChannels (TgCheckerApi)'
2024-02-11 19:51:56.875 +03:00 [INF] Route matched with {action = "GetChannels", controller = "Channel"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.GetModels.ChannelGetModel]]] GetChannels(Int32, System.String, System.String, System.String, System.String, System.String) on controller TgCheckerApi.Controllers.ChannelController (TgCheckerApi).
2024-02-11 19:51:56.879 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__search_0='?', @__ToLower_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Channel" AS c
WHERE (c."Hidden" <> TRUE OR c."Hidden" IS NULL) AND (@__search_0 = '' OR strpos(c.name, @__search_0) > 0 OR EXISTS (
    SELECT 1
    FROM "ChannelHasTag" AS c0
    LEFT JOIN "Tag" AS t ON c0.tag = t.id
    WHERE c.id = c0.channel AND (@__ToLower_1 = '' OR strpos(lower(t.text), @__ToLower_1) > 0)))
2024-02-11 19:51:56.883 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__search_0='?', @__ToLower_1='?', @__p_3='?' (DbType = Int32), @__p_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t0.id, t0.avatar, t0.bumps, t0.description, t0.flag, t0."Hidden", t0.language, t0.last_bump, t0.members, t0.name, t0.notification_sent, t0.notifications, t0.promo_post, t0.promo_post_interval, t0.promo_post_last, t0.promo_post_sent, t0.promo_post_time, t0.telegram_id, t0."Url", t0."user", c1.id, c1.channel, c1.tag
FROM (
    SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."Url", c."user", COALESCE(c.bumps, 0.0) AS c
    FROM "Channel" AS c
    WHERE (c."Hidden" <> TRUE OR c."Hidden" IS NULL) AND (@__search_0 = '' OR strpos(c.name, @__search_0) > 0 OR EXISTS (
        SELECT 1
        FROM "ChannelHasTag" AS c0
        LEFT JOIN "Tag" AS t ON c0.tag = t.id
        WHERE c.id = c0.channel AND (@__ToLower_1 = '' OR strpos(lower(t.text), @__ToLower_1) > 0)))
    ORDER BY COALESCE(c.bumps, 0.0) DESC
    LIMIT @__p_3 OFFSET @__p_2
) AS t0
LEFT JOIN "ChannelHasTag" AS c1 ON t0.id = c1.channel
ORDER BY t0.c DESC, t0.id
2024-02-11 19:51:56.886 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag, t.id, t.text
FROM "ChannelHasTag" AS c
LEFT JOIN "Tag" AS t ON c.tag = t.id
WHERE c.channel = @__channel_Id_0
2024-02-11 19:51:56.888 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-11 19:51:56.889 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.GetModels.ChannelGetModel, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-11 19:51:56.890 +03:00 [INF] Executed action TgCheckerApi.Controllers.ChannelController.GetChannels (TgCheckerApi) in 13.504ms
2024-02-11 19:51:56.892 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.ChannelController.GetChannels (TgCheckerApi)'
2024-02-11 19:51:56.892 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/api/Channel/Page/1?&sortOption=rating&ascending=False&language=&search=zxc - - - 200 415 application/json;+charset=utf-8 25.2563ms
2024-02-11 19:51:57.621 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/api/Channel/Page/1?&sortOption=rating&ascending=False&language=&search=zx - -
2024-02-11 19:51:57.622 +03:00 [INF] CORS policy execution successful.
2024-02-11 19:51:57.623 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.ChannelController.GetChannels (TgCheckerApi)'
2024-02-11 19:51:57.624 +03:00 [INF] Route matched with {action = "GetChannels", controller = "Channel"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.GetModels.ChannelGetModel]]] GetChannels(Int32, System.String, System.String, System.String, System.String, System.String) on controller TgCheckerApi.Controllers.ChannelController (TgCheckerApi).
2024-02-11 19:51:57.627 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__search_0='?', @__ToLower_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Channel" AS c
WHERE (c."Hidden" <> TRUE OR c."Hidden" IS NULL) AND (@__search_0 = '' OR strpos(c.name, @__search_0) > 0 OR EXISTS (
    SELECT 1
    FROM "ChannelHasTag" AS c0
    LEFT JOIN "Tag" AS t ON c0.tag = t.id
    WHERE c.id = c0.channel AND (@__ToLower_1 = '' OR strpos(lower(t.text), @__ToLower_1) > 0)))
2024-02-11 19:51:57.631 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__search_0='?', @__ToLower_1='?', @__p_3='?' (DbType = Int32), @__p_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t0.id, t0.avatar, t0.bumps, t0.description, t0.flag, t0."Hidden", t0.language, t0.last_bump, t0.members, t0.name, t0.notification_sent, t0.notifications, t0.promo_post, t0.promo_post_interval, t0.promo_post_last, t0.promo_post_sent, t0.promo_post_time, t0.telegram_id, t0."Url", t0."user", c1.id, c1.channel, c1.tag
FROM (
    SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."Url", c."user", COALESCE(c.bumps, 0.0) AS c
    FROM "Channel" AS c
    WHERE (c."Hidden" <> TRUE OR c."Hidden" IS NULL) AND (@__search_0 = '' OR strpos(c.name, @__search_0) > 0 OR EXISTS (
        SELECT 1
        FROM "ChannelHasTag" AS c0
        LEFT JOIN "Tag" AS t ON c0.tag = t.id
        WHERE c.id = c0.channel AND (@__ToLower_1 = '' OR strpos(lower(t.text), @__ToLower_1) > 0)))
    ORDER BY COALESCE(c.bumps, 0.0) DESC
    LIMIT @__p_3 OFFSET @__p_2
) AS t0
LEFT JOIN "ChannelHasTag" AS c1 ON t0.id = c1.channel
ORDER BY t0.c DESC, t0.id
2024-02-11 19:51:57.635 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag, t.id, t.text
FROM "ChannelHasTag" AS c
LEFT JOIN "Tag" AS t ON c.tag = t.id
WHERE c.channel = @__channel_Id_0
2024-02-11 19:51:57.637 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-11 19:51:57.639 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.GetModels.ChannelGetModel, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-11 19:51:57.640 +03:00 [INF] Executed action TgCheckerApi.Controllers.ChannelController.GetChannels (TgCheckerApi) in 15.2641ms
2024-02-11 19:51:57.641 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.ChannelController.GetChannels (TgCheckerApi)'
2024-02-11 19:51:57.641 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/api/Channel/Page/1?&sortOption=rating&ascending=False&language=&search=zx - - - 200 415 application/json;+charset=utf-8 20.0813ms
2024-02-11 19:51:57.740 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/api/Channel/Page/1?&sortOption=rating&ascending=False&language=&search=z - -
2024-02-11 19:51:57.741 +03:00 [INF] CORS policy execution successful.
2024-02-11 19:51:57.741 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.ChannelController.GetChannels (TgCheckerApi)'
2024-02-11 19:51:57.742 +03:00 [INF] Route matched with {action = "GetChannels", controller = "Channel"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.GetModels.ChannelGetModel]]] GetChannels(Int32, System.String, System.String, System.String, System.String, System.String) on controller TgCheckerApi.Controllers.ChannelController (TgCheckerApi).
2024-02-11 19:51:57.746 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__search_0='?', @__ToLower_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Channel" AS c
WHERE (c."Hidden" <> TRUE OR c."Hidden" IS NULL) AND (@__search_0 = '' OR strpos(c.name, @__search_0) > 0 OR EXISTS (
    SELECT 1
    FROM "ChannelHasTag" AS c0
    LEFT JOIN "Tag" AS t ON c0.tag = t.id
    WHERE c.id = c0.channel AND (@__ToLower_1 = '' OR strpos(lower(t.text), @__ToLower_1) > 0)))
2024-02-11 19:51:57.749 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__search_0='?', @__ToLower_1='?', @__p_3='?' (DbType = Int32), @__p_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t0.id, t0.avatar, t0.bumps, t0.description, t0.flag, t0."Hidden", t0.language, t0.last_bump, t0.members, t0.name, t0.notification_sent, t0.notifications, t0.promo_post, t0.promo_post_interval, t0.promo_post_last, t0.promo_post_sent, t0.promo_post_time, t0.telegram_id, t0."Url", t0."user", c1.id, c1.channel, c1.tag
FROM (
    SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."Url", c."user", COALESCE(c.bumps, 0.0) AS c
    FROM "Channel" AS c
    WHERE (c."Hidden" <> TRUE OR c."Hidden" IS NULL) AND (@__search_0 = '' OR strpos(c.name, @__search_0) > 0 OR EXISTS (
        SELECT 1
        FROM "ChannelHasTag" AS c0
        LEFT JOIN "Tag" AS t ON c0.tag = t.id
        WHERE c.id = c0.channel AND (@__ToLower_1 = '' OR strpos(lower(t.text), @__ToLower_1) > 0)))
    ORDER BY COALESCE(c.bumps, 0.0) DESC
    LIMIT @__p_3 OFFSET @__p_2
) AS t0
LEFT JOIN "ChannelHasTag" AS c1 ON t0.id = c1.channel
ORDER BY t0.c DESC, t0.id
2024-02-11 19:51:57.752 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag, t.id, t.text
FROM "ChannelHasTag" AS c
LEFT JOIN "Tag" AS t ON c.tag = t.id
WHERE c.channel = @__channel_Id_0
2024-02-11 19:51:57.754 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-11 19:51:57.757 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag, t.id, t.text
FROM "ChannelHasTag" AS c
LEFT JOIN "Tag" AS t ON c.tag = t.id
WHERE c.channel = @__channel_Id_0
2024-02-11 19:51:57.760 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-11 19:51:57.762 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag, t.id, t.text
FROM "ChannelHasTag" AS c
LEFT JOIN "Tag" AS t ON c.tag = t.id
WHERE c.channel = @__channel_Id_0
2024-02-11 19:51:57.764 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-11 19:51:57.766 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.GetModels.ChannelGetModel, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-11 19:51:57.767 +03:00 [INF] Executed action TgCheckerApi.Controllers.ChannelController.GetChannels (TgCheckerApi) in 23.6225ms
2024-02-11 19:51:57.767 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.ChannelController.GetChannels (TgCheckerApi)'
2024-02-11 19:51:57.768 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/api/Channel/Page/1?&sortOption=rating&ascending=False&language=&search=z - - - 200 16415 application/json;+charset=utf-8 28.5986ms
2024-02-11 19:51:57.815 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/api/Channel/Page/1?&sortOption=rating&ascending=False&language= - -
2024-02-11 19:51:57.817 +03:00 [INF] CORS policy execution successful.
2024-02-11 19:51:57.817 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.ChannelController.GetChannels (TgCheckerApi)'
2024-02-11 19:51:57.818 +03:00 [INF] Route matched with {action = "GetChannels", controller = "Channel"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.GetModels.ChannelGetModel]]] GetChannels(Int32, System.String, System.String, System.String, System.String, System.String) on controller TgCheckerApi.Controllers.ChannelController (TgCheckerApi).
2024-02-11 19:51:57.821 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Channel" AS c
WHERE c."Hidden" <> TRUE OR c."Hidden" IS NULL
2024-02-11 19:51:57.825 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."Url", c."user"
FROM "Channel" AS c
WHERE c."Hidden" <> TRUE OR c."Hidden" IS NULL
ORDER BY COALESCE(c.bumps, 0.0) DESC
LIMIT @__p_1 OFFSET @__p_0
2024-02-11 19:51:57.827 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag, t.id, t.text
FROM "ChannelHasTag" AS c
LEFT JOIN "Tag" AS t ON c.tag = t.id
WHERE c.channel = @__channel_Id_0
2024-02-11 19:51:57.830 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-11 19:51:57.833 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag, t.id, t.text
FROM "ChannelHasTag" AS c
LEFT JOIN "Tag" AS t ON c.tag = t.id
WHERE c.channel = @__channel_Id_0
2024-02-11 19:51:57.835 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-11 19:51:57.838 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag, t.id, t.text
FROM "ChannelHasTag" AS c
LEFT JOIN "Tag" AS t ON c.tag = t.id
WHERE c.channel = @__channel_Id_0
2024-02-11 19:51:57.841 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-11 19:51:57.842 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.GetModels.ChannelGetModel, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-11 19:51:57.843 +03:00 [INF] Executed action TgCheckerApi.Controllers.ChannelController.GetChannels (TgCheckerApi) in 23.8417ms
2024-02-11 19:51:57.844 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.ChannelController.GetChannels (TgCheckerApi)'
2024-02-11 19:51:57.845 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/api/Channel/Page/1?&sortOption=rating&ascending=False&language= - - - 200 16415 application/json;+charset=utf-8 29.4247ms
2024-02-11 19:52:16.885 +03:00 [WRN] New task timed out. Hash: 5ec5950f142bca89e2aa6cb4127bdea9391929bfdb585a0fda8bc0406276e946
2024-02-11 19:52:16.886 +03:00 [WRN] Response is not in expected 'OkObjectResult' format or does not contain a string value.
2024-02-11 19:52:16.910 +03:00 [ERR] Invalid operation when updating user profile.
System.InvalidOperationException: Invalid response format.
   at TgCheckerApi.Services.WebSocketService.ResponseToObject[T](IActionResult response) in C:\Users\79103\Source\Repos\goldman2g5\TgCheckerApiPOLAMPUS\TgCheckerApi\Services\WebSocketService.cs:line 75
   at TgCheckerApi.Controllers.AuthController.UpdateUserProfileIfNeeded(User user) in C:\Users\79103\Source\Repos\goldman2g5\TgCheckerApiPOLAMPUS\TgCheckerApi\Controllers\AuthController.cs:line 146
2024-02-11 19:52:20.007 +03:00 [ERR] Error occurred executing UpdateSubscribersJob via HTTP request.
System.Threading.Tasks.TaskCanceledException: The request was canceled due to the configured HttpClient.Timeout of 100 seconds elapsing.
 ---> System.TimeoutException: The operation was canceled.
 ---> System.Threading.Tasks.TaskCanceledException: The operation was canceled.
 ---> System.IO.IOException: Unable to read data from the transport connection: The I/O operation has been aborted because of either a thread exit or an application request..
 ---> System.Net.Sockets.SocketException (995): The I/O operation has been aborted because of either a thread exit or an application request.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Security.SslStream.EnsureFullTlsFrameAsync[TIOAdapter](TIOAdapter adapter)
   at System.Net.Security.SslStream.ReadAsyncInternal[TIOAdapter](TIOAdapter adapter, Memory`1 buffer)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsyncCore(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsyncCore(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   --- End of inner exception stack trace ---
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpClient.HandleFailure(Exception e, Boolean telemetryStarted, HttpResponseMessage response, CancellationTokenSource cts, CancellationToken cancellationToken, CancellationTokenSource pendingRequestsCts)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at TgCheckerApi.Job.UpdateSubscribersJob.Execute(IJobExecutionContext context) in C:\Users\79103\Source\Repos\goldman2g5\TgCheckerApiPOLAMPUS\TgCheckerApi\Job\UpdateSubscribersJob.cs:line 49
2024-02-11 19:53:23.857 +03:00 [INF] User profile is available. Using 'C:\Users\79103\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-11 19:53:24.058 +03:00 [INF] Default Quartz.NET properties loaded from embedded resource file
2024-02-11 19:53:24.109 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-02-11 19:53:24.110 +03:00 [INF] Quartz Scheduler created
2024-02-11 19:53:24.115 +03:00 [INF] RAMJobStore initialized.
2024-02-11 19:53:24.116 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-02-11 19:53:24.116 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-02-11 19:53:24.117 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-02-11 19:53:24.118 +03:00 [INF] JobFactory set to: TgCheckerApi.Job.QuartzJobFactory
2024-02-11 19:53:24.165 +03:00 [INF] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2024-02-11 19:53:24.305 +03:00 [INF] Now listening on: https://localhost:7256
2024-02-11 19:53:24.308 +03:00 [INF] Now listening on: https://localhost:5244
2024-02-11 19:53:24.312 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-11 19:53:24.313 +03:00 [INF] Hosting environment: Development
2024-02-11 19:53:24.313 +03:00 [INF] Content root path: C:\Users\79103\Source\Repos\goldman2g5\TgCheckerApiPOLAMPUS\TgCheckerApi\
2024-02-11 19:53:25.081 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/swagger/index.html - -
2024-02-11 19:53:25.412 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/swagger/index.html - - - 200 - text/html;charset=utf-8 336.3062ms
2024-02-11 19:53:25.458 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/_framework/aspnetcore-browser-refresh.js - -
2024-02-11 19:53:25.463 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/_framework/aspnetcore-browser-refresh.js - - - 200 12356 application/javascript;+charset=utf-8 5.7266ms
2024-02-11 19:53:25.468 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/_vs/browserLink - -
2024-02-11 19:53:25.484 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 15.3635ms
2024-02-11 19:53:25.535 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/swagger/v1/swagger.json - -
2024-02-11 19:53:25.709 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 173.7272ms
2024-02-11 19:53:34.350 +03:00 [INF] Start processing HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-11 19:53:34.357 +03:00 [INF] Sending HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-11 19:53:36.124 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7256/api/Channel/Bump/80 - 0
2024-02-11 19:53:36.131 +03:00 [INF] CORS policy execution successful.
2024-02-11 19:53:36.214 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.ChannelController.BumpChannel (TgCheckerApi)'
2024-02-11 19:53:36.243 +03:00 [INF] Route matched with {action = "BumpChannel", controller = "Channel"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] BumpChannel(Int32) on controller TgCheckerApi.Controllers.ChannelController (TgCheckerApi).
2024-02-11 19:53:38.521 +03:00 [INF] Executed DbCommand (66ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."Url", c."user"
FROM "Channel" AS c
WHERE c.id = @__p_0
LIMIT 1
2024-02-11 19:53:38.673 +03:00 [INF] Executing BadRequestObjectResult, writing value of type 'System.String'.
2024-02-11 19:53:38.682 +03:00 [INF] Executed action TgCheckerApi.Controllers.ChannelController.BumpChannel (TgCheckerApi) in 2432.4877ms
2024-02-11 19:53:38.685 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.ChannelController.BumpChannel (TgCheckerApi)'
2024-02-11 19:53:38.710 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7256/api/Channel/Bump/80 - 0 - 400 - text/plain;+charset=utf-8 2586.0279ms
2024-02-11 19:53:54.356 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7256/api/Channel/Bump/80 - 0
2024-02-11 19:53:54.358 +03:00 [INF] CORS policy execution successful.
2024-02-11 19:53:54.364 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.ChannelController.BumpChannel (TgCheckerApi)'
2024-02-11 19:53:54.365 +03:00 [INF] Route matched with {action = "BumpChannel", controller = "Channel"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] BumpChannel(Int32) on controller TgCheckerApi.Controllers.ChannelController (TgCheckerApi).
2024-02-11 19:53:54.385 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."Url", c."user"
FROM "Channel" AS c
WHERE c.id = @__p_0
LIMIT 1
2024-02-11 19:53:54.549 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__channelId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.multiplier
FROM "ChannelHasSubscription" AS c
LEFT JOIN "SubType" AS s ON c.type_id = s.id
WHERE c.channel_id = @__channelId_0
ORDER BY c.type_id DESC
LIMIT 1
2024-02-11 19:53:54.700 +03:00 [INF] Executed DbCommand (18ms) [Parameters=[@p2='?' (DbType = Int32), @p0='?' (DbType = Decimal), @p1='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Channel" SET bumps = @p0, last_bump = @p1
WHERE id = @p2;
2024-02-11 19:53:54.732 +03:00 [INF] Executing StatusCodeResult, setting HTTP status code 204
2024-02-11 19:53:54.733 +03:00 [INF] Executed action TgCheckerApi.Controllers.ChannelController.BumpChannel (TgCheckerApi) in 366.5238ms
2024-02-11 19:53:54.734 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.ChannelController.BumpChannel (TgCheckerApi)'
2024-02-11 19:53:54.735 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7256/api/Channel/Bump/80 - 0 - 204 - - 378.9763ms
