2024-02-04 17:04:50.668 +03:00 [INF] User profile is available. Using 'C:\Users\timar\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-04 17:04:51.038 +03:00 [INF] Default Quartz.NET properties loaded from embedded resource file
2024-02-04 17:04:51.814 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-02-04 17:04:51.815 +03:00 [INF] Quartz Scheduler created
2024-02-04 17:04:51.906 +03:00 [INF] RAMJobStore initialized.
2024-02-04 17:04:51.908 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-02-04 17:04:51.910 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-02-04 17:04:51.911 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-02-04 17:04:51.913 +03:00 [INF] JobFactory set to: TgCheckerApi.Job.QuartzJobFactory
2024-02-04 17:04:51.992 +03:00 [INF] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2024-02-04 17:04:52.648 +03:00 [INF] Now listening on: https://localhost:7256
2024-02-04 17:04:52.648 +03:00 [INF] Now listening on: https://localhost:5244
2024-02-04 17:04:52.654 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-04 17:04:52.656 +03:00 [INF] Hosting environment: Development
2024-02-04 17:04:52.657 +03:00 [INF] Content root path: C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\
2024-02-04 17:05:00.765 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/swagger/index.html - -
2024-02-04 17:05:01.671 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/swagger/index.html - - - 200 - text/html;charset=utf-8 909.8183ms
2024-02-04 17:05:02.280 +03:00 [INF] Start processing HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-04 17:05:02.290 +03:00 [INF] Sending HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-04 17:05:02.355 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/_vs/browserLink - -
2024-02-04 17:05:02.355 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/_framework/aspnetcore-browser-refresh.js - -
2024-02-04 17:05:02.368 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/_framework/aspnetcore-browser-refresh.js - - - 200 12356 application/javascript;+charset=utf-8 12.3432ms
2024-02-04 17:05:02.418 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 62.7562ms
2024-02-04 17:05:02.501 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/swagger/v1/swagger.json - -
2024-02-04 17:05:02.741 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 239.9421ms
2024-02-04 17:05:02.939 +03:00 [INF] Received HTTP response headers after 642.3161ms - 200
2024-02-04 17:05:02.943 +03:00 [INF] End processing HTTP request after 674.4154ms - 200
2024-02-04 17:05:02.949 +03:00 [INF] Successfully processed all channels via HTTP request at: {DateTime.UtcNow}
2024-02-04 17:07:49.186 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/api/Channel/Page/1?&sortOption=members&ascending=False&language= - -
2024-02-04 17:07:49.204 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:07:49.353 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.ChannelController.GetChannels (TgCheckerApi)'
2024-02-04 17:07:49.409 +03:00 [INF] Route matched with {action = "GetChannels", controller = "Channel"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.GetModels.ChannelGetModel]]] GetChannels(Int32, System.String, System.String, System.String, System.String, System.String) on controller TgCheckerApi.Controllers.ChannelController (TgCheckerApi).
2024-02-04 17:07:49.460 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7256/api/Notification/UserNotifications - -
2024-02-04 17:07:49.462 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:07:49.465 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7256/api/Notification/UserNotifications - - - 204 - - 4.7191ms
2024-02-04 17:07:49.468 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/api/Notification/UserNotifications - -
2024-02-04 17:07:49.471 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:07:49.614 +03:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2/1/2024 4:45:43 PM', Current time (UTC): '2/4/2024 2:07:49 PM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2024-02-04 17:07:49.709 +03:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2/1/2024 4:45:43 PM', Current time (UTC): '2/4/2024 2:07:49 PM'.
2024-02-04 17:07:49.710 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetUserNotifications (TgCheckerApi)'
2024-02-04 17:07:49.715 +03:00 [INF] Route matched with {action = "GetUserNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetUserNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-04 17:07:49.978 +03:00 [INF] Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
2024-02-04 17:07:50.054 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetUserNotifications (TgCheckerApi) in 331.75ms
2024-02-04 17:07:50.057 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetUserNotifications (TgCheckerApi)'
2024-02-04 17:07:50.063 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/api/Notification/UserNotifications - - - 401 162 application/problem+json;+charset=utf-8 595.3023ms
2024-02-04 17:07:53.726 +03:00 [INF] Executed DbCommand (95ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Channel" AS c
WHERE c."Hidden" <> TRUE OR c."Hidden" IS NULL
2024-02-04 17:07:54.173 +03:00 [INF] Executed DbCommand (26ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."Url", c."user"
FROM "Channel" AS c
WHERE c."Hidden" <> TRUE OR c."Hidden" IS NULL
ORDER BY c.members DESC
LIMIT @__p_1 OFFSET @__p_0
2024-02-04 17:07:54.724 +03:00 [INF] Executed DbCommand (117ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-04 17:07:54.879 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:07:54.890 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-04 17:07:54.900 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:07:54.904 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-04 17:07:54.908 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:07:54.913 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-04 17:07:54.920 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:07:54.935 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-04 17:07:54.943 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:07:54.947 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-04 17:07:54.951 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:07:54.955 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-04 17:07:54.963 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:07:54.966 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-04 17:07:54.971 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:07:54.985 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.GetModels.ChannelGetModel, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-04 17:07:55.011 +03:00 [INF] Executed action TgCheckerApi.Controllers.ChannelController.GetChannels (TgCheckerApi) in 5598.854ms
2024-02-04 17:07:55.014 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.ChannelController.GetChannels (TgCheckerApi)'
2024-02-04 17:07:55.039 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/api/Channel/Page/1?&sortOption=members&ascending=False&language= - - - 200 18441 application/json;+charset=utf-8 5852.9874ms
2024-02-04 17:07:55.240 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/api/Channel/Page/1?&sortOption=members&ascending=False&language= - -
2024-02-04 17:07:55.241 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:07:55.248 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.ChannelController.GetChannels (TgCheckerApi)'
2024-02-04 17:07:55.251 +03:00 [INF] Route matched with {action = "GetChannels", controller = "Channel"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.GetModels.ChannelGetModel]]] GetChannels(Int32, System.String, System.String, System.String, System.String, System.String) on controller TgCheckerApi.Controllers.ChannelController (TgCheckerApi).
2024-02-04 17:07:55.307 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Channel" AS c
WHERE c."Hidden" <> TRUE OR c."Hidden" IS NULL
2024-02-04 17:07:55.312 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."Url", c."user"
FROM "Channel" AS c
WHERE c."Hidden" <> TRUE OR c."Hidden" IS NULL
ORDER BY c.members DESC
LIMIT @__p_1 OFFSET @__p_0
2024-02-04 17:07:55.319 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-04 17:07:55.325 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:07:55.328 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-04 17:07:55.331 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:07:55.335 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-04 17:07:55.338 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:07:55.341 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-04 17:07:55.345 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:07:55.348 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-04 17:07:55.352 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:07:55.355 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-04 17:07:55.358 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:07:55.362 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-04 17:07:55.366 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:07:55.369 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-04 17:07:55.372 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:07:55.374 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.GetModels.ChannelGetModel, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-04 17:07:55.376 +03:00 [INF] Executed action TgCheckerApi.Controllers.ChannelController.GetChannels (TgCheckerApi) in 78.1142ms
2024-02-04 17:07:55.377 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.ChannelController.GetChannels (TgCheckerApi)'
2024-02-04 17:07:55.379 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/api/Channel/Page/1?&sortOption=members&ascending=False&language= - - - 200 18441 application/json;+charset=utf-8 138.9043ms
2024-02-04 17:07:55.390 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/api/Channel/Page/1?&sortOption=members&ascending=False&language= - -
2024-02-04 17:07:55.391 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:07:55.392 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.ChannelController.GetChannels (TgCheckerApi)'
2024-02-04 17:07:55.393 +03:00 [INF] Route matched with {action = "GetChannels", controller = "Channel"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.GetModels.ChannelGetModel]]] GetChannels(Int32, System.String, System.String, System.String, System.String, System.String) on controller TgCheckerApi.Controllers.ChannelController (TgCheckerApi).
2024-02-04 17:07:55.457 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Channel" AS c
WHERE c."Hidden" <> TRUE OR c."Hidden" IS NULL
2024-02-04 17:07:55.464 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."Url", c."user"
FROM "Channel" AS c
WHERE c."Hidden" <> TRUE OR c."Hidden" IS NULL
ORDER BY c.members DESC
LIMIT @__p_1 OFFSET @__p_0
2024-02-04 17:07:55.468 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-04 17:07:55.471 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:07:55.477 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-04 17:07:55.481 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:07:55.485 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-04 17:07:55.491 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:07:55.495 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-04 17:07:55.499 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:07:55.504 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-04 17:07:55.508 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:07:55.512 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-04 17:07:55.516 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:07:55.519 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-04 17:07:55.526 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:07:55.531 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-04 17:07:55.535 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:07:55.540 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.GetModels.ChannelGetModel, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-04 17:07:55.543 +03:00 [INF] Executed action TgCheckerApi.Controllers.ChannelController.GetChannels (TgCheckerApi) in 146.6257ms
2024-02-04 17:07:55.545 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.ChannelController.GetChannels (TgCheckerApi)'
2024-02-04 17:07:55.547 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/api/Channel/Page/1?&sortOption=members&ascending=False&language= - - - 200 18441 application/json;+charset=utf-8 157.8136ms
2024-02-04 17:07:55.570 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7256/api/Tags - -
2024-02-04 17:07:55.571 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:07:55.573 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.TagsController.GetTags (TgCheckerApi)'
2024-02-04 17:07:55.578 +03:00 [INF] Route matched with {action = "GetTags", controller = "Tags"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.String]] GetTags() on controller TgCheckerApi.Controllers.TagsController (TgCheckerApi).
2024-02-04 17:07:55.615 +03:00 [INF] Executed DbCommand (19ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT t.text
FROM "Tag" AS t
2024-02-04 17:07:55.618 +03:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2024-02-04 17:07:55.619 +03:00 [INF] Executed action TgCheckerApi.Controllers.TagsController.GetTags (TgCheckerApi) in 38.3825ms
2024-02-04 17:07:55.621 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.TagsController.GetTags (TgCheckerApi)'
2024-02-04 17:07:55.622 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7256/api/Tags - - - 200 - text/plain;+charset=utf-8 52.8354ms
2024-02-04 17:11:01.271 +03:00 [INF] User profile is available. Using 'C:\Users\timar\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-04 17:11:01.447 +03:00 [INF] Default Quartz.NET properties loaded from embedded resource file
2024-02-04 17:11:01.492 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-02-04 17:11:01.497 +03:00 [INF] Quartz Scheduler created
2024-02-04 17:11:01.498 +03:00 [INF] RAMJobStore initialized.
2024-02-04 17:11:01.499 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-02-04 17:11:01.499 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-02-04 17:11:01.500 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-02-04 17:11:01.502 +03:00 [INF] JobFactory set to: TgCheckerApi.Job.QuartzJobFactory
2024-02-04 17:11:01.551 +03:00 [INF] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2024-02-04 17:11:01.646 +03:00 [INF] Now listening on: http://localhost:7256
2024-02-04 17:11:01.647 +03:00 [INF] Now listening on: http://localhost:5244
2024-02-04 17:11:01.651 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-04 17:11:01.653 +03:00 [INF] Hosting environment: Development
2024-02-04 17:11:01.653 +03:00 [INF] Content root path: C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\
2024-02-04 17:11:02.417 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger - -
2024-02-04 17:11:02.466 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger - - - 301 0 - 51.4138ms
2024-02-04 17:11:02.839 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/index.html - -
2024-02-04 17:11:03.099 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/swagger-ui-bundle.js - -
2024-02-04 17:11:03.099 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/swagger-ui.css - -
2024-02-04 17:11:03.099 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/swagger-ui-standalone-preset.js - -
2024-02-04 17:11:03.104 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/index.html - - - 200 - text/html;charset=utf-8 264.7007ms
2024-02-04 17:11:03.112 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_vs/browserLink - -
2024-02-04 17:11:03.151 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 38.7930ms
2024-02-04 17:11:03.153 +03:00 [INF] Sending file. Request path: '/swagger-ui.css'. Physical path: 'N/A'
2024-02-04 17:11:03.153 +03:00 [INF] Sending file. Request path: '/swagger-ui-standalone-preset.js'. Physical path: 'N/A'
2024-02-04 17:11:03.155 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/swagger-ui.css - - - 200 144929 text/css 55.1054ms
2024-02-04 17:11:03.155 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/swagger-ui-standalone-preset.js - - - 200 312163 application/javascript 55.8580ms
2024-02-04 17:11:03.156 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - -
2024-02-04 17:11:03.159 +03:00 [INF] Sending file. Request path: '/swagger-ui-bundle.js'. Physical path: 'N/A'
2024-02-04 17:11:03.161 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/swagger-ui-bundle.js - - - 200 1061536 application/javascript 61.1353ms
2024-02-04 17:11:03.161 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - - - 200 12356 application/javascript;+charset=utf-8 5.0521ms
2024-02-04 17:11:03.337 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - -
2024-02-04 17:11:03.403 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/favicon-32x32.png - -
2024-02-04 17:11:03.404 +03:00 [INF] Sending file. Request path: '/favicon-32x32.png'. Physical path: 'N/A'
2024-02-04 17:11:03.405 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/favicon-32x32.png - - - 200 628 image/png 1.6072ms
2024-02-04 17:11:03.477 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 140.8083ms
2024-02-04 17:11:11.766 +03:00 [INF] Start processing HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-04 17:11:11.776 +03:00 [INF] Sending HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-04 17:12:25.606 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Channel/Page/1?&sortOption=members&ascending=False&language= - -
2024-02-04 17:12:25.615 +03:00 [WRN] Failed to determine the https port for redirect.
2024-02-04 17:12:25.617 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:12:25.760 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.ChannelController.GetChannels (TgCheckerApi)'
2024-02-04 17:12:25.799 +03:00 [INF] Route matched with {action = "GetChannels", controller = "Channel"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.GetModels.ChannelGetModel]]] GetChannels(Int32, System.String, System.String, System.String, System.String, System.String) on controller TgCheckerApi.Controllers.ChannelController (TgCheckerApi).
2024-02-04 17:12:28.881 +03:00 [INF] Executed DbCommand (86ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Channel" AS c
WHERE c."Hidden" <> TRUE OR c."Hidden" IS NULL
2024-02-04 17:12:29.262 +03:00 [INF] Executed DbCommand (29ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."Url", c."user"
FROM "Channel" AS c
WHERE c."Hidden" <> TRUE OR c."Hidden" IS NULL
ORDER BY c.members DESC
LIMIT @__p_1 OFFSET @__p_0
2024-02-04 17:12:29.507 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-04 17:12:29.628 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:12:29.636 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-04 17:12:29.645 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:12:29.648 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-04 17:12:29.650 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:12:29.654 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-04 17:12:29.663 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:12:29.666 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-04 17:12:29.668 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:12:29.672 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-04 17:12:29.675 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:12:29.678 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-04 17:12:29.681 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:12:29.683 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-04 17:12:29.686 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:12:29.699 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.GetModels.ChannelGetModel, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-04 17:12:29.754 +03:00 [INF] Executed action TgCheckerApi.Controllers.ChannelController.GetChannels (TgCheckerApi) in 3946.0504ms
2024-02-04 17:12:29.759 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.ChannelController.GetChannels (TgCheckerApi)'
2024-02-04 17:12:29.783 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Channel/Page/1?&sortOption=members&ascending=False&language= - - - 200 18441 application/json;+charset=utf-8 4177.2863ms
2024-02-04 17:12:29.952 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Channel/Page/1?&sortOption=members&ascending=False&language= - -
2024-02-04 17:12:29.953 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:12:29.961 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.ChannelController.GetChannels (TgCheckerApi)'
2024-02-04 17:12:29.962 +03:00 [INF] Route matched with {action = "GetChannels", controller = "Channel"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.GetModels.ChannelGetModel]]] GetChannels(Int32, System.String, System.String, System.String, System.String, System.String) on controller TgCheckerApi.Controllers.ChannelController (TgCheckerApi).
2024-02-04 17:12:30.015 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Channel" AS c
WHERE c."Hidden" <> TRUE OR c."Hidden" IS NULL
2024-02-04 17:12:30.023 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."Url", c."user"
FROM "Channel" AS c
WHERE c."Hidden" <> TRUE OR c."Hidden" IS NULL
ORDER BY c.members DESC
LIMIT @__p_1 OFFSET @__p_0
2024-02-04 17:12:30.029 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-04 17:12:30.032 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:12:30.034 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-04 17:12:30.037 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:12:30.041 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-04 17:12:30.044 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:12:30.047 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-04 17:12:30.050 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:12:30.053 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-04 17:12:30.057 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:12:30.060 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-04 17:12:30.063 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:12:30.065 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-04 17:12:30.068 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:12:30.071 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-04 17:12:30.075 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:12:30.077 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.GetModels.ChannelGetModel, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-04 17:12:30.079 +03:00 [INF] Executed action TgCheckerApi.Controllers.ChannelController.GetChannels (TgCheckerApi) in 115.6114ms
2024-02-04 17:12:30.080 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.ChannelController.GetChannels (TgCheckerApi)'
2024-02-04 17:12:30.082 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Channel/Page/1?&sortOption=members&ascending=False&language= - - - 200 18441 application/json;+charset=utf-8 129.6585ms
2024-02-04 17:12:30.098 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Channel/Page/1?&sortOption=members&ascending=False&language= - -
2024-02-04 17:12:30.099 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:12:30.102 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.ChannelController.GetChannels (TgCheckerApi)'
2024-02-04 17:12:30.103 +03:00 [INF] Route matched with {action = "GetChannels", controller = "Channel"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.GetModels.ChannelGetModel]]] GetChannels(Int32, System.String, System.String, System.String, System.String, System.String) on controller TgCheckerApi.Controllers.ChannelController (TgCheckerApi).
2024-02-04 17:12:30.165 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Channel" AS c
WHERE c."Hidden" <> TRUE OR c."Hidden" IS NULL
2024-02-04 17:12:30.169 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."Url", c."user"
FROM "Channel" AS c
WHERE c."Hidden" <> TRUE OR c."Hidden" IS NULL
ORDER BY c.members DESC
LIMIT @__p_1 OFFSET @__p_0
2024-02-04 17:12:30.173 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-04 17:12:30.176 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:12:30.179 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-04 17:12:30.181 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:12:30.184 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-04 17:12:30.186 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:12:30.190 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-04 17:12:30.194 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:12:30.196 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-04 17:12:30.199 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:12:30.202 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-04 17:12:30.206 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:12:30.210 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-04 17:12:30.214 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:12:30.218 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-04 17:12:30.226 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:12:30.230 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.GetModels.ChannelGetModel, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-04 17:12:30.231 +03:00 [INF] Executed action TgCheckerApi.Controllers.ChannelController.GetChannels (TgCheckerApi) in 125.4056ms
2024-02-04 17:12:30.233 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.ChannelController.GetChannels (TgCheckerApi)'
2024-02-04 17:12:30.235 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Channel/Page/1?&sortOption=members&ascending=False&language= - - - 200 18441 application/json;+charset=utf-8 136.9199ms
2024-02-04 17:12:30.245 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Tags - -
2024-02-04 17:12:30.245 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:12:30.246 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.TagsController.GetTags (TgCheckerApi)'
2024-02-04 17:12:30.250 +03:00 [INF] Route matched with {action = "GetTags", controller = "Tags"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.String]] GetTags() on controller TgCheckerApi.Controllers.TagsController (TgCheckerApi).
2024-02-04 17:12:30.268 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT t.text
FROM "Tag" AS t
2024-02-04 17:12:30.273 +03:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2024-02-04 17:12:30.275 +03:00 [INF] Executed action TgCheckerApi.Controllers.TagsController.GetTags (TgCheckerApi) in 22.7313ms
2024-02-04 17:12:30.276 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.TagsController.GetTags (TgCheckerApi)'
2024-02-04 17:12:30.277 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Tags - - - 200 - text/plain;+charset=utf-8 32.0494ms
2024-02-04 17:12:48.216 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 17:12:48.218 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 17:12:48.243 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 17:12:48.244 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 27.9101ms
2024-02-04 17:12:48.286 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=MoN_tHBG8cKe0rfLi0eKTQ - -
2024-02-04 17:12:48.286 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 17:12:51.961 +03:00 [ERR] Error occurred executing UpdateSubscribersJob via HTTP request.
System.Threading.Tasks.TaskCanceledException: The request was canceled due to the configured HttpClient.Timeout of 100 seconds elapsing.
 ---> System.TimeoutException: The operation was canceled.
 ---> System.Threading.Tasks.TaskCanceledException: The operation was canceled.
 ---> System.IO.IOException: Unable to read data from the transport connection: The I/O operation has been aborted because of either a thread exit or an application request..
 ---> System.Net.Sockets.SocketException (995): The I/O operation has been aborted because of either a thread exit or an application request.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Security.SslStream.EnsureFullTlsFrameAsync[TIOAdapter](TIOAdapter adapter)
   at System.Net.Security.SslStream.ReadAsyncInternal[TIOAdapter](TIOAdapter adapter, Memory`1 buffer)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsyncCore(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsyncCore(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   --- End of inner exception stack trace ---
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpClient.HandleFailure(Exception e, Boolean telemetryStarted, HttpResponseMessage response, CancellationTokenSource cts, CancellationToken cancellationToken, CancellationTokenSource pendingRequestsCts)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at TgCheckerApi.Job.UpdateSubscribersJob.Execute(IJobExecutionContext context) in C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\Job\UpdateSubscribersJob.cs:line 49
2024-02-04 17:12:58.827 +03:00 [INF] Executed endpoint '/BotHub'
2024-02-04 17:12:58.829 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/BotHub?id=MoN_tHBG8cKe0rfLi0eKTQ - - - 101 - - 10543.0546ms
2024-02-04 17:13:19.168 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 17:13:19.170 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 17:13:19.171 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 17:13:19.172 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 3.7736ms
2024-02-04 17:13:19.189 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=ig8JFL5DUhUIXEKl2o9HaA - -
2024-02-04 17:13:19.189 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 17:13:27.137 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:7256/api/Auth - -
2024-02-04 17:13:27.138 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:13:27.139 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:7256/api/Auth - - - 204 - - 1.7060ms
2024-02-04 17:13:27.140 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Auth - -
2024-02-04 17:13:27.141 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:13:27.267 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 17:13:27.273 +03:00 [INF] Route matched with {action = "GetMe", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TgCheckerApi.Models.GetModels.UserProfileModel]] GetMe() on controller TgCheckerApi.Controllers.AuthController (TgCheckerApi).
2024-02-04 17:13:27.663 +03:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2024-02-04 17:13:27.853 +03:00 [ERR] Failed executing DbCommand (174ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.avatar, t.chat_id, t."LastUpdate", t.notification_settings, t.telegram_id, t.unique_key, t.username, t1.id, t1.channel_id, t1.user_id, t1.id0, t1.avatar, t1.bumps, t1.description, t1.flag, t1."Hidden", t1.language, t1.last_bump, t1.members, t1.name, t1.notification_sent, t1.notifications, t1.promo_post, t1.promo_post_interval, t1.promo_post_last, t1.promo_post_sent, t1.promo_post_time, t1.telegram_id, t1."Url", t1."user", t1.id1, t1.channel, t1.tag, t1.id00, t1.text, t3.id, t3.channel_id, t3.content, t3.created_at, t3.parent_id, t3.rating, t3.user_id, t3.id0, t3.avatar, t3.bumps, t3.description, t3.flag, t3."Hidden", t3.language, t3.last_bump, t3.members, t3.name, t3.notification_sent, t3.notifications, t3.promo_post, t3.promo_post_interval, t3.promo_post_last, t3.promo_post_sent, t3.promo_post_time, t3.telegram_id, t3."Url", t3."user"
FROM (
    SELECT u.id, u.avatar, u.chat_id, u."LastUpdate", u.notification_settings, u.telegram_id, u.unique_key, u.username
    FROM "User" AS u
    WHERE u.unique_key = @__uniqueKeyClaim_0
    LIMIT 2
) AS t
LEFT JOIN (
    SELECT c.id, c.channel_id, c.user_id, c0.id AS id0, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."Url", c0."user", t0.id AS id1, t0.channel, t0.tag, t0.id0 AS id00, t0.text
    FROM "ChannelAccess" AS c
    LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
    LEFT JOIN (
        SELECT c1.id, c1.channel, c1.tag, t2.id AS id0, t2.text
        FROM "ChannelHasTag" AS c1
        LEFT JOIN "Tag" AS t2 ON c1.tag = t2.id
    ) AS t0 ON c0.id = t0.channel
) AS t1 ON t.id = t1.user_id
LEFT JOIN (
    SELECT c2.id, c2.channel_id, c2.content, c2.created_at, c2.parent_id, c2.rating, c2.user_id, c3.id AS id0, c3.avatar, c3.bumps, c3.description, c3.flag, c3."Hidden", c3.language, c3.last_bump, c3.members, c3.name, c3.notification_sent, c3.notifications, c3.promo_post, c3.promo_post_interval, c3.promo_post_last, c3.promo_post_sent, c3.promo_post_time, c3.telegram_id, c3."Url", c3."user"
    FROM "Comment" AS c2
    INNER JOIN "Channel" AS c3 ON c2.channel_id = c3.id
) AS t3 ON t.id = t3.user_id
ORDER BY t.id, t1.id, t1.id0, t1.id1, t1.id00, t3.id
2024-02-04 17:13:27.884 +03:00 [ERR] An exception occurred while iterating over the results of a query for context type 'TgCheckerApi.Models.BaseModels.TgDbContext'.
Npgsql.PostgresException (0x80004005): 42703: столбец u.LastUpdate не существует

POSITION: 911
   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
  Exception data:
    Severity: ОШИБКА
    SqlState: 42703
    MessageText: столбец u.LastUpdate не существует
    Hint: Возможно, предполагалась ссылка на столбец "u.last_update".
    Position: 911
    File: parse_relation.c
    Line: 3661
    Routine: errorMissingColumn
Npgsql.PostgresException (0x80004005): 42703: столбец u.LastUpdate не существует

POSITION: 911
   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
  Exception data:
    Severity: ОШИБКА
    SqlState: 42703
    MessageText: столбец u.LastUpdate не существует
    Hint: Возможно, предполагалась ссылка на столбец "u.last_update".
    Position: 911
    File: parse_relation.c
    Line: 3661
    Routine: errorMissingColumn
2024-02-04 17:13:28.016 +03:00 [ERR] Error in GetMe method
Npgsql.PostgresException (0x80004005): 42703: столбец u.LastUpdate не существует

POSITION: 911
   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at TgCheckerApi.Services.UserService.GetUserWithRelations(String uniqueKeyClaim) in C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\Services\UserService.cs:line 17
   at TgCheckerApi.Controllers.AuthController.GetMe() in C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\Controllers\AuthController.cs:line 77
  Exception data:
    Severity: ОШИБКА
    SqlState: 42703
    MessageText: столбец u.LastUpdate не существует
    Hint: Возможно, предполагалась ссылка на столбец "u.last_update".
    Position: 911
    File: parse_relation.c
    Line: 3661
    Routine: errorMissingColumn
2024-02-04 17:13:28.034 +03:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2024-02-04 17:13:28.036 +03:00 [INF] Executed action TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi) in 761.1761ms
2024-02-04 17:13:28.039 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 17:13:28.040 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Auth - - - 500 - text/plain;+charset=utf-8 899.7966ms
2024-02-04 17:14:42.192 +03:00 [INF] User profile is available. Using 'C:\Users\timar\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-04 17:14:42.372 +03:00 [INF] Default Quartz.NET properties loaded from embedded resource file
2024-02-04 17:14:42.416 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-02-04 17:14:42.417 +03:00 [INF] Quartz Scheduler created
2024-02-04 17:14:42.421 +03:00 [INF] RAMJobStore initialized.
2024-02-04 17:14:42.422 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-02-04 17:14:42.423 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-02-04 17:14:42.424 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-02-04 17:14:42.425 +03:00 [INF] JobFactory set to: TgCheckerApi.Job.QuartzJobFactory
2024-02-04 17:14:42.474 +03:00 [INF] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2024-02-04 17:14:42.561 +03:00 [INF] Now listening on: http://localhost:7256
2024-02-04 17:14:42.563 +03:00 [INF] Now listening on: http://localhost:5244
2024-02-04 17:14:42.567 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-04 17:14:42.567 +03:00 [INF] Hosting environment: Development
2024-02-04 17:14:42.568 +03:00 [INF] Content root path: C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\
2024-02-04 17:14:42.896 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 17:14:42.953 +03:00 [WRN] Failed to determine the https port for redirect.
2024-02-04 17:14:43.037 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 17:14:43.071 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 17:14:43.075 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 182.3428ms
2024-02-04 17:14:43.077 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=hHjCML7tOsIxRt6UvxbkGQ - -
2024-02-04 17:14:43.085 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 17:14:43.175 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger - -
2024-02-04 17:14:43.200 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger - - - 301 0 - 24.9189ms
2024-02-04 17:14:43.204 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/index.html - -
2024-02-04 17:14:43.420 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/swagger-ui.css - -
2024-02-04 17:14:43.423 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/swagger-ui-bundle.js - -
2024-02-04 17:14:43.424 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/swagger-ui-standalone-preset.js - -
2024-02-04 17:14:43.427 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/index.html - - - 200 - text/html;charset=utf-8 223.1084ms
2024-02-04 17:14:43.439 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_vs/browserLink - -
2024-02-04 17:14:43.440 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - -
2024-02-04 17:14:43.474 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - - - 200 12356 application/javascript;+charset=utf-8 33.5214ms
2024-02-04 17:14:43.480 +03:00 [INF] Sending file. Request path: '/swagger-ui.css'. Physical path: 'N/A'
2024-02-04 17:14:43.480 +03:00 [INF] Sending file. Request path: '/swagger-ui-bundle.js'. Physical path: 'N/A'
2024-02-04 17:14:43.482 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/swagger-ui.css - - - 200 144929 text/css 61.4533ms
2024-02-04 17:14:43.480 +03:00 [INF] Sending file. Request path: '/swagger-ui-standalone-preset.js'. Physical path: 'N/A'
2024-02-04 17:14:43.483 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/swagger-ui-bundle.js - - - 200 1061536 application/javascript 59.0067ms
2024-02-04 17:14:43.484 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/swagger-ui-standalone-preset.js - - - 200 312163 application/javascript 60.5795ms
2024-02-04 17:14:43.484 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 47.3903ms
2024-02-04 17:14:43.675 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - -
2024-02-04 17:14:43.697 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/favicon-32x32.png - -
2024-02-04 17:14:43.697 +03:00 [INF] Sending file. Request path: '/favicon-32x32.png'. Physical path: 'N/A'
2024-02-04 17:14:43.699 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/favicon-32x32.png - - - 200 628 image/png 2.4703ms
2024-02-04 17:14:43.804 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 128.9993ms
2024-02-04 17:14:52.719 +03:00 [INF] Start processing HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-04 17:14:52.725 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:7256/api/Auth - -
2024-02-04 17:14:52.730 +03:00 [INF] Sending HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-04 17:14:52.730 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:14:52.733 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:7256/api/Auth - - - 204 - - 7.5237ms
2024-02-04 17:14:52.733 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Auth - -
2024-02-04 17:14:52.734 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:14:52.849 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 17:14:52.872 +03:00 [INF] Route matched with {action = "GetMe", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TgCheckerApi.Models.GetModels.UserProfileModel]] GetMe() on controller TgCheckerApi.Controllers.AuthController (TgCheckerApi).
2024-02-04 17:14:52.896 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:7256/api/Notification/UserNotifications - -
2024-02-04 17:14:52.898 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:14:52.899 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:7256/api/Notification/UserNotifications - - - 204 - - 3.0613ms
2024-02-04 17:14:52.901 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification/UserNotifications - -
2024-02-04 17:14:52.903 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:14:52.907 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetUserNotifications (TgCheckerApi)'
2024-02-04 17:14:52.923 +03:00 [INF] Route matched with {action = "GetUserNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetUserNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-04 17:14:55.575 +03:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2024-02-04 17:14:56.018 +03:00 [INF] Executed DbCommand (101ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "User" AS u
WHERE u.unique_key = @__uniqueKeyClaim_0
LIMIT 2
2024-02-04 17:14:56.047 +03:00 [INF] Executed DbCommand (152ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.avatar, t.chat_id, t.last_update, t.notification_settings, t.telegram_id, t.unique_key, t.username, t1.id, t1.channel_id, t1.user_id, t1.id0, t1.avatar, t1.bumps, t1.description, t1.flag, t1."Hidden", t1.language, t1.last_bump, t1.members, t1.name, t1.notification_sent, t1.notifications, t1.promo_post, t1.promo_post_interval, t1.promo_post_last, t1.promo_post_sent, t1.promo_post_time, t1.telegram_id, t1."Url", t1."user", t1.id1, t1.channel, t1.tag, t1.id00, t1.text, t3.id, t3.channel_id, t3.content, t3.created_at, t3.parent_id, t3.rating, t3.user_id, t3.id0, t3.avatar, t3.bumps, t3.description, t3.flag, t3."Hidden", t3.language, t3.last_bump, t3.members, t3.name, t3.notification_sent, t3.notifications, t3.promo_post, t3.promo_post_interval, t3.promo_post_last, t3.promo_post_sent, t3.promo_post_time, t3.telegram_id, t3."Url", t3."user"
FROM (
    SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
    FROM "User" AS u
    WHERE u.unique_key = @__uniqueKeyClaim_0
    LIMIT 2
) AS t
LEFT JOIN (
    SELECT c.id, c.channel_id, c.user_id, c0.id AS id0, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."Url", c0."user", t0.id AS id1, t0.channel, t0.tag, t0.id0 AS id00, t0.text
    FROM "ChannelAccess" AS c
    LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
    LEFT JOIN (
        SELECT c1.id, c1.channel, c1.tag, t2.id AS id0, t2.text
        FROM "ChannelHasTag" AS c1
        LEFT JOIN "Tag" AS t2 ON c1.tag = t2.id
    ) AS t0 ON c0.id = t0.channel
) AS t1 ON t.id = t1.user_id
LEFT JOIN (
    SELECT c2.id, c2.channel_id, c2.content, c2.created_at, c2.parent_id, c2.rating, c2.user_id, c3.id AS id0, c3.avatar, c3.bumps, c3.description, c3.flag, c3."Hidden", c3.language, c3.last_bump, c3.members, c3.name, c3.notification_sent, c3.notifications, c3.promo_post, c3.promo_post_interval, c3.promo_post_last, c3.promo_post_sent, c3.promo_post_time, c3.telegram_id, c3."Url", c3."user"
    FROM "Comment" AS c2
    INNER JOIN "Channel" AS c3 ON c2.channel_id = c3.id
) AS t3 ON t.id = t3.user_id
ORDER BY t.id, t1.id, t1.id0, t1.id1, t1.id00, t3.id
2024-02-04 17:14:56.279 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.user_id = @__user_Id_0
2024-02-04 17:14:56.313 +03:00 [INF] Received request for getProfilePictureAndUsername. Request hash: 5ec5950f142bca89e2aa6cb4127bdea9391929bfdb585a0fda8bc0406276e946
2024-02-04 17:14:56.314 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.BaseModels.Notification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-04 17:14:56.368 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetUserNotifications (TgCheckerApi) in 3431.698ms
2024-02-04 17:14:56.375 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetUserNotifications (TgCheckerApi)'
2024-02-04 17:14:56.401 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification/UserNotifications - - - 200 524 application/json;+charset=utf-8 3499.1311ms
2024-02-04 17:14:56.431 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:14:56.467 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:14:56.477 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:14:56.485 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 17:14:56.578 +03:00 [INF] Executed DbCommand (54ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 17:14:56.734 +03:00 [INF] Executed DbCommand (22ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 17:14:56.842 +03:00 [INF] Executed DbCommand (59ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 17:14:57.010 +03:00 [INF] Executed DbCommand (121ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 17:14:57.019 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:14:57.025 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:14:57.027 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:14:57.029 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 17:14:57.033 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 17:14:57.035 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 17:14:57.065 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 17:14:57.068 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 17:14:57.074 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:14:57.076 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:14:57.079 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:14:57.082 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 17:14:57.084 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 17:14:57.088 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 17:14:57.092 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 17:14:57.095 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 17:14:57.099 +03:00 [INF] Executing OkObjectResult, writing value of type 'TgCheckerApi.Models.GetModels.UserProfileModel'.
2024-02-04 17:14:57.122 +03:00 [INF] Executed action TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi) in 4247.1127ms
2024-02-04 17:14:57.123 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Auth - -
2024-02-04 17:14:57.123 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 17:14:57.125 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:14:57.126 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Auth - - - 200 28584 application/json;+charset=utf-8 4392.3055ms
2024-02-04 17:14:57.126 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 17:14:57.128 +03:00 [INF] Route matched with {action = "GetMe", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TgCheckerApi.Models.GetModels.UserProfileModel]] GetMe() on controller TgCheckerApi.Controllers.AuthController (TgCheckerApi).
2024-02-04 17:14:57.195 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.avatar, t.chat_id, t.last_update, t.notification_settings, t.telegram_id, t.unique_key, t.username, t1.id, t1.channel_id, t1.user_id, t1.id0, t1.avatar, t1.bumps, t1.description, t1.flag, t1."Hidden", t1.language, t1.last_bump, t1.members, t1.name, t1.notification_sent, t1.notifications, t1.promo_post, t1.promo_post_interval, t1.promo_post_last, t1.promo_post_sent, t1.promo_post_time, t1.telegram_id, t1."Url", t1."user", t1.id1, t1.channel, t1.tag, t1.id00, t1.text, t3.id, t3.channel_id, t3.content, t3.created_at, t3.parent_id, t3.rating, t3.user_id, t3.id0, t3.avatar, t3.bumps, t3.description, t3.flag, t3."Hidden", t3.language, t3.last_bump, t3.members, t3.name, t3.notification_sent, t3.notifications, t3.promo_post, t3.promo_post_interval, t3.promo_post_last, t3.promo_post_sent, t3.promo_post_time, t3.telegram_id, t3."Url", t3."user"
FROM (
    SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
    FROM "User" AS u
    WHERE u.unique_key = @__uniqueKeyClaim_0
    LIMIT 2
) AS t
LEFT JOIN (
    SELECT c.id, c.channel_id, c.user_id, c0.id AS id0, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."Url", c0."user", t0.id AS id1, t0.channel, t0.tag, t0.id0 AS id00, t0.text
    FROM "ChannelAccess" AS c
    LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
    LEFT JOIN (
        SELECT c1.id, c1.channel, c1.tag, t2.id AS id0, t2.text
        FROM "ChannelHasTag" AS c1
        LEFT JOIN "Tag" AS t2 ON c1.tag = t2.id
    ) AS t0 ON c0.id = t0.channel
) AS t1 ON t.id = t1.user_id
LEFT JOIN (
    SELECT c2.id, c2.channel_id, c2.content, c2.created_at, c2.parent_id, c2.rating, c2.user_id, c3.id AS id0, c3.avatar, c3.bumps, c3.description, c3.flag, c3."Hidden", c3.language, c3.last_bump, c3.members, c3.name, c3.notification_sent, c3.notifications, c3.promo_post, c3.promo_post_interval, c3.promo_post_last, c3.promo_post_sent, c3.promo_post_time, c3.telegram_id, c3."Url", c3."user"
    FROM "Comment" AS c2
    INNER JOIN "Channel" AS c3 ON c2.channel_id = c3.id
) AS t3 ON t.id = t3.user_id
ORDER BY t.id, t1.id, t1.id0, t1.id1, t1.id00, t3.id
2024-02-04 17:14:57.201 +03:00 [INF] Received request for getProfilePictureAndUsername. Request hash: 5ec5950f142bca89e2aa6cb4127bdea9391929bfdb585a0fda8bc0406276e946
2024-02-04 17:14:57.202 +03:00 [INF] Request found in cache. Hash: 5ec5950f142bca89e2aa6cb4127bdea9391929bfdb585a0fda8bc0406276e946
2024-02-04 17:14:57.202 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:14:57.206 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:14:57.210 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:14:57.215 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:7256/api/User/PaymentHistory - -
2024-02-04 17:14:57.215 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 17:14:57.222 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:14:57.225 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:7256/api/User/PaymentHistory - - - 204 - - 10.3555ms
2024-02-04 17:14:57.225 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 17:14:57.226 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/User/PaymentHistory - -
2024-02-04 17:14:57.228 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:14:57.229 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 17:14:57.229 +03:00 [INF] Executing endpoint 'TgCheckerApi.MapperProfiles.UserController.GetPaymentHistory (TgCheckerApi)'
2024-02-04 17:14:57.232 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 17:14:57.236 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 17:14:57.239 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:14:57.236 +03:00 [INF] Route matched with {action = "GetPaymentHistory", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.GetModels.PaymentHistoryModel]]] GetPaymentHistory() on controller TgCheckerApi.MapperProfiles.UserController (TgCheckerApi).
2024-02-04 17:14:57.378 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:14:57.382 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:14:57.385 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.avatar, t.chat_id, t.last_update, t.notification_settings, t.telegram_id, t.unique_key, t.username, t1.id, t1.channel_id, t1.user_id, t1.id0, t1.avatar, t1.bumps, t1.description, t1.flag, t1."Hidden", t1.language, t1.last_bump, t1.members, t1.name, t1.notification_sent, t1.notifications, t1.promo_post, t1.promo_post_interval, t1.promo_post_last, t1.promo_post_sent, t1.promo_post_time, t1.telegram_id, t1."Url", t1."user", t1.id1, t1.channel, t1.tag, t1.id00, t1.text, t3.id, t3.channel_id, t3.content, t3.created_at, t3.parent_id, t3.rating, t3.user_id, t3.id0, t3.avatar, t3.bumps, t3.description, t3.flag, t3."Hidden", t3.language, t3.last_bump, t3.members, t3.name, t3.notification_sent, t3.notifications, t3.promo_post, t3.promo_post_interval, t3.promo_post_last, t3.promo_post_sent, t3.promo_post_time, t3.telegram_id, t3."Url", t3."user"
FROM (
    SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
    FROM "User" AS u
    WHERE u.unique_key = @__uniqueKeyClaim_0
    LIMIT 2
) AS t
LEFT JOIN (
    SELECT c.id, c.channel_id, c.user_id, c0.id AS id0, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."Url", c0."user", t0.id AS id1, t0.channel, t0.tag, t0.id0 AS id00, t0.text
    FROM "ChannelAccess" AS c
    LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
    LEFT JOIN (
        SELECT c1.id, c1.channel, c1.tag, t2.id AS id0, t2.text
        FROM "ChannelHasTag" AS c1
        LEFT JOIN "Tag" AS t2 ON c1.tag = t2.id
    ) AS t0 ON c0.id = t0.channel
) AS t1 ON t.id = t1.user_id
LEFT JOIN (
    SELECT c2.id, c2.channel_id, c2.content, c2.created_at, c2.parent_id, c2.rating, c2.user_id, c3.id AS id0, c3.avatar, c3.bumps, c3.description, c3.flag, c3."Hidden", c3.language, c3.last_bump, c3.members, c3.name, c3.notification_sent, c3.notifications, c3.promo_post, c3.promo_post_interval, c3.promo_post_last, c3.promo_post_sent, c3.promo_post_time, c3.telegram_id, c3."Url", c3."user"
    FROM "Comment" AS c2
    INNER JOIN "Channel" AS c3 ON c2.channel_id = c3.id
) AS t3 ON t.id = t3.user_id
ORDER BY t.id, t1.id, t1.id0, t1.id1, t1.id00, t3.id
2024-02-04 17:14:57.387 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 17:14:57.393 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 17:14:57.397 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 17:14:57.399 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 17:14:57.402 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 17:14:57.404 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.channel_id AS "ChannelId", p.id AS "PaymentId", p.subtype_id AS "ChannelSubscriptionType", p.created_at AS "PurchaseDate", p.duration AS "SubscriptionDuration", p.amount_value AS "AmountValue", p.amount_currency AS "AmountCurrency"
FROM "Payments" AS p
WHERE p.user_id = @__userId_0
2024-02-04 17:14:57.406 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:14:57.409 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.GetModels.PaymentHistoryModel, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-04 17:14:57.411 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:14:57.413 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:14:57.416 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 17:14:57.417 +03:00 [INF] Executed action TgCheckerApi.MapperProfiles.UserController.GetPaymentHistory (TgCheckerApi) in 37.2913ms
2024-02-04 17:14:57.419 +03:00 [INF] Executed endpoint 'TgCheckerApi.MapperProfiles.UserController.GetPaymentHistory (TgCheckerApi)'
2024-02-04 17:14:57.419 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 17:14:57.420 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/User/PaymentHistory - - - 200 1868 application/json;+charset=utf-8 194.0460ms
2024-02-04 17:14:57.423 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 17:14:57.428 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 17:14:57.430 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 17:14:57.432 +03:00 [INF] Executing OkObjectResult, writing value of type 'TgCheckerApi.Models.GetModels.UserProfileModel'.
2024-02-04 17:14:57.433 +03:00 [INF] Executed action TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi) in 304.0193ms
2024-02-04 17:14:57.434 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 17:14:57.435 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Auth - - - 200 28584 application/json;+charset=utf-8 312.4372ms
2024-02-04 17:15:26.370 +03:00 [WRN] New task timed out. Hash: 5ec5950f142bca89e2aa6cb4127bdea9391929bfdb585a0fda8bc0406276e946
2024-02-04 17:15:27.216 +03:00 [WRN] Cached task timed out.
2024-02-04 17:15:49.723 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:7256/api/Auth - -
2024-02-04 17:15:49.724 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:15:49.725 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:7256/api/Auth - - - 204 - - 1.8626ms
2024-02-04 17:15:49.726 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Auth - -
2024-02-04 17:15:49.727 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:15:49.728 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 17:15:49.729 +03:00 [INF] Route matched with {action = "GetMe", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TgCheckerApi.Models.GetModels.UserProfileModel]] GetMe() on controller TgCheckerApi.Controllers.AuthController (TgCheckerApi).
2024-02-04 17:15:49.735 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.avatar, t.chat_id, t.last_update, t.notification_settings, t.telegram_id, t.unique_key, t.username, t1.id, t1.channel_id, t1.user_id, t1.id0, t1.avatar, t1.bumps, t1.description, t1.flag, t1."Hidden", t1.language, t1.last_bump, t1.members, t1.name, t1.notification_sent, t1.notifications, t1.promo_post, t1.promo_post_interval, t1.promo_post_last, t1.promo_post_sent, t1.promo_post_time, t1.telegram_id, t1."Url", t1."user", t1.id1, t1.channel, t1.tag, t1.id00, t1.text, t3.id, t3.channel_id, t3.content, t3.created_at, t3.parent_id, t3.rating, t3.user_id, t3.id0, t3.avatar, t3.bumps, t3.description, t3.flag, t3."Hidden", t3.language, t3.last_bump, t3.members, t3.name, t3.notification_sent, t3.notifications, t3.promo_post, t3.promo_post_interval, t3.promo_post_last, t3.promo_post_sent, t3.promo_post_time, t3.telegram_id, t3."Url", t3."user"
FROM (
    SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
    FROM "User" AS u
    WHERE u.unique_key = @__uniqueKeyClaim_0
    LIMIT 2
) AS t
LEFT JOIN (
    SELECT c.id, c.channel_id, c.user_id, c0.id AS id0, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."Url", c0."user", t0.id AS id1, t0.channel, t0.tag, t0.id0 AS id00, t0.text
    FROM "ChannelAccess" AS c
    LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
    LEFT JOIN (
        SELECT c1.id, c1.channel, c1.tag, t2.id AS id0, t2.text
        FROM "ChannelHasTag" AS c1
        LEFT JOIN "Tag" AS t2 ON c1.tag = t2.id
    ) AS t0 ON c0.id = t0.channel
) AS t1 ON t.id = t1.user_id
LEFT JOIN (
    SELECT c2.id, c2.channel_id, c2.content, c2.created_at, c2.parent_id, c2.rating, c2.user_id, c3.id AS id0, c3.avatar, c3.bumps, c3.description, c3.flag, c3."Hidden", c3.language, c3.last_bump, c3.members, c3.name, c3.notification_sent, c3.notifications, c3.promo_post, c3.promo_post_interval, c3.promo_post_last, c3.promo_post_sent, c3.promo_post_time, c3.telegram_id, c3."Url", c3."user"
    FROM "Comment" AS c2
    INNER JOIN "Channel" AS c3 ON c2.channel_id = c3.id
) AS t3 ON t.id = t3.user_id
ORDER BY t.id, t1.id, t1.id0, t1.id1, t1.id00, t3.id
2024-02-04 17:15:49.752 +03:00 [INF] Received request for getProfilePictureAndUsername. Request hash: 5ec5950f142bca89e2aa6cb4127bdea9391929bfdb585a0fda8bc0406276e946
2024-02-04 17:15:49.753 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:15:49.761 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:15:49.765 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:15:49.773 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 17:15:49.784 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 17:15:49.791 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 17:15:49.798 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 17:15:49.804 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 17:15:49.810 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:15:49.814 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:15:49.824 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:15:49.830 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 17:15:49.839 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 17:15:49.845 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 17:15:49.853 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 17:15:49.859 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 17:15:49.865 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:15:49.871 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:15:49.877 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:15:49.884 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 17:15:49.888 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 17:15:49.894 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 17:15:49.897 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:7256/api/Notification/UserNotifications - -
2024-02-04 17:15:49.901 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 17:15:49.901 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:15:49.906 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 17:15:49.907 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:7256/api/Notification/UserNotifications - - - 204 - - 9.3472ms
2024-02-04 17:15:49.913 +03:00 [INF] Executing OkObjectResult, writing value of type 'TgCheckerApi.Models.GetModels.UserProfileModel'.
2024-02-04 17:15:49.914 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification/UserNotifications - -
2024-02-04 17:15:49.916 +03:00 [INF] Executed action TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi) in 184.8866ms
2024-02-04 17:15:49.918 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:15:49.923 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 17:15:49.929 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetUserNotifications (TgCheckerApi)'
2024-02-04 17:15:49.930 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Auth - - - 200 28584 application/json;+charset=utf-8 204.1376ms
2024-02-04 17:15:49.931 +03:00 [INF] Route matched with {action = "GetUserNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetUserNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-04 17:15:49.940 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "User" AS u
WHERE u.unique_key = @__uniqueKeyClaim_0
LIMIT 2
2024-02-04 17:15:49.946 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.user_id = @__user_Id_0
2024-02-04 17:15:49.951 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.BaseModels.Notification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-04 17:15:49.954 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetUserNotifications (TgCheckerApi) in 17.2382ms
2024-02-04 17:15:49.956 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetUserNotifications (TgCheckerApi)'
2024-02-04 17:15:49.960 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification/UserNotifications - - - 200 524 application/json;+charset=utf-8 46.5331ms
2024-02-04 17:15:50.125 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:7256/api/User/PaymentHistory - -
2024-02-04 17:15:50.126 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:15:50.128 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:7256/api/User/PaymentHistory - - - 204 - - 2.9402ms
2024-02-04 17:15:50.129 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/User/PaymentHistory - -
2024-02-04 17:15:50.130 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:15:50.132 +03:00 [INF] Executing endpoint 'TgCheckerApi.MapperProfiles.UserController.GetPaymentHistory (TgCheckerApi)'
2024-02-04 17:15:50.133 +03:00 [INF] Route matched with {action = "GetPaymentHistory", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.GetModels.PaymentHistoryModel]]] GetPaymentHistory() on controller TgCheckerApi.MapperProfiles.UserController (TgCheckerApi).
2024-02-04 17:15:50.141 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.avatar, t.chat_id, t.last_update, t.notification_settings, t.telegram_id, t.unique_key, t.username, t1.id, t1.channel_id, t1.user_id, t1.id0, t1.avatar, t1.bumps, t1.description, t1.flag, t1."Hidden", t1.language, t1.last_bump, t1.members, t1.name, t1.notification_sent, t1.notifications, t1.promo_post, t1.promo_post_interval, t1.promo_post_last, t1.promo_post_sent, t1.promo_post_time, t1.telegram_id, t1."Url", t1."user", t1.id1, t1.channel, t1.tag, t1.id00, t1.text, t3.id, t3.channel_id, t3.content, t3.created_at, t3.parent_id, t3.rating, t3.user_id, t3.id0, t3.avatar, t3.bumps, t3.description, t3.flag, t3."Hidden", t3.language, t3.last_bump, t3.members, t3.name, t3.notification_sent, t3.notifications, t3.promo_post, t3.promo_post_interval, t3.promo_post_last, t3.promo_post_sent, t3.promo_post_time, t3.telegram_id, t3."Url", t3."user"
FROM (
    SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
    FROM "User" AS u
    WHERE u.unique_key = @__uniqueKeyClaim_0
    LIMIT 2
) AS t
LEFT JOIN (
    SELECT c.id, c.channel_id, c.user_id, c0.id AS id0, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."Url", c0."user", t0.id AS id1, t0.channel, t0.tag, t0.id0 AS id00, t0.text
    FROM "ChannelAccess" AS c
    LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
    LEFT JOIN (
        SELECT c1.id, c1.channel, c1.tag, t2.id AS id0, t2.text
        FROM "ChannelHasTag" AS c1
        LEFT JOIN "Tag" AS t2 ON c1.tag = t2.id
    ) AS t0 ON c0.id = t0.channel
) AS t1 ON t.id = t1.user_id
LEFT JOIN (
    SELECT c2.id, c2.channel_id, c2.content, c2.created_at, c2.parent_id, c2.rating, c2.user_id, c3.id AS id0, c3.avatar, c3.bumps, c3.description, c3.flag, c3."Hidden", c3.language, c3.last_bump, c3.members, c3.name, c3.notification_sent, c3.notifications, c3.promo_post, c3.promo_post_interval, c3.promo_post_last, c3.promo_post_sent, c3.promo_post_time, c3.telegram_id, c3."Url", c3."user"
    FROM "Comment" AS c2
    INNER JOIN "Channel" AS c3 ON c2.channel_id = c3.id
) AS t3 ON t.id = t3.user_id
ORDER BY t.id, t1.id, t1.id0, t1.id1, t1.id00, t3.id
2024-02-04 17:15:50.146 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Auth - -
2024-02-04 17:15:50.152 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:15:50.153 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 17:15:50.154 +03:00 [INF] Route matched with {action = "GetMe", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TgCheckerApi.Models.GetModels.UserProfileModel]] GetMe() on controller TgCheckerApi.Controllers.AuthController (TgCheckerApi).
2024-02-04 17:15:50.155 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.channel_id AS "ChannelId", p.id AS "PaymentId", p.subtype_id AS "ChannelSubscriptionType", p.created_at AS "PurchaseDate", p.duration AS "SubscriptionDuration", p.amount_value AS "AmountValue", p.amount_currency AS "AmountCurrency"
FROM "Payments" AS p
WHERE p.user_id = @__userId_0
2024-02-04 17:15:50.161 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.avatar, t.chat_id, t.last_update, t.notification_settings, t.telegram_id, t.unique_key, t.username, t1.id, t1.channel_id, t1.user_id, t1.id0, t1.avatar, t1.bumps, t1.description, t1.flag, t1."Hidden", t1.language, t1.last_bump, t1.members, t1.name, t1.notification_sent, t1.notifications, t1.promo_post, t1.promo_post_interval, t1.promo_post_last, t1.promo_post_sent, t1.promo_post_time, t1.telegram_id, t1."Url", t1."user", t1.id1, t1.channel, t1.tag, t1.id00, t1.text, t3.id, t3.channel_id, t3.content, t3.created_at, t3.parent_id, t3.rating, t3.user_id, t3.id0, t3.avatar, t3.bumps, t3.description, t3.flag, t3."Hidden", t3.language, t3.last_bump, t3.members, t3.name, t3.notification_sent, t3.notifications, t3.promo_post, t3.promo_post_interval, t3.promo_post_last, t3.promo_post_sent, t3.promo_post_time, t3.telegram_id, t3."Url", t3."user"
FROM (
    SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
    FROM "User" AS u
    WHERE u.unique_key = @__uniqueKeyClaim_0
    LIMIT 2
) AS t
LEFT JOIN (
    SELECT c.id, c.channel_id, c.user_id, c0.id AS id0, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."Url", c0."user", t0.id AS id1, t0.channel, t0.tag, t0.id0 AS id00, t0.text
    FROM "ChannelAccess" AS c
    LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
    LEFT JOIN (
        SELECT c1.id, c1.channel, c1.tag, t2.id AS id0, t2.text
        FROM "ChannelHasTag" AS c1
        LEFT JOIN "Tag" AS t2 ON c1.tag = t2.id
    ) AS t0 ON c0.id = t0.channel
) AS t1 ON t.id = t1.user_id
LEFT JOIN (
    SELECT c2.id, c2.channel_id, c2.content, c2.created_at, c2.parent_id, c2.rating, c2.user_id, c3.id AS id0, c3.avatar, c3.bumps, c3.description, c3.flag, c3."Hidden", c3.language, c3.last_bump, c3.members, c3.name, c3.notification_sent, c3.notifications, c3.promo_post, c3.promo_post_interval, c3.promo_post_last, c3.promo_post_sent, c3.promo_post_time, c3.telegram_id, c3."Url", c3."user"
    FROM "Comment" AS c2
    INNER JOIN "Channel" AS c3 ON c2.channel_id = c3.id
) AS t3 ON t.id = t3.user_id
ORDER BY t.id, t1.id, t1.id0, t1.id1, t1.id00, t3.id
2024-02-04 17:15:50.166 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.GetModels.PaymentHistoryModel, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-04 17:15:50.174 +03:00 [INF] Received request for getProfilePictureAndUsername. Request hash: 5ec5950f142bca89e2aa6cb4127bdea9391929bfdb585a0fda8bc0406276e946
2024-02-04 17:15:50.175 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:15:50.178 +03:00 [INF] Executed action TgCheckerApi.MapperProfiles.UserController.GetPaymentHistory (TgCheckerApi) in 41.971ms
2024-02-04 17:15:50.179 +03:00 [INF] Request found in cache. Hash: 5ec5950f142bca89e2aa6cb4127bdea9391929bfdb585a0fda8bc0406276e946
2024-02-04 17:15:50.182 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:15:50.183 +03:00 [INF] Executed endpoint 'TgCheckerApi.MapperProfiles.UserController.GetPaymentHistory (TgCheckerApi)'
2024-02-04 17:15:50.187 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:15:50.188 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/User/PaymentHistory - - - 200 1868 application/json;+charset=utf-8 58.8989ms
2024-02-04 17:15:50.191 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 17:15:50.198 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 17:15:50.203 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 17:15:50.210 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 17:15:50.214 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 17:15:50.219 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:15:50.227 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:15:50.230 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:15:50.233 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 17:15:50.241 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 17:15:50.246 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 17:15:50.250 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 17:15:50.259 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 17:15:50.264 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:15:50.270 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:15:50.276 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:15:50.279 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 17:15:50.284 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 17:15:50.290 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 17:15:50.295 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 17:15:50.302 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 17:15:50.305 +03:00 [INF] Executing OkObjectResult, writing value of type 'TgCheckerApi.Models.GetModels.UserProfileModel'.
2024-02-04 17:15:50.307 +03:00 [INF] Executed action TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi) in 149.4937ms
2024-02-04 17:15:50.309 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 17:15:50.310 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Auth - - - 200 28584 application/json;+charset=utf-8 164.2161ms
2024-02-04 17:16:01.848 +03:00 [INF] New task completed successfully. Hash: 5ec5950f142bca89e2aa6cb4127bdea9391929bfdb585a0fda8bc0406276e946
2024-02-04 17:16:02.001 +03:00 [ERR] Error updating user profile
System.ObjectDisposedException: Cannot access a disposed context instance. A common cause of this error is disposing a context instance that was resolved from dependency injection and then later trying to use the same context instance elsewhere in your application. This may occur if you are calling 'Dispose' on the context instance, or wrapping it in a using statement. If you are using dependency injection, you should let the dependency injection container take care of disposing context instances.
Object name: 'TgDbContext'.
   at Microsoft.EntityFrameworkCore.DbContext.CheckDisposed()
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at TgCheckerApi.Controllers.AuthController.UpdateUserProfileIfNeeded(User user) in C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\Controllers\AuthController.cs:line 150
2024-02-04 17:16:02.040 +03:00 [INF] Cached task completed successfully.
2024-02-04 17:16:02.065 +03:00 [ERR] Error updating user profile
System.ObjectDisposedException: Cannot access a disposed context instance. A common cause of this error is disposing a context instance that was resolved from dependency injection and then later trying to use the same context instance elsewhere in your application. This may occur if you are calling 'Dispose' on the context instance, or wrapping it in a using statement. If you are using dependency injection, you should let the dependency injection container take care of disposing context instances.
Object name: 'TgDbContext'.
   at Microsoft.EntityFrameworkCore.DbContext.CheckDisposed()
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at TgCheckerApi.Controllers.AuthController.UpdateUserProfileIfNeeded(User user) in C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\Controllers\AuthController.cs:line 150
2024-02-04 17:16:32.766 +03:00 [ERR] Error occurred executing UpdateSubscribersJob via HTTP request.
System.Threading.Tasks.TaskCanceledException: The request was canceled due to the configured HttpClient.Timeout of 100 seconds elapsing.
 ---> System.TimeoutException: The operation was canceled.
 ---> System.Threading.Tasks.TaskCanceledException: The operation was canceled.
 ---> System.IO.IOException: Unable to read data from the transport connection: The I/O operation has been aborted because of either a thread exit or an application request..
 ---> System.Net.Sockets.SocketException (995): The I/O operation has been aborted because of either a thread exit or an application request.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Security.SslStream.EnsureFullTlsFrameAsync[TIOAdapter](TIOAdapter adapter)
   at System.Net.Security.SslStream.ReadAsyncInternal[TIOAdapter](TIOAdapter adapter, Memory`1 buffer)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsyncCore(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsyncCore(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   --- End of inner exception stack trace ---
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpClient.HandleFailure(Exception e, Boolean telemetryStarted, HttpResponseMessage response, CancellationTokenSource cts, CancellationToken cancellationToken, CancellationTokenSource pendingRequestsCts)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at TgCheckerApi.Job.UpdateSubscribersJob.Execute(IJobExecutionContext context) in C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\Job\UpdateSubscribersJob.cs:line 49
2024-02-04 17:20:55.773 +03:00 [INF] User profile is available. Using 'C:\Users\timar\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-04 17:20:55.931 +03:00 [INF] Default Quartz.NET properties loaded from embedded resource file
2024-02-04 17:20:55.971 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-02-04 17:20:55.976 +03:00 [INF] Quartz Scheduler created
2024-02-04 17:20:55.977 +03:00 [INF] RAMJobStore initialized.
2024-02-04 17:20:55.978 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-02-04 17:20:55.978 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-02-04 17:20:55.979 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-02-04 17:20:55.980 +03:00 [INF] JobFactory set to: TgCheckerApi.Job.QuartzJobFactory
2024-02-04 17:20:56.024 +03:00 [INF] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2024-02-04 17:20:56.101 +03:00 [INF] Now listening on: http://localhost:7256
2024-02-04 17:20:56.102 +03:00 [INF] Now listening on: http://localhost:5244
2024-02-04 17:20:56.105 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-04 17:20:56.106 +03:00 [INF] Hosting environment: Development
2024-02-04 17:20:56.107 +03:00 [INF] Content root path: C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\
2024-02-04 17:20:56.452 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/index.html - -
2024-02-04 17:20:56.740 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/index.html - - - 200 - text/html;charset=utf-8 290.6334ms
2024-02-04 17:20:56.743 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_vs/browserLink - -
2024-02-04 17:20:56.750 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - -
2024-02-04 17:20:56.758 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - - - 200 12356 application/javascript;+charset=utf-8 7.4937ms
2024-02-04 17:20:56.764 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 20.5763ms
2024-02-04 17:20:56.901 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - -
2024-02-04 17:20:56.956 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 17:20:56.961 +03:00 [WRN] Failed to determine the https port for redirect.
2024-02-04 17:20:56.968 +03:00 [ERR] An unhandled exception has occurred while executing the request.
Swashbuckle.AspNetCore.SwaggerGen.SwaggerGeneratorException: Ambiguous HTTP method for action - TgCheckerApi.Controllers.AuthController.UpdateUserProfileIfNeeded (TgCheckerApi). Actions require an explicit HttpMethod binding for Swagger/OpenAPI 3.0
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GenerateOperations(IEnumerable`1 apiDescriptions, SchemaRepository schemaRepository)
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GeneratePaths(IEnumerable`1 apiDescriptions, SchemaRepository schemaRepository)
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GetSwaggerDocumentWithoutFilters(String documentName, String host, String basePath)
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GetSwaggerAsync(String documentName, String host, String basePath)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2024-02-04 17:20:56.992 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - - - 500 - text/plain;+charset=utf-8 91.3895ms
2024-02-04 17:20:57.040 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 17:20:57.054 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 17:20:57.056 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 100.5511ms
2024-02-04 17:20:57.058 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=fGux5NdplMItxqEL7O2ndw - -
2024-02-04 17:20:57.060 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 17:20:57.106 +03:00 [INF] Executed endpoint '/BotHub'
2024-02-04 17:20:57.108 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/BotHub?id=fGux5NdplMItxqEL7O2ndw - - - 101 - - 49.9229ms
2024-02-04 17:21:23.663 +03:00 [INF] User profile is available. Using 'C:\Users\timar\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-04 17:21:23.832 +03:00 [INF] Default Quartz.NET properties loaded from embedded resource file
2024-02-04 17:21:23.870 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-02-04 17:21:23.905 +03:00 [INF] Quartz Scheduler created
2024-02-04 17:21:23.906 +03:00 [INF] RAMJobStore initialized.
2024-02-04 17:21:23.913 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-02-04 17:21:23.924 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-02-04 17:21:23.925 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-02-04 17:21:23.927 +03:00 [INF] JobFactory set to: TgCheckerApi.Job.QuartzJobFactory
2024-02-04 17:21:23.970 +03:00 [INF] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2024-02-04 17:21:24.058 +03:00 [INF] Now listening on: http://localhost:7256
2024-02-04 17:21:24.062 +03:00 [INF] Now listening on: http://localhost:5244
2024-02-04 17:21:24.066 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-04 17:21:24.067 +03:00 [INF] Hosting environment: Development
2024-02-04 17:21:24.068 +03:00 [INF] Content root path: C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\
2024-02-04 17:21:24.351 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 17:21:24.382 +03:00 [WRN] Failed to determine the https port for redirect.
2024-02-04 17:21:24.449 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 17:21:24.479 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 17:21:24.482 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 134.4367ms
2024-02-04 17:21:24.487 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=gZsSoCd8168beGMnPNKG7Q - -
2024-02-04 17:21:24.495 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 17:21:24.550 +03:00 [INF] Executed endpoint '/BotHub'
2024-02-04 17:21:24.554 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/BotHub?id=gZsSoCd8168beGMnPNKG7Q - - - 101 - - 67.2394ms
2024-02-04 17:21:24.688 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/index.html - -
2024-02-04 17:21:24.917 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/index.html - - - 200 - text/html;charset=utf-8 229.0378ms
2024-02-04 17:21:24.924 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_vs/browserLink - -
2024-02-04 17:21:24.928 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - -
2024-02-04 17:21:24.935 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - - - 200 12356 application/javascript;+charset=utf-8 6.9554ms
2024-02-04 17:21:24.946 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 21.4968ms
2024-02-04 17:21:25.009 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - -
2024-02-04 17:21:25.145 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 135.1030ms
2024-02-04 17:22:06.593 +03:00 [INF] User profile is available. Using 'C:\Users\timar\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-04 17:22:06.758 +03:00 [INF] Default Quartz.NET properties loaded from embedded resource file
2024-02-04 17:22:06.799 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-02-04 17:22:06.804 +03:00 [INF] Quartz Scheduler created
2024-02-04 17:22:06.805 +03:00 [INF] RAMJobStore initialized.
2024-02-04 17:22:06.806 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-02-04 17:22:06.806 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-02-04 17:22:06.807 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-02-04 17:22:06.809 +03:00 [INF] JobFactory set to: TgCheckerApi.Job.QuartzJobFactory
2024-02-04 17:22:06.854 +03:00 [INF] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2024-02-04 17:22:06.943 +03:00 [INF] Now listening on: http://localhost:7256
2024-02-04 17:22:06.945 +03:00 [INF] Now listening on: http://localhost:5244
2024-02-04 17:22:06.952 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-04 17:22:06.953 +03:00 [INF] Hosting environment: Development
2024-02-04 17:22:06.954 +03:00 [INF] Content root path: C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\
2024-02-04 17:22:06.984 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 17:22:07.016 +03:00 [WRN] Failed to determine the https port for redirect.
2024-02-04 17:22:07.114 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 17:22:07.148 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 17:22:07.154 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 172.9790ms
2024-02-04 17:22:07.156 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=C7yWLHPxvkNqwnjwmold9Q - -
2024-02-04 17:22:07.167 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 17:22:07.221 +03:00 [INF] Executed endpoint '/BotHub'
2024-02-04 17:22:07.228 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/BotHub?id=C7yWLHPxvkNqwnjwmold9Q - - - 101 - - 71.6235ms
2024-02-04 17:22:07.245 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/index.html - -
2024-02-04 17:22:07.467 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/index.html - - - 200 - text/html;charset=utf-8 221.9828ms
2024-02-04 17:22:07.473 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_vs/browserLink - -
2024-02-04 17:22:07.474 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - -
2024-02-04 17:22:07.482 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - - - 200 12356 application/javascript;+charset=utf-8 7.8251ms
2024-02-04 17:22:07.493 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 19.9938ms
2024-02-04 17:22:07.562 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - -
2024-02-04 17:22:07.621 +03:00 [ERR] An unhandled exception has occurred while executing the request.
Swashbuckle.AspNetCore.SwaggerGen.SwaggerGeneratorException: Ambiguous HTTP method for action - TgCheckerApi.Controllers.AuthController.UpdateUserProfileIfNeeded (TgCheckerApi). Actions require an explicit HttpMethod binding for Swagger/OpenAPI 3.0
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GenerateOperations(IEnumerable`1 apiDescriptions, SchemaRepository schemaRepository)
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GeneratePaths(IEnumerable`1 apiDescriptions, SchemaRepository schemaRepository)
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GetSwaggerDocumentWithoutFilters(String documentName, String host, String basePath)
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GetSwaggerAsync(String documentName, String host, String basePath)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2024-02-04 17:22:07.647 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - - - 500 - text/plain;+charset=utf-8 85.3815ms
2024-02-04 17:22:34.922 +03:00 [INF] User profile is available. Using 'C:\Users\timar\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-04 17:22:35.099 +03:00 [INF] Default Quartz.NET properties loaded from embedded resource file
2024-02-04 17:22:35.142 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-02-04 17:22:35.147 +03:00 [INF] Quartz Scheduler created
2024-02-04 17:22:35.148 +03:00 [INF] RAMJobStore initialized.
2024-02-04 17:22:35.149 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-02-04 17:22:35.150 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-02-04 17:22:35.151 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-02-04 17:22:35.152 +03:00 [INF] JobFactory set to: TgCheckerApi.Job.QuartzJobFactory
2024-02-04 17:22:35.195 +03:00 [INF] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2024-02-04 17:22:35.276 +03:00 [INF] Now listening on: http://localhost:7256
2024-02-04 17:22:35.278 +03:00 [INF] Now listening on: http://localhost:5244
2024-02-04 17:22:35.282 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-04 17:22:35.283 +03:00 [INF] Hosting environment: Development
2024-02-04 17:22:35.284 +03:00 [INF] Content root path: C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\
2024-02-04 17:22:35.749 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/index.html - -
2024-02-04 17:22:36.033 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/index.html - - - 200 - text/html;charset=utf-8 286.7196ms
2024-02-04 17:22:36.047 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_vs/browserLink - -
2024-02-04 17:22:36.048 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - -
2024-02-04 17:22:36.054 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - - - 200 12356 application/javascript;+charset=utf-8 5.9654ms
2024-02-04 17:22:36.063 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 16.0538ms
2024-02-04 17:22:36.134 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - -
2024-02-04 17:22:36.273 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 139.2422ms
2024-02-04 17:23:52.833 +03:00 [INF] User profile is available. Using 'C:\Users\timar\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-04 17:23:53.000 +03:00 [INF] Default Quartz.NET properties loaded from embedded resource file
2024-02-04 17:23:53.038 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-02-04 17:23:53.043 +03:00 [INF] Quartz Scheduler created
2024-02-04 17:23:53.044 +03:00 [INF] RAMJobStore initialized.
2024-02-04 17:23:53.045 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-02-04 17:23:53.045 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-02-04 17:23:53.047 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-02-04 17:23:53.049 +03:00 [INF] JobFactory set to: TgCheckerApi.Job.QuartzJobFactory
2024-02-04 17:23:53.090 +03:00 [INF] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2024-02-04 17:23:53.174 +03:00 [INF] Now listening on: http://localhost:7256
2024-02-04 17:23:53.175 +03:00 [INF] Now listening on: http://localhost:5244
2024-02-04 17:23:53.179 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-04 17:23:53.180 +03:00 [INF] Hosting environment: Development
2024-02-04 17:23:53.182 +03:00 [INF] Content root path: C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\
2024-02-04 17:23:53.570 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 17:23:53.610 +03:00 [WRN] Failed to determine the https port for redirect.
2024-02-04 17:23:53.634 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/index.html - -
2024-02-04 17:23:53.690 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 17:23:53.719 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 17:23:53.724 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=3UWcJZbpPUaacMQq6xJTuQ - -
2024-02-04 17:23:53.726 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 17:23:53.726 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 159.5635ms
2024-02-04 17:23:53.782 +03:00 [INF] Executed endpoint '/BotHub'
2024-02-04 17:23:53.786 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/BotHub?id=3UWcJZbpPUaacMQq6xJTuQ - - - 101 - - 62.4699ms
2024-02-04 17:23:53.905 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/index.html - - - 200 - text/html;charset=utf-8 270.7475ms
2024-02-04 17:23:53.911 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - -
2024-02-04 17:23:53.912 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_vs/browserLink - -
2024-02-04 17:23:53.916 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - - - 200 12356 application/javascript;+charset=utf-8 5.3835ms
2024-02-04 17:23:53.928 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 15.8070ms
2024-02-04 17:23:53.997 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - -
2024-02-04 17:23:54.070 +03:00 [ERR] An unhandled exception has occurred while executing the request.
Swashbuckle.AspNetCore.SwaggerGen.SwaggerGeneratorException: Ambiguous HTTP method for action - TgCheckerApi.Controllers.AuthController.UpdateUserProfileIfNeeded (TgCheckerApi). Actions require an explicit HttpMethod binding for Swagger/OpenAPI 3.0
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GenerateOperations(IEnumerable`1 apiDescriptions, SchemaRepository schemaRepository)
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GeneratePaths(IEnumerable`1 apiDescriptions, SchemaRepository schemaRepository)
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GetSwaggerDocumentWithoutFilters(String documentName, String host, String basePath)
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GetSwaggerAsync(String documentName, String host, String basePath)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2024-02-04 17:23:54.094 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - - - 500 - text/plain;+charset=utf-8 96.3219ms
2024-02-04 17:23:58.787 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 17:23:58.790 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 17:23:58.791 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 17:23:58.793 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 5.8936ms
2024-02-04 17:23:58.795 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=RxglAMd0DKEwsN-uHr5jdg - -
2024-02-04 17:23:58.797 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 17:23:58.801 +03:00 [INF] Executed endpoint '/BotHub'
2024-02-04 17:23:58.805 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/BotHub?id=RxglAMd0DKEwsN-uHr5jdg - - - 101 - - 10.3624ms
2024-02-04 17:24:03.304 +03:00 [INF] Start processing HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-04 17:24:03.315 +03:00 [INF] Sending HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-04 17:24:03.829 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 17:24:03.830 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 17:24:03.831 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 17:24:03.832 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 3.1995ms
2024-02-04 17:24:03.834 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=Y8nAfKG1t_AwR2zk1XpHVA - -
2024-02-04 17:24:03.835 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 17:24:03.842 +03:00 [INF] Executed endpoint '/BotHub'
2024-02-04 17:24:03.845 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/BotHub?id=Y8nAfKG1t_AwR2zk1XpHVA - - - 101 - - 11.2206ms
2024-02-04 17:24:04.130 +03:00 [INF] Received HTTP response headers after 808.0327ms - 200
2024-02-04 17:24:04.136 +03:00 [INF] End processing HTTP request after 838.4611ms - 200
2024-02-04 17:24:04.141 +03:00 [INF] Successfully processed all channels via HTTP request at: {DateTime.UtcNow}
2024-02-04 17:24:08.865 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 17:24:08.866 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 17:24:08.867 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 17:24:08.868 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 3.0952ms
2024-02-04 17:24:08.869 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=YHdOhVP_H-752o4nImjuOQ - -
2024-02-04 17:24:08.870 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 17:24:08.886 +03:00 [INF] Executed endpoint '/BotHub'
2024-02-04 17:24:08.892 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/BotHub?id=YHdOhVP_H-752o4nImjuOQ - - - 101 - - 22.3906ms
2024-02-04 17:24:13.918 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 17:24:13.919 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 17:24:13.920 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 17:24:13.923 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=N2Reqf1PPjSCWTf0rMU4rw - -
2024-02-04 17:24:13.923 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 4.9229ms
2024-02-04 17:24:13.925 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 17:24:13.933 +03:00 [INF] Executed endpoint '/BotHub'
2024-02-04 17:24:13.934 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/BotHub?id=N2Reqf1PPjSCWTf0rMU4rw - - - 101 - - 10.6518ms
2024-02-04 17:24:18.950 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 17:24:18.952 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 17:24:18.953 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 17:24:18.955 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 4.4353ms
2024-02-04 17:24:18.956 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=GAlXpzCVoRJZ3STsRGp9yw - -
2024-02-04 17:24:18.959 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 17:24:18.964 +03:00 [INF] Executed endpoint '/BotHub'
2024-02-04 17:24:18.967 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/BotHub?id=GAlXpzCVoRJZ3STsRGp9yw - - - 101 - - 10.6617ms
2024-02-04 17:24:23.961 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 17:24:23.962 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 17:24:23.963 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 17:24:23.964 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 3.3700ms
2024-02-04 17:24:23.966 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=FE0Jk8O7ROJ3huhwDYvjxQ - -
2024-02-04 17:24:23.967 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 17:24:23.970 +03:00 [INF] Executed endpoint '/BotHub'
2024-02-04 17:24:23.971 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/BotHub?id=FE0Jk8O7ROJ3huhwDYvjxQ - - - 101 - - 5.4605ms
2024-02-04 17:24:28.985 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 17:24:28.987 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 17:24:28.989 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 17:24:28.990 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 4.9525ms
2024-02-04 17:24:28.991 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=r3IbgUjdoMZPG2dBUvDlgw - -
2024-02-04 17:24:28.993 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 17:24:28.996 +03:00 [INF] Executed endpoint '/BotHub'
2024-02-04 17:24:28.997 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/BotHub?id=r3IbgUjdoMZPG2dBUvDlgw - - - 101 - - 6.1530ms
2024-02-04 17:25:48.256 +03:00 [INF] User profile is available. Using 'C:\Users\timar\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-04 17:25:48.414 +03:00 [INF] Default Quartz.NET properties loaded from embedded resource file
2024-02-04 17:25:48.455 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-02-04 17:25:48.459 +03:00 [INF] Quartz Scheduler created
2024-02-04 17:25:48.460 +03:00 [INF] RAMJobStore initialized.
2024-02-04 17:25:48.461 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-02-04 17:25:48.462 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-02-04 17:25:48.462 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-02-04 17:25:48.463 +03:00 [INF] JobFactory set to: TgCheckerApi.Job.QuartzJobFactory
2024-02-04 17:25:48.504 +03:00 [INF] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2024-02-04 17:25:48.599 +03:00 [INF] Now listening on: http://localhost:7256
2024-02-04 17:25:48.600 +03:00 [INF] Now listening on: http://localhost:5244
2024-02-04 17:25:48.603 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-04 17:25:48.604 +03:00 [INF] Hosting environment: Development
2024-02-04 17:25:48.605 +03:00 [INF] Content root path: C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\
2024-02-04 17:25:48.797 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 17:25:48.835 +03:00 [WRN] Failed to determine the https port for redirect.
2024-02-04 17:25:48.914 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 17:25:48.946 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 17:25:48.950 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 159.0599ms
2024-02-04 17:25:48.953 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=9nGUfjr182VOWKlrfCkOqQ - -
2024-02-04 17:25:48.962 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 17:25:49.011 +03:00 [INF] Executed endpoint '/BotHub'
2024-02-04 17:25:49.015 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/BotHub?id=9nGUfjr182VOWKlrfCkOqQ - - - 101 - - 61.2021ms
2024-02-04 17:25:49.359 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/index.html - -
2024-02-04 17:25:49.585 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/index.html - - - 200 - text/html;charset=utf-8 225.7481ms
2024-02-04 17:25:49.592 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_vs/browserLink - -
2024-02-04 17:25:49.593 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - -
2024-02-04 17:25:49.599 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - - - 200 12356 application/javascript;+charset=utf-8 6.4268ms
2024-02-04 17:25:49.612 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 20.6182ms
2024-02-04 17:25:49.682 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - -
2024-02-04 17:25:49.747 +03:00 [ERR] An unhandled exception has occurred while executing the request.
Swashbuckle.AspNetCore.SwaggerGen.SwaggerGeneratorException: Ambiguous HTTP method for action - TgCheckerApi.Controllers.AuthController.UpdateUserProfileIfNeeded (TgCheckerApi). Actions require an explicit HttpMethod binding for Swagger/OpenAPI 3.0
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GenerateOperations(IEnumerable`1 apiDescriptions, SchemaRepository schemaRepository)
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GeneratePaths(IEnumerable`1 apiDescriptions, SchemaRepository schemaRepository)
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GetSwaggerDocumentWithoutFilters(String documentName, String host, String basePath)
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GetSwaggerAsync(String documentName, String host, String basePath)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2024-02-04 17:25:49.779 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - - - 500 - text/plain;+charset=utf-8 96.5575ms
2024-02-04 17:26:14.374 +03:00 [INF] User profile is available. Using 'C:\Users\timar\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-04 17:26:14.530 +03:00 [INF] Default Quartz.NET properties loaded from embedded resource file
2024-02-04 17:26:14.569 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-02-04 17:26:14.608 +03:00 [INF] Quartz Scheduler created
2024-02-04 17:26:14.610 +03:00 [INF] RAMJobStore initialized.
2024-02-04 17:26:14.612 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-02-04 17:26:14.612 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-02-04 17:26:14.613 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-02-04 17:26:14.622 +03:00 [INF] JobFactory set to: TgCheckerApi.Job.QuartzJobFactory
2024-02-04 17:26:14.666 +03:00 [INF] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2024-02-04 17:26:14.812 +03:00 [INF] Now listening on: http://localhost:7256
2024-02-04 17:26:14.813 +03:00 [INF] Now listening on: http://localhost:5244
2024-02-04 17:26:14.852 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-04 17:26:14.853 +03:00 [INF] Hosting environment: Development
2024-02-04 17:26:14.854 +03:00 [INF] Content root path: C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\
2024-02-04 17:26:14.887 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 17:26:14.920 +03:00 [WRN] Failed to determine the https port for redirect.
2024-02-04 17:26:14.998 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 17:26:15.030 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 17:26:15.033 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 148.7081ms
2024-02-04 17:26:15.039 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=srSuvYPi5v703PV4u-lwhQ - -
2024-02-04 17:26:15.047 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 17:26:15.096 +03:00 [INF] Executed endpoint '/BotHub'
2024-02-04 17:26:15.099 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/BotHub?id=srSuvYPi5v703PV4u-lwhQ - - - 101 - - 60.6504ms
2024-02-04 17:26:15.398 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/index.html - -
2024-02-04 17:26:15.764 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/index.html - - - 200 - text/html;charset=utf-8 366.2955ms
2024-02-04 17:26:15.770 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - -
2024-02-04 17:26:15.772 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_vs/browserLink - -
2024-02-04 17:26:15.774 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - - - 200 12356 application/javascript;+charset=utf-8 3.2470ms
2024-02-04 17:26:15.784 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 12.3562ms
2024-02-04 17:26:15.857 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - -
2024-02-04 17:26:15.918 +03:00 [ERR] An unhandled exception has occurred while executing the request.
Swashbuckle.AspNetCore.SwaggerGen.SwaggerGeneratorException: Ambiguous HTTP method for action - TgCheckerApi.Controllers.AuthController.UpdateUserProfileIfNeeded (TgCheckerApi). Actions require an explicit HttpMethod binding for Swagger/OpenAPI 3.0
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GenerateOperations(IEnumerable`1 apiDescriptions, SchemaRepository schemaRepository)
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GeneratePaths(IEnumerable`1 apiDescriptions, SchemaRepository schemaRepository)
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GetSwaggerDocumentWithoutFilters(String documentName, String host, String basePath)
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GetSwaggerAsync(String documentName, String host, String basePath)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2024-02-04 17:26:15.948 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - - - 500 - text/plain;+charset=utf-8 91.0886ms
2024-02-04 17:26:29.799 +03:00 [INF] User profile is available. Using 'C:\Users\timar\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-04 17:26:29.989 +03:00 [INF] Default Quartz.NET properties loaded from embedded resource file
2024-02-04 17:26:30.028 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-02-04 17:26:30.032 +03:00 [INF] Quartz Scheduler created
2024-02-04 17:26:30.033 +03:00 [INF] RAMJobStore initialized.
2024-02-04 17:26:30.034 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-02-04 17:26:30.035 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-02-04 17:26:30.036 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-02-04 17:26:30.037 +03:00 [INF] JobFactory set to: TgCheckerApi.Job.QuartzJobFactory
2024-02-04 17:26:30.081 +03:00 [INF] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2024-02-04 17:26:30.161 +03:00 [INF] Now listening on: http://localhost:7256
2024-02-04 17:26:30.162 +03:00 [INF] Now listening on: http://localhost:5244
2024-02-04 17:26:30.166 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-04 17:26:30.167 +03:00 [INF] Hosting environment: Development
2024-02-04 17:26:30.167 +03:00 [INF] Content root path: C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\
2024-02-04 17:26:30.216 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 17:26:30.246 +03:00 [WRN] Failed to determine the https port for redirect.
2024-02-04 17:26:30.315 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 17:26:30.344 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 17:26:30.349 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 136.4103ms
2024-02-04 17:26:30.351 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=UKf_4ukq06afNVKRle3xSQ - -
2024-02-04 17:26:30.358 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 17:26:30.403 +03:00 [INF] Executed endpoint '/BotHub'
2024-02-04 17:26:30.407 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/BotHub?id=UKf_4ukq06afNVKRle3xSQ - - - 101 - - 55.6871ms
2024-02-04 17:26:30.804 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/index.html - -
2024-02-04 17:26:31.029 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/index.html - - - 200 - text/html;charset=utf-8 225.2296ms
2024-02-04 17:26:31.035 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_vs/browserLink - -
2024-02-04 17:26:31.037 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - -
2024-02-04 17:26:31.045 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - - - 200 12356 application/javascript;+charset=utf-8 8.3634ms
2024-02-04 17:26:31.051 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 15.4868ms
2024-02-04 17:26:31.123 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - -
2024-02-04 17:26:31.189 +03:00 [ERR] An unhandled exception has occurred while executing the request.
Swashbuckle.AspNetCore.SwaggerGen.SwaggerGeneratorException: Ambiguous HTTP method for action - TgCheckerApi.Controllers.AuthController.UpdateUserProfileIfNeeded (TgCheckerApi). Actions require an explicit HttpMethod binding for Swagger/OpenAPI 3.0
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GenerateOperations(IEnumerable`1 apiDescriptions, SchemaRepository schemaRepository)
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GeneratePaths(IEnumerable`1 apiDescriptions, SchemaRepository schemaRepository)
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GetSwaggerDocumentWithoutFilters(String documentName, String host, String basePath)
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GetSwaggerAsync(String documentName, String host, String basePath)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2024-02-04 17:26:31.219 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - - - 500 - text/plain;+charset=utf-8 96.6526ms
2024-02-04 17:27:00.426 +03:00 [INF] User profile is available. Using 'C:\Users\timar\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-04 17:27:00.595 +03:00 [INF] Default Quartz.NET properties loaded from embedded resource file
2024-02-04 17:27:00.642 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-02-04 17:27:00.646 +03:00 [INF] Quartz Scheduler created
2024-02-04 17:27:00.647 +03:00 [INF] RAMJobStore initialized.
2024-02-04 17:27:00.648 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-02-04 17:27:00.650 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-02-04 17:27:00.650 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-02-04 17:27:00.652 +03:00 [INF] JobFactory set to: TgCheckerApi.Job.QuartzJobFactory
2024-02-04 17:27:00.699 +03:00 [INF] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2024-02-04 17:27:00.778 +03:00 [INF] Now listening on: http://localhost:7256
2024-02-04 17:27:00.779 +03:00 [INF] Now listening on: http://localhost:5244
2024-02-04 17:27:00.782 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-04 17:27:00.783 +03:00 [INF] Hosting environment: Development
2024-02-04 17:27:00.784 +03:00 [INF] Content root path: C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\
2024-02-04 17:27:01.398 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/index.html - -
2024-02-04 17:27:01.667 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/index.html - - - 200 - text/html;charset=utf-8 271.7374ms
2024-02-04 17:27:01.671 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_vs/browserLink - -
2024-02-04 17:27:01.677 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - -
2024-02-04 17:27:01.683 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - - - 200 12356 application/javascript;+charset=utf-8 6.4864ms
2024-02-04 17:27:01.693 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 22.4034ms
2024-02-04 17:27:01.762 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - -
2024-02-04 17:27:01.832 +03:00 [ERR] An unhandled exception has occurred while executing the request.
Swashbuckle.AspNetCore.SwaggerGen.SwaggerGeneratorException: Ambiguous HTTP method for action - TgCheckerApi.Controllers.AuthController.UpdateUserProfileIfNeeded (TgCheckerApi). Actions require an explicit HttpMethod binding for Swagger/OpenAPI 3.0
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GenerateOperations(IEnumerable`1 apiDescriptions, SchemaRepository schemaRepository)
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GeneratePaths(IEnumerable`1 apiDescriptions, SchemaRepository schemaRepository)
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GetSwaggerDocumentWithoutFilters(String documentName, String host, String basePath)
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GetSwaggerAsync(String documentName, String host, String basePath)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2024-02-04 17:27:01.858 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - - - 500 - text/plain;+charset=utf-8 95.3131ms
2024-02-04 17:27:02.655 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 17:27:02.658 +03:00 [WRN] Failed to determine the https port for redirect.
2024-02-04 17:27:02.735 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 17:27:02.750 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 17:27:02.751 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 95.4981ms
2024-02-04 17:27:02.754 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=9oZWDJTgYJGyl9y3IaHD8Q - -
2024-02-04 17:27:02.756 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 17:27:02.801 +03:00 [INF] Executed endpoint '/BotHub'
2024-02-04 17:27:02.803 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/BotHub?id=9oZWDJTgYJGyl9y3IaHD8Q - - - 101 - - 49.4983ms
2024-02-04 17:27:28.941 +03:00 [INF] User profile is available. Using 'C:\Users\timar\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-04 17:27:29.101 +03:00 [INF] Default Quartz.NET properties loaded from embedded resource file
2024-02-04 17:27:29.141 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-02-04 17:27:29.147 +03:00 [INF] Quartz Scheduler created
2024-02-04 17:27:29.148 +03:00 [INF] RAMJobStore initialized.
2024-02-04 17:27:29.149 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-02-04 17:27:29.150 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-02-04 17:27:29.151 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-02-04 17:27:29.152 +03:00 [INF] JobFactory set to: TgCheckerApi.Job.QuartzJobFactory
2024-02-04 17:27:29.193 +03:00 [INF] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2024-02-04 17:27:29.269 +03:00 [INF] Now listening on: http://localhost:7256
2024-02-04 17:27:29.271 +03:00 [INF] Now listening on: http://localhost:5244
2024-02-04 17:27:29.274 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-04 17:27:29.275 +03:00 [INF] Hosting environment: Development
2024-02-04 17:27:29.276 +03:00 [INF] Content root path: C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\
2024-02-04 17:27:29.563 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 17:27:29.598 +03:00 [WRN] Failed to determine the https port for redirect.
2024-02-04 17:27:29.671 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 17:27:29.702 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 17:27:29.705 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 145.6933ms
2024-02-04 17:27:29.711 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=znfjPqXpmuA_xMg5tae7dQ - -
2024-02-04 17:27:29.720 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 17:27:29.788 +03:00 [INF] Executed endpoint '/BotHub'
2024-02-04 17:27:29.791 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/BotHub?id=znfjPqXpmuA_xMg5tae7dQ - - - 101 - - 79.7336ms
2024-02-04 17:27:29.886 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/index.html - -
2024-02-04 17:27:30.124 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/index.html - - - 200 - text/html;charset=utf-8 237.8000ms
2024-02-04 17:27:30.130 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_vs/browserLink - -
2024-02-04 17:27:30.132 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - -
2024-02-04 17:27:30.138 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - - - 200 12356 application/javascript;+charset=utf-8 6.3774ms
2024-02-04 17:27:30.143 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 13.5400ms
2024-02-04 17:27:30.215 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - -
2024-02-04 17:27:30.281 +03:00 [ERR] An unhandled exception has occurred while executing the request.
Swashbuckle.AspNetCore.SwaggerGen.SwaggerGeneratorException: Ambiguous HTTP method for action - TgCheckerApi.Controllers.AuthController.UpdateUserProfileIfNeeded (TgCheckerApi). Actions require an explicit HttpMethod binding for Swagger/OpenAPI 3.0
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GenerateOperations(IEnumerable`1 apiDescriptions, SchemaRepository schemaRepository)
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GeneratePaths(IEnumerable`1 apiDescriptions, SchemaRepository schemaRepository)
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GetSwaggerDocumentWithoutFilters(String documentName, String host, String basePath)
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GetSwaggerAsync(String documentName, String host, String basePath)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2024-02-04 17:27:30.306 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - - - 500 - text/plain;+charset=utf-8 90.4685ms
2024-02-04 17:27:48.526 +03:00 [INF] User profile is available. Using 'C:\Users\timar\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-04 17:27:48.683 +03:00 [INF] Default Quartz.NET properties loaded from embedded resource file
2024-02-04 17:27:48.723 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-02-04 17:27:48.727 +03:00 [INF] Quartz Scheduler created
2024-02-04 17:27:48.728 +03:00 [INF] RAMJobStore initialized.
2024-02-04 17:27:48.728 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-02-04 17:27:48.729 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-02-04 17:27:48.730 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-02-04 17:27:48.731 +03:00 [INF] JobFactory set to: TgCheckerApi.Job.QuartzJobFactory
2024-02-04 17:27:48.774 +03:00 [INF] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2024-02-04 17:27:48.848 +03:00 [INF] Now listening on: http://localhost:7256
2024-02-04 17:27:48.850 +03:00 [INF] Now listening on: http://localhost:5244
2024-02-04 17:27:48.854 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-04 17:27:48.855 +03:00 [INF] Hosting environment: Development
2024-02-04 17:27:48.856 +03:00 [INF] Content root path: C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\
2024-02-04 17:27:49.188 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/index.html - -
2024-02-04 17:27:49.469 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/index.html - - - 200 - text/html;charset=utf-8 285.4079ms
2024-02-04 17:27:49.471 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_vs/browserLink - -
2024-02-04 17:27:49.479 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - -
2024-02-04 17:27:49.485 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - - - 200 12356 application/javascript;+charset=utf-8 6.1162ms
2024-02-04 17:27:49.496 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 24.2659ms
2024-02-04 17:27:49.557 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - -
2024-02-04 17:27:49.688 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 131.1102ms
2024-02-04 17:28:19.880 +03:00 [INF] User profile is available. Using 'C:\Users\timar\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-04 17:28:20.046 +03:00 [INF] Default Quartz.NET properties loaded from embedded resource file
2024-02-04 17:28:20.086 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-02-04 17:28:20.090 +03:00 [INF] Quartz Scheduler created
2024-02-04 17:28:20.092 +03:00 [INF] RAMJobStore initialized.
2024-02-04 17:28:20.093 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-02-04 17:28:20.094 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-02-04 17:28:20.094 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-02-04 17:28:20.096 +03:00 [INF] JobFactory set to: TgCheckerApi.Job.QuartzJobFactory
2024-02-04 17:28:20.139 +03:00 [INF] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2024-02-04 17:28:20.223 +03:00 [INF] Now listening on: http://localhost:7256
2024-02-04 17:28:20.225 +03:00 [INF] Now listening on: http://localhost:5244
2024-02-04 17:28:20.229 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-04 17:28:20.230 +03:00 [INF] Hosting environment: Development
2024-02-04 17:28:20.230 +03:00 [INF] Content root path: C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\
2024-02-04 17:28:20.492 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/index.html - -
2024-02-04 17:28:20.651 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 17:28:20.656 +03:00 [WRN] Failed to determine the https port for redirect.
2024-02-04 17:28:20.828 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 17:28:20.855 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 17:28:20.862 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=_CNVmJ1RbJCh3aaH77dyeA - -
2024-02-04 17:28:20.864 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 208.4528ms
2024-02-04 17:28:20.866 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 17:28:20.904 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/index.html - - - 200 - text/html;charset=utf-8 415.8987ms
2024-02-04 17:28:20.915 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_vs/browserLink - -
2024-02-04 17:28:20.922 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - -
2024-02-04 17:28:20.932 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - - - 200 12356 application/javascript;+charset=utf-8 10.6910ms
2024-02-04 17:28:20.936 +03:00 [INF] Executed endpoint '/BotHub'
2024-02-04 17:28:20.938 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/BotHub?id=_CNVmJ1RbJCh3aaH77dyeA - - - 101 - - 77.9214ms
2024-02-04 17:28:20.939 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 23.4165ms
2024-02-04 17:28:21.004 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - -
2024-02-04 17:28:21.138 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 134.6011ms
2024-02-04 17:28:52.981 +03:00 [INF] User profile is available. Using 'C:\Users\timar\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-04 17:28:53.140 +03:00 [INF] Default Quartz.NET properties loaded from embedded resource file
2024-02-04 17:28:53.186 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-02-04 17:28:53.190 +03:00 [INF] Quartz Scheduler created
2024-02-04 17:28:53.191 +03:00 [INF] RAMJobStore initialized.
2024-02-04 17:28:53.192 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-02-04 17:28:53.193 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-02-04 17:28:53.193 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-02-04 17:28:53.195 +03:00 [INF] JobFactory set to: TgCheckerApi.Job.QuartzJobFactory
2024-02-04 17:28:53.237 +03:00 [INF] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2024-02-04 17:28:53.338 +03:00 [INF] Now listening on: http://localhost:7256
2024-02-04 17:28:53.339 +03:00 [INF] Now listening on: http://localhost:5244
2024-02-04 17:28:53.342 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-04 17:28:53.343 +03:00 [INF] Hosting environment: Development
2024-02-04 17:28:53.344 +03:00 [INF] Content root path: C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\
2024-02-04 17:28:53.582 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/index.html - -
2024-02-04 17:28:53.690 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 17:28:53.695 +03:00 [WRN] Failed to determine the https port for redirect.
2024-02-04 17:28:53.774 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 17:28:53.802 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 17:28:53.806 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=0iEzd1qW97v2MZYZnrOw1w - -
2024-02-04 17:28:53.806 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 115.0448ms
2024-02-04 17:28:53.808 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 17:28:53.873 +03:00 [INF] Executed endpoint '/BotHub'
2024-02-04 17:28:53.877 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/BotHub?id=0iEzd1qW97v2MZYZnrOw1w - - - 101 - - 71.3997ms
2024-02-04 17:28:53.899 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/index.html - - - 200 - text/html;charset=utf-8 321.5144ms
2024-02-04 17:28:53.910 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_vs/browserLink - -
2024-02-04 17:28:53.912 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - -
2024-02-04 17:28:53.922 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - - - 200 12356 application/javascript;+charset=utf-8 9.7218ms
2024-02-04 17:28:53.934 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 23.6305ms
2024-02-04 17:28:53.998 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - -
2024-02-04 17:28:54.136 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 137.6724ms
2024-02-04 17:29:40.092 +03:00 [INF] User profile is available. Using 'C:\Users\timar\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-04 17:29:40.254 +03:00 [INF] Default Quartz.NET properties loaded from embedded resource file
2024-02-04 17:29:40.293 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-02-04 17:29:40.298 +03:00 [INF] Quartz Scheduler created
2024-02-04 17:29:40.299 +03:00 [INF] RAMJobStore initialized.
2024-02-04 17:29:40.300 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-02-04 17:29:40.301 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-02-04 17:29:40.302 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-02-04 17:29:40.304 +03:00 [INF] JobFactory set to: TgCheckerApi.Job.QuartzJobFactory
2024-02-04 17:29:40.345 +03:00 [INF] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2024-02-04 17:29:40.420 +03:00 [INF] Now listening on: http://localhost:7256
2024-02-04 17:29:40.421 +03:00 [INF] Now listening on: http://localhost:5244
2024-02-04 17:29:40.425 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-04 17:29:40.426 +03:00 [INF] Hosting environment: Development
2024-02-04 17:29:40.427 +03:00 [INF] Content root path: C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\
2024-02-04 17:29:40.746 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/index.html - -
2024-02-04 17:29:41.033 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - -
2024-02-04 17:29:41.036 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/index.html - - - 200 - text/html;charset=utf-8 291.6087ms
2024-02-04 17:29:41.040 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - - - 200 12356 application/javascript;+charset=utf-8 6.9240ms
2024-02-04 17:29:41.048 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_vs/browserLink - -
2024-02-04 17:29:41.062 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 13.8964ms
2024-02-04 17:29:41.129 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - -
2024-02-04 17:29:41.198 +03:00 [ERR] An unhandled exception has occurred while executing the request.
Swashbuckle.AspNetCore.SwaggerGen.SwaggerGeneratorException: Ambiguous HTTP method for action - TgCheckerApi.Controllers.AuthController.UpdateUserProfileIfNeeded (TgCheckerApi). Actions require an explicit HttpMethod binding for Swagger/OpenAPI 3.0
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GenerateOperations(IEnumerable`1 apiDescriptions, SchemaRepository schemaRepository)
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GeneratePaths(IEnumerable`1 apiDescriptions, SchemaRepository schemaRepository)
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GetSwaggerDocumentWithoutFilters(String documentName, String host, String basePath)
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GetSwaggerAsync(String documentName, String host, String basePath)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2024-02-04 17:29:41.222 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - - - 500 - text/plain;+charset=utf-8 92.9500ms
2024-02-04 17:30:38.955 +03:00 [INF] User profile is available. Using 'C:\Users\timar\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-04 17:30:39.123 +03:00 [INF] Default Quartz.NET properties loaded from embedded resource file
2024-02-04 17:30:39.162 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-02-04 17:30:39.167 +03:00 [INF] Quartz Scheduler created
2024-02-04 17:30:39.168 +03:00 [INF] RAMJobStore initialized.
2024-02-04 17:30:39.169 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-02-04 17:30:39.170 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-02-04 17:30:39.170 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-02-04 17:30:39.172 +03:00 [INF] JobFactory set to: TgCheckerApi.Job.QuartzJobFactory
2024-02-04 17:30:39.216 +03:00 [INF] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2024-02-04 17:30:39.293 +03:00 [INF] Now listening on: http://localhost:7256
2024-02-04 17:30:39.294 +03:00 [INF] Now listening on: http://localhost:5244
2024-02-04 17:30:39.298 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-04 17:30:39.300 +03:00 [INF] Hosting environment: Development
2024-02-04 17:30:39.300 +03:00 [INF] Content root path: C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\
2024-02-04 17:30:39.700 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/index.html - -
2024-02-04 17:30:39.723 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 17:30:39.740 +03:00 [WRN] Failed to determine the https port for redirect.
2024-02-04 17:30:39.813 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 17:30:39.841 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 17:30:39.845 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=U4dibRBBooukaQVbFaSwWQ - -
2024-02-04 17:30:39.847 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 17:30:39.848 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 123.3623ms
2024-02-04 17:30:39.901 +03:00 [INF] Executed endpoint '/BotHub'
2024-02-04 17:30:39.905 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/BotHub?id=U4dibRBBooukaQVbFaSwWQ - - - 101 - - 60.0242ms
2024-02-04 17:30:39.991 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/index.html - - - 200 - text/html;charset=utf-8 294.2198ms
2024-02-04 17:30:39.997 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_vs/browserLink - -
2024-02-04 17:30:40.000 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - -
2024-02-04 17:30:40.006 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - - - 200 12356 application/javascript;+charset=utf-8 6.0168ms
2024-02-04 17:30:40.019 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 22.0910ms
2024-02-04 17:30:40.091 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - -
2024-02-04 17:30:40.155 +03:00 [ERR] An unhandled exception has occurred while executing the request.
Swashbuckle.AspNetCore.SwaggerGen.SwaggerGeneratorException: Ambiguous HTTP method for action - TgCheckerApi.Controllers.AuthController.UpdateUserProfileIf (TgCheckerApi). Actions require an explicit HttpMethod binding for Swagger/OpenAPI 3.0
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GenerateOperations(IEnumerable`1 apiDescriptions, SchemaRepository schemaRepository)
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GeneratePaths(IEnumerable`1 apiDescriptions, SchemaRepository schemaRepository)
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GetSwaggerDocumentWithoutFilters(String documentName, String host, String basePath)
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GetSwaggerAsync(String documentName, String host, String basePath)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2024-02-04 17:30:40.180 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - - - 500 - text/plain;+charset=utf-8 89.6129ms
2024-02-04 17:31:02.611 +03:00 [INF] User profile is available. Using 'C:\Users\timar\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-04 17:31:02.765 +03:00 [INF] Default Quartz.NET properties loaded from embedded resource file
2024-02-04 17:31:02.806 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-02-04 17:31:02.812 +03:00 [INF] Quartz Scheduler created
2024-02-04 17:31:02.813 +03:00 [INF] RAMJobStore initialized.
2024-02-04 17:31:02.814 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-02-04 17:31:02.815 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-02-04 17:31:02.816 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-02-04 17:31:02.817 +03:00 [INF] JobFactory set to: TgCheckerApi.Job.QuartzJobFactory
2024-02-04 17:31:02.860 +03:00 [INF] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2024-02-04 17:31:02.943 +03:00 [INF] Now listening on: http://localhost:7256
2024-02-04 17:31:02.946 +03:00 [INF] Now listening on: http://localhost:5244
2024-02-04 17:31:02.949 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-04 17:31:02.950 +03:00 [INF] Hosting environment: Development
2024-02-04 17:31:02.951 +03:00 [INF] Content root path: C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\
2024-02-04 17:31:03.027 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 17:31:03.056 +03:00 [WRN] Failed to determine the https port for redirect.
2024-02-04 17:31:03.126 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 17:31:03.156 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 17:31:03.160 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 135.1550ms
2024-02-04 17:31:03.166 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=AidBDaFyQn-sMQvjivyFzQ - -
2024-02-04 17:31:03.173 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 17:31:03.232 +03:00 [INF] Executed endpoint '/BotHub'
2024-02-04 17:31:03.236 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/BotHub?id=AidBDaFyQn-sMQvjivyFzQ - - - 101 - - 70.2977ms
2024-02-04 17:31:03.317 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/index.html - -
2024-02-04 17:31:03.559 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/index.html - - - 200 - text/html;charset=utf-8 241.4863ms
2024-02-04 17:31:03.564 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_vs/browserLink - -
2024-02-04 17:31:03.565 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - -
2024-02-04 17:31:03.570 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - - - 200 12356 application/javascript;+charset=utf-8 4.2218ms
2024-02-04 17:31:03.587 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 22.6793ms
2024-02-04 17:31:03.651 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - -
2024-02-04 17:31:03.711 +03:00 [ERR] An unhandled exception has occurred while executing the request.
Swashbuckle.AspNetCore.SwaggerGen.SwaggerGeneratorException: Ambiguous HTTP method for action - TgCheckerApi.Controllers.AuthController.UpdateUserProfileIf (TgCheckerApi). Actions require an explicit HttpMethod binding for Swagger/OpenAPI 3.0
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GenerateOperations(IEnumerable`1 apiDescriptions, SchemaRepository schemaRepository)
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GeneratePaths(IEnumerable`1 apiDescriptions, SchemaRepository schemaRepository)
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GetSwaggerDocumentWithoutFilters(String documentName, String host, String basePath)
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GetSwaggerAsync(String documentName, String host, String basePath)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2024-02-04 17:31:03.735 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - - - 500 - text/plain;+charset=utf-8 84.1155ms
2024-02-04 17:31:12.591 +03:00 [INF] User profile is available. Using 'C:\Users\timar\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-04 17:31:12.758 +03:00 [INF] Default Quartz.NET properties loaded from embedded resource file
2024-02-04 17:31:12.797 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-02-04 17:31:12.804 +03:00 [INF] Quartz Scheduler created
2024-02-04 17:31:12.805 +03:00 [INF] RAMJobStore initialized.
2024-02-04 17:31:12.806 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-02-04 17:31:12.807 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-02-04 17:31:12.807 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-02-04 17:31:12.809 +03:00 [INF] JobFactory set to: TgCheckerApi.Job.QuartzJobFactory
2024-02-04 17:31:12.852 +03:00 [INF] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2024-02-04 17:31:12.937 +03:00 [INF] Now listening on: http://localhost:7256
2024-02-04 17:31:12.938 +03:00 [INF] Now listening on: http://localhost:5244
2024-02-04 17:31:12.942 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-04 17:31:12.943 +03:00 [INF] Hosting environment: Development
2024-02-04 17:31:12.944 +03:00 [INF] Content root path: C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\
2024-02-04 17:31:13.306 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/index.html - -
2024-02-04 17:31:13.584 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/index.html - - - 200 - text/html;charset=utf-8 280.0448ms
2024-02-04 17:31:13.588 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_vs/browserLink - -
2024-02-04 17:31:13.594 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - -
2024-02-04 17:31:13.600 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - - - 200 12356 application/javascript;+charset=utf-8 5.9309ms
2024-02-04 17:31:13.610 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 21.8456ms
2024-02-04 17:31:13.673 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - -
2024-02-04 17:31:13.739 +03:00 [ERR] An unhandled exception has occurred while executing the request.
Swashbuckle.AspNetCore.SwaggerGen.SwaggerGeneratorException: Ambiguous HTTP method for action - TgCheckerApi.Controllers.AuthController.UpdateUserProfileIf (TgCheckerApi). Actions require an explicit HttpMethod binding for Swagger/OpenAPI 3.0
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GenerateOperations(IEnumerable`1 apiDescriptions, SchemaRepository schemaRepository)
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GeneratePaths(IEnumerable`1 apiDescriptions, SchemaRepository schemaRepository)
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GetSwaggerDocumentWithoutFilters(String documentName, String host, String basePath)
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GetSwaggerAsync(String documentName, String host, String basePath)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2024-02-04 17:31:13.763 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - - - 500 - text/plain;+charset=utf-8 89.6581ms
2024-02-04 17:31:27.677 +03:00 [INF] User profile is available. Using 'C:\Users\timar\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-04 17:31:27.827 +03:00 [INF] Default Quartz.NET properties loaded from embedded resource file
2024-02-04 17:31:27.870 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-02-04 17:31:27.874 +03:00 [INF] Quartz Scheduler created
2024-02-04 17:31:27.875 +03:00 [INF] RAMJobStore initialized.
2024-02-04 17:31:27.876 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-02-04 17:31:27.877 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-02-04 17:31:27.878 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-02-04 17:31:27.880 +03:00 [INF] JobFactory set to: TgCheckerApi.Job.QuartzJobFactory
2024-02-04 17:31:27.923 +03:00 [INF] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2024-02-04 17:31:28.018 +03:00 [INF] Now listening on: http://localhost:7256
2024-02-04 17:31:28.019 +03:00 [INF] Now listening on: http://localhost:5244
2024-02-04 17:31:28.023 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-04 17:31:28.023 +03:00 [INF] Hosting environment: Development
2024-02-04 17:31:28.024 +03:00 [INF] Content root path: C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\
2024-02-04 17:31:28.253 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/index.html - -
2024-02-04 17:31:28.462 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 17:31:28.468 +03:00 [WRN] Failed to determine the https port for redirect.
2024-02-04 17:31:28.549 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/index.html - - - 200 - text/html;charset=utf-8 298.7204ms
2024-02-04 17:31:28.551 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 17:31:28.553 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_vs/browserLink - -
2024-02-04 17:31:28.560 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - -
2024-02-04 17:31:28.567 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - - - 200 12356 application/javascript;+charset=utf-8 7.3294ms
2024-02-04 17:31:28.573 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 20.7486ms
2024-02-04 17:31:28.576 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 17:31:28.580 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 118.6303ms
2024-02-04 17:31:28.584 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=iCs11ZvYejUUEbq0QJT7pQ - -
2024-02-04 17:31:28.587 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 17:31:28.641 +03:00 [INF] Executed endpoint '/BotHub'
2024-02-04 17:31:28.643 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/BotHub?id=iCs11ZvYejUUEbq0QJT7pQ - - - 101 - - 59.3359ms
2024-02-04 17:31:28.651 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - -
2024-02-04 17:31:28.781 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 129.3351ms
2024-02-04 17:33:43.453 +03:00 [INF] User profile is available. Using 'C:\Users\timar\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-04 17:33:43.616 +03:00 [INF] Default Quartz.NET properties loaded from embedded resource file
2024-02-04 17:33:43.661 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-02-04 17:33:43.666 +03:00 [INF] Quartz Scheduler created
2024-02-04 17:33:43.668 +03:00 [INF] RAMJobStore initialized.
2024-02-04 17:33:43.669 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-02-04 17:33:43.670 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-02-04 17:33:43.671 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-02-04 17:33:43.672 +03:00 [INF] JobFactory set to: TgCheckerApi.Job.QuartzJobFactory
2024-02-04 17:33:43.715 +03:00 [INF] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2024-02-04 17:33:43.805 +03:00 [INF] Now listening on: http://localhost:7256
2024-02-04 17:33:43.806 +03:00 [INF] Now listening on: http://localhost:5244
2024-02-04 17:33:43.810 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-04 17:33:43.811 +03:00 [INF] Hosting environment: Development
2024-02-04 17:33:43.811 +03:00 [INF] Content root path: C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\
2024-02-04 17:33:44.009 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/index.html - -
2024-02-04 17:33:44.167 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 17:33:44.172 +03:00 [WRN] Failed to determine the https port for redirect.
2024-02-04 17:33:44.260 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 17:33:44.285 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 17:33:44.287 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 119.4800ms
2024-02-04 17:33:44.288 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=FS49Xb2KP8_296krmDrTNw - -
2024-02-04 17:33:44.290 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 17:33:44.324 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/index.html - - - 200 - text/html;charset=utf-8 318.4377ms
2024-02-04 17:33:44.330 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_vs/browserLink - -
2024-02-04 17:33:44.339 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - -
2024-02-04 17:33:44.345 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - - - 200 12356 application/javascript;+charset=utf-8 5.4288ms
2024-02-04 17:33:44.358 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 27.2426ms
2024-02-04 17:33:44.360 +03:00 [INF] Executed endpoint '/BotHub'
2024-02-04 17:33:44.362 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/BotHub?id=FS49Xb2KP8_296krmDrTNw - - - 101 - - 73.3283ms
2024-02-04 17:33:44.420 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - -
2024-02-04 17:33:44.486 +03:00 [ERR] An unhandled exception has occurred while executing the request.
Swashbuckle.AspNetCore.SwaggerGen.SwaggerGeneratorException: Ambiguous HTTP method for action - TgCheckerApi.Controllers.AuthController.UpdateUserProfileIfNeeded (TgCheckerApi). Actions require an explicit HttpMethod binding for Swagger/OpenAPI 3.0
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GenerateOperations(IEnumerable`1 apiDescriptions, SchemaRepository schemaRepository)
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GeneratePaths(IEnumerable`1 apiDescriptions, SchemaRepository schemaRepository)
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GetSwaggerDocumentWithoutFilters(String documentName, String host, String basePath)
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GetSwaggerAsync(String documentName, String host, String basePath)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2024-02-04 17:33:44.511 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - - - 500 - text/plain;+charset=utf-8 90.3888ms
2024-02-04 17:37:02.070 +03:00 [INF] User profile is available. Using 'C:\Users\timar\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-04 17:37:02.234 +03:00 [INF] Default Quartz.NET properties loaded from embedded resource file
2024-02-04 17:37:02.275 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-02-04 17:37:02.277 +03:00 [INF] Quartz Scheduler created
2024-02-04 17:37:02.281 +03:00 [INF] RAMJobStore initialized.
2024-02-04 17:37:02.282 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-02-04 17:37:02.282 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-02-04 17:37:02.283 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-02-04 17:37:02.284 +03:00 [INF] JobFactory set to: TgCheckerApi.Job.QuartzJobFactory
2024-02-04 17:37:02.325 +03:00 [INF] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2024-02-04 17:37:02.408 +03:00 [INF] Now listening on: http://localhost:7256
2024-02-04 17:37:02.410 +03:00 [INF] Now listening on: http://localhost:5244
2024-02-04 17:37:02.413 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-04 17:37:02.414 +03:00 [INF] Hosting environment: Development
2024-02-04 17:37:02.415 +03:00 [INF] Content root path: C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\
2024-02-04 17:37:02.506 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 17:37:02.539 +03:00 [WRN] Failed to determine the https port for redirect.
2024-02-04 17:37:02.619 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 17:37:02.679 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 17:37:02.686 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 180.8726ms
2024-02-04 17:37:02.688 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=Geq2w8Hx-EeeQz1-RdGbxA - -
2024-02-04 17:37:02.701 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 17:37:02.767 +03:00 [INF] Executed endpoint '/BotHub'
2024-02-04 17:37:02.774 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/BotHub?id=Geq2w8Hx-EeeQz1-RdGbxA - - - 101 - - 86.1420ms
2024-02-04 17:37:02.792 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/index.html - -
2024-02-04 17:37:03.025 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/index.html - - - 200 - text/html;charset=utf-8 232.3079ms
2024-02-04 17:37:03.032 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - -
2024-02-04 17:37:03.033 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_vs/browserLink - -
2024-02-04 17:37:03.036 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - - - 200 12356 application/javascript;+charset=utf-8 4.6098ms
2024-02-04 17:37:03.051 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 17.8418ms
2024-02-04 17:37:03.125 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - -
2024-02-04 17:37:03.262 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 136.7833ms
2024-02-04 17:37:09.072 +03:00 [INF] User profile is available. Using 'C:\Users\timar\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-04 17:37:09.228 +03:00 [INF] Default Quartz.NET properties loaded from embedded resource file
2024-02-04 17:37:09.268 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-02-04 17:37:09.273 +03:00 [INF] Quartz Scheduler created
2024-02-04 17:37:09.274 +03:00 [INF] RAMJobStore initialized.
2024-02-04 17:37:09.275 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-02-04 17:37:09.275 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-02-04 17:37:09.276 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-02-04 17:37:09.277 +03:00 [INF] JobFactory set to: TgCheckerApi.Job.QuartzJobFactory
2024-02-04 17:37:09.324 +03:00 [INF] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2024-02-04 17:37:09.408 +03:00 [INF] Now listening on: http://localhost:7256
2024-02-04 17:37:09.409 +03:00 [INF] Now listening on: http://localhost:5244
2024-02-04 17:37:09.412 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-04 17:37:09.414 +03:00 [INF] Hosting environment: Development
2024-02-04 17:37:09.415 +03:00 [INF] Content root path: C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\
2024-02-04 17:37:09.743 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/index.html - -
2024-02-04 17:37:09.838 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 17:37:09.843 +03:00 [WRN] Failed to determine the https port for redirect.
2024-02-04 17:37:09.917 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 17:37:09.941 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 17:37:09.945 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 105.3014ms
2024-02-04 17:37:09.945 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=b5H62vmfaWXtadkbxWwC8A - -
2024-02-04 17:37:09.949 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 17:37:10.019 +03:00 [INF] Executed endpoint '/BotHub'
2024-02-04 17:37:10.023 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/BotHub?id=b5H62vmfaWXtadkbxWwC8A - - - 101 - - 78.2053ms
2024-02-04 17:37:10.052 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/index.html - - - 200 - text/html;charset=utf-8 311.6138ms
2024-02-04 17:37:10.057 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_vs/browserLink - -
2024-02-04 17:37:10.058 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - -
2024-02-04 17:37:10.063 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - - - 200 12356 application/javascript;+charset=utf-8 5.4915ms
2024-02-04 17:37:10.076 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 19.0650ms
2024-02-04 17:37:10.141 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - -
2024-02-04 17:37:10.270 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 128.7346ms
2024-02-04 17:37:15.041 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 17:37:15.044 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 17:37:15.045 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 17:37:15.046 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 5.1325ms
2024-02-04 17:37:15.048 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=cT4bO76coNM2xU1734sTVw - -
2024-02-04 17:37:15.049 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 17:37:15.056 +03:00 [INF] Executed endpoint '/BotHub'
2024-02-04 17:37:15.057 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/BotHub?id=cT4bO76coNM2xU1734sTVw - - - 101 - - 8.9259ms
2024-02-04 17:37:19.556 +03:00 [INF] Start processing HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-04 17:37:19.568 +03:00 [INF] Sending HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-04 17:37:20.068 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 17:37:20.069 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 17:37:20.070 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 17:37:20.071 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 3.8044ms
2024-02-04 17:37:20.073 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=Rs8Lm7e2g-mlkA51WB2KZg - -
2024-02-04 17:37:20.074 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 17:37:20.088 +03:00 [INF] Executed endpoint '/BotHub'
2024-02-04 17:37:20.089 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/BotHub?id=Rs8Lm7e2g-mlkA51WB2KZg - - - 101 - - 15.7628ms
2024-02-04 17:37:20.148 +03:00 [INF] Received HTTP response headers after 572.7384ms - 200
2024-02-04 17:37:20.153 +03:00 [INF] End processing HTTP request after 606.3321ms - 200
2024-02-04 17:37:20.158 +03:00 [INF] Successfully processed all channels via HTTP request at: {DateTime.UtcNow}
2024-02-04 17:37:20.747 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:7256/api/Auth - -
2024-02-04 17:37:20.750 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:37:20.752 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:7256/api/Auth - - - 204 - - 5.1364ms
2024-02-04 17:37:20.753 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Auth - -
2024-02-04 17:37:20.754 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:37:20.857 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 17:37:20.879 +03:00 [INF] Route matched with {action = "GetMe", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TgCheckerApi.Models.GetModels.UserProfileModel]] GetMe() on controller TgCheckerApi.Controllers.AuthController (TgCheckerApi).
2024-02-04 17:37:20.953 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:7256/api/Notification/UserNotifications - -
2024-02-04 17:37:20.960 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:37:20.961 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:7256/api/Notification/UserNotifications - - - 204 - - 8.6912ms
2024-02-04 17:37:20.962 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification/UserNotifications - -
2024-02-04 17:37:20.963 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:37:20.973 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetUserNotifications (TgCheckerApi)'
2024-02-04 17:37:20.977 +03:00 [INF] Route matched with {action = "GetUserNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetUserNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-04 17:37:23.491 +03:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2024-02-04 17:37:23.915 +03:00 [INF] Executed DbCommand (102ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.avatar, t.chat_id, t.last_update, t.notification_settings, t.telegram_id, t.unique_key, t.username, t1.id, t1.channel_id, t1.user_id, t1.id0, t1.avatar, t1.bumps, t1.description, t1.flag, t1."Hidden", t1.language, t1.last_bump, t1.members, t1.name, t1.notification_sent, t1.notifications, t1.promo_post, t1.promo_post_interval, t1.promo_post_last, t1.promo_post_sent, t1.promo_post_time, t1.telegram_id, t1."Url", t1."user", t1.id1, t1.channel, t1.tag, t1.id00, t1.text, t3.id, t3.channel_id, t3.content, t3.created_at, t3.parent_id, t3.rating, t3.user_id, t3.id0, t3.avatar, t3.bumps, t3.description, t3.flag, t3."Hidden", t3.language, t3.last_bump, t3.members, t3.name, t3.notification_sent, t3.notifications, t3.promo_post, t3.promo_post_interval, t3.promo_post_last, t3.promo_post_sent, t3.promo_post_time, t3.telegram_id, t3."Url", t3."user"
FROM (
    SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
    FROM "User" AS u
    WHERE u.unique_key = @__uniqueKeyClaim_0
    LIMIT 2
) AS t
LEFT JOIN (
    SELECT c.id, c.channel_id, c.user_id, c0.id AS id0, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."Url", c0."user", t0.id AS id1, t0.channel, t0.tag, t0.id0 AS id00, t0.text
    FROM "ChannelAccess" AS c
    LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
    LEFT JOIN (
        SELECT c1.id, c1.channel, c1.tag, t2.id AS id0, t2.text
        FROM "ChannelHasTag" AS c1
        LEFT JOIN "Tag" AS t2 ON c1.tag = t2.id
    ) AS t0 ON c0.id = t0.channel
) AS t1 ON t.id = t1.user_id
LEFT JOIN (
    SELECT c2.id, c2.channel_id, c2.content, c2.created_at, c2.parent_id, c2.rating, c2.user_id, c3.id AS id0, c3.avatar, c3.bumps, c3.description, c3.flag, c3."Hidden", c3.language, c3.last_bump, c3.members, c3.name, c3.notification_sent, c3.notifications, c3.promo_post, c3.promo_post_interval, c3.promo_post_last, c3.promo_post_sent, c3.promo_post_time, c3.telegram_id, c3."Url", c3."user"
    FROM "Comment" AS c2
    INNER JOIN "Channel" AS c3 ON c2.channel_id = c3.id
) AS t3 ON t.id = t3.user_id
ORDER BY t.id, t1.id, t1.id0, t1.id1, t1.id00, t3.id
2024-02-04 17:37:23.915 +03:00 [INF] Executed DbCommand (102ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "User" AS u
WHERE u.unique_key = @__uniqueKeyClaim_0
LIMIT 2
2024-02-04 17:37:24.149 +03:00 [INF] Executed DbCommand (13ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.user_id = @__user_Id_0
2024-02-04 17:37:24.182 +03:00 [INF] Received request for getProfilePictureAndUsername. Request hash: 5ec5950f142bca89e2aa6cb4127bdea9391929bfdb585a0fda8bc0406276e946
2024-02-04 17:37:24.186 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.BaseModels.Notification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-04 17:37:24.227 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetUserNotifications (TgCheckerApi) in 3242.4008ms
2024-02-04 17:37:24.228 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetUserNotifications (TgCheckerApi)'
2024-02-04 17:37:24.250 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification/UserNotifications - - - 200 524 application/json;+charset=utf-8 3287.9240ms
2024-02-04 17:37:24.289 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:37:24.321 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:37:24.330 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:37:24.341 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 17:37:24.372 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 17:37:24.477 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 17:37:24.516 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 17:37:24.560 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 17:37:24.570 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:37:24.573 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:37:24.576 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:37:24.579 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 17:37:24.588 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 17:37:24.592 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 17:37:24.617 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 17:37:24.621 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 17:37:24.624 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:37:24.627 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:37:24.632 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:37:24.635 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 17:37:24.639 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 17:37:24.642 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 17:37:24.647 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 17:37:24.652 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 17:37:24.656 +03:00 [INF] Executing OkObjectResult, writing value of type 'TgCheckerApi.Models.GetModels.UserProfileModel'.
2024-02-04 17:37:24.675 +03:00 [INF] Executed action TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi) in 3792.8439ms
2024-02-04 17:37:24.676 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Auth - -
2024-02-04 17:37:24.676 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 17:37:24.677 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:37:24.678 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Auth - - - 200 28584 application/json;+charset=utf-8 3925.2641ms
2024-02-04 17:37:24.679 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 17:37:24.681 +03:00 [INF] Route matched with {action = "GetMe", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TgCheckerApi.Models.GetModels.UserProfileModel]] GetMe() on controller TgCheckerApi.Controllers.AuthController (TgCheckerApi).
2024-02-04 17:37:24.746 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.avatar, t.chat_id, t.last_update, t.notification_settings, t.telegram_id, t.unique_key, t.username, t1.id, t1.channel_id, t1.user_id, t1.id0, t1.avatar, t1.bumps, t1.description, t1.flag, t1."Hidden", t1.language, t1.last_bump, t1.members, t1.name, t1.notification_sent, t1.notifications, t1.promo_post, t1.promo_post_interval, t1.promo_post_last, t1.promo_post_sent, t1.promo_post_time, t1.telegram_id, t1."Url", t1."user", t1.id1, t1.channel, t1.tag, t1.id00, t1.text, t3.id, t3.channel_id, t3.content, t3.created_at, t3.parent_id, t3.rating, t3.user_id, t3.id0, t3.avatar, t3.bumps, t3.description, t3.flag, t3."Hidden", t3.language, t3.last_bump, t3.members, t3.name, t3.notification_sent, t3.notifications, t3.promo_post, t3.promo_post_interval, t3.promo_post_last, t3.promo_post_sent, t3.promo_post_time, t3.telegram_id, t3."Url", t3."user"
FROM (
    SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
    FROM "User" AS u
    WHERE u.unique_key = @__uniqueKeyClaim_0
    LIMIT 2
) AS t
LEFT JOIN (
    SELECT c.id, c.channel_id, c.user_id, c0.id AS id0, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."Url", c0."user", t0.id AS id1, t0.channel, t0.tag, t0.id0 AS id00, t0.text
    FROM "ChannelAccess" AS c
    LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
    LEFT JOIN (
        SELECT c1.id, c1.channel, c1.tag, t2.id AS id0, t2.text
        FROM "ChannelHasTag" AS c1
        LEFT JOIN "Tag" AS t2 ON c1.tag = t2.id
    ) AS t0 ON c0.id = t0.channel
) AS t1 ON t.id = t1.user_id
LEFT JOIN (
    SELECT c2.id, c2.channel_id, c2.content, c2.created_at, c2.parent_id, c2.rating, c2.user_id, c3.id AS id0, c3.avatar, c3.bumps, c3.description, c3.flag, c3."Hidden", c3.language, c3.last_bump, c3.members, c3.name, c3.notification_sent, c3.notifications, c3.promo_post, c3.promo_post_interval, c3.promo_post_last, c3.promo_post_sent, c3.promo_post_time, c3.telegram_id, c3."Url", c3."user"
    FROM "Comment" AS c2
    INNER JOIN "Channel" AS c3 ON c2.channel_id = c3.id
) AS t3 ON t.id = t3.user_id
ORDER BY t.id, t1.id, t1.id0, t1.id1, t1.id00, t3.id
2024-02-04 17:37:24.755 +03:00 [INF] Received request for getProfilePictureAndUsername. Request hash: 5ec5950f142bca89e2aa6cb4127bdea9391929bfdb585a0fda8bc0406276e946
2024-02-04 17:37:24.755 +03:00 [INF] Request found in cache. Hash: 5ec5950f142bca89e2aa6cb4127bdea9391929bfdb585a0fda8bc0406276e946
2024-02-04 17:37:24.756 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:37:24.760 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:37:24.763 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:7256/api/User/PaymentHistory - -
2024-02-04 17:37:24.763 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:37:24.764 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:37:24.767 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:7256/api/User/PaymentHistory - - - 204 - - 4.2548ms
2024-02-04 17:37:24.767 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 17:37:24.773 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/User/PaymentHistory - -
2024-02-04 17:37:24.776 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:37:24.776 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 17:37:24.777 +03:00 [INF] Executing endpoint 'TgCheckerApi.MapperProfiles.UserController.GetPaymentHistory (TgCheckerApi)'
2024-02-04 17:37:24.780 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 17:37:24.784 +03:00 [INF] Route matched with {action = "GetPaymentHistory", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.GetModels.PaymentHistoryModel]]] GetPaymentHistory() on controller TgCheckerApi.MapperProfiles.UserController (TgCheckerApi).
2024-02-04 17:37:24.787 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 17:37:24.796 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 17:37:24.800 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.avatar, t.chat_id, t.last_update, t.notification_settings, t.telegram_id, t.unique_key, t.username, t1.id, t1.channel_id, t1.user_id, t1.id0, t1.avatar, t1.bumps, t1.description, t1.flag, t1."Hidden", t1.language, t1.last_bump, t1.members, t1.name, t1.notification_sent, t1.notifications, t1.promo_post, t1.promo_post_interval, t1.promo_post_last, t1.promo_post_sent, t1.promo_post_time, t1.telegram_id, t1."Url", t1."user", t1.id1, t1.channel, t1.tag, t1.id00, t1.text, t3.id, t3.channel_id, t3.content, t3.created_at, t3.parent_id, t3.rating, t3.user_id, t3.id0, t3.avatar, t3.bumps, t3.description, t3.flag, t3."Hidden", t3.language, t3.last_bump, t3.members, t3.name, t3.notification_sent, t3.notifications, t3.promo_post, t3.promo_post_interval, t3.promo_post_last, t3.promo_post_sent, t3.promo_post_time, t3.telegram_id, t3."Url", t3."user"
FROM (
    SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
    FROM "User" AS u
    WHERE u.unique_key = @__uniqueKeyClaim_0
    LIMIT 2
) AS t
LEFT JOIN (
    SELECT c.id, c.channel_id, c.user_id, c0.id AS id0, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."Url", c0."user", t0.id AS id1, t0.channel, t0.tag, t0.id0 AS id00, t0.text
    FROM "ChannelAccess" AS c
    LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
    LEFT JOIN (
        SELECT c1.id, c1.channel, c1.tag, t2.id AS id0, t2.text
        FROM "ChannelHasTag" AS c1
        LEFT JOIN "Tag" AS t2 ON c1.tag = t2.id
    ) AS t0 ON c0.id = t0.channel
) AS t1 ON t.id = t1.user_id
LEFT JOIN (
    SELECT c2.id, c2.channel_id, c2.content, c2.created_at, c2.parent_id, c2.rating, c2.user_id, c3.id AS id0, c3.avatar, c3.bumps, c3.description, c3.flag, c3."Hidden", c3.language, c3.last_bump, c3.members, c3.name, c3.notification_sent, c3.notifications, c3.promo_post, c3.promo_post_interval, c3.promo_post_last, c3.promo_post_sent, c3.promo_post_time, c3.telegram_id, c3."Url", c3."user"
    FROM "Comment" AS c2
    INNER JOIN "Channel" AS c3 ON c2.channel_id = c3.id
) AS t3 ON t.id = t3.user_id
ORDER BY t.id, t1.id, t1.id0, t1.id1, t1.id00, t3.id
2024-02-04 17:37:24.803 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:37:24.810 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:37:24.813 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:37:24.821 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.channel_id AS "ChannelId", p.id AS "PaymentId", p.subtype_id AS "ChannelSubscriptionType", p.created_at AS "PurchaseDate", p.duration AS "SubscriptionDuration", p.amount_value AS "AmountValue", p.amount_currency AS "AmountCurrency"
FROM "Payments" AS p
WHERE p.user_id = @__userId_0
2024-02-04 17:37:24.822 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 17:37:24.825 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.GetModels.PaymentHistoryModel, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-04 17:37:24.827 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 17:37:24.834 +03:00 [INF] Executed action TgCheckerApi.MapperProfiles.UserController.GetPaymentHistory (TgCheckerApi) in 45.0187ms
2024-02-04 17:37:24.835 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 17:37:24.836 +03:00 [INF] Executed endpoint 'TgCheckerApi.MapperProfiles.UserController.GetPaymentHistory (TgCheckerApi)'
2024-02-04 17:37:24.839 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 17:37:24.839 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/User/PaymentHistory - - - 200 1868 application/json;+charset=utf-8 66.4179ms
2024-02-04 17:37:24.842 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 17:37:24.846 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:37:24.852 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:37:24.855 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:37:24.858 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 17:37:24.861 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 17:37:24.868 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 17:37:24.871 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 17:37:24.874 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 17:37:24.876 +03:00 [INF] Executing OkObjectResult, writing value of type 'TgCheckerApi.Models.GetModels.UserProfileModel'.
2024-02-04 17:37:24.877 +03:00 [INF] Executed action TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi) in 194.225ms
2024-02-04 17:37:24.881 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 17:37:24.883 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Auth - - - 200 28584 application/json;+charset=utf-8 207.4706ms
2024-02-04 17:37:25.068 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 17:37:25.069 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 17:37:25.071 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 17:37:25.072 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 3.6035ms
2024-02-04 17:37:25.073 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=G_tCpMjuJLWdznXuTjaHdQ - -
2024-02-04 17:37:25.074 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 17:37:25.077 +03:00 [INF] Executed endpoint '/BotHub'
2024-02-04 17:37:25.078 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/BotHub?id=G_tCpMjuJLWdznXuTjaHdQ - - - 101 - - 5.1756ms
2024-02-04 17:37:30.077 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 17:37:30.078 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 17:37:30.079 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 17:37:30.081 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 3.2680ms
2024-02-04 17:37:30.083 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=iDdq7pGAdJY2j6Bp91RU0Q - -
2024-02-04 17:37:30.085 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 17:37:30.096 +03:00 [INF] Executed endpoint '/BotHub'
2024-02-04 17:37:30.109 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/BotHub?id=iDdq7pGAdJY2j6Bp91RU0Q - - - 101 - - 26.2286ms
2024-02-04 17:37:35.117 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 17:37:35.118 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 17:37:35.120 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 17:37:35.121 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 3.8904ms
2024-02-04 17:37:35.122 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=n-XzWYwRMYzdX9ka1l3bkA - -
2024-02-04 17:37:35.123 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 17:37:35.127 +03:00 [INF] Executed endpoint '/BotHub'
2024-02-04 17:37:35.129 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/BotHub?id=n-XzWYwRMYzdX9ka1l3bkA - - - 101 - - 5.9018ms
2024-02-04 17:37:40.155 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 17:37:40.155 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 17:37:40.156 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 17:37:40.157 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 2.1023ms
2024-02-04 17:37:40.158 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=_32DJSdf8NpELbpPI8r97w - -
2024-02-04 17:37:40.159 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 17:37:40.162 +03:00 [INF] Executed endpoint '/BotHub'
2024-02-04 17:37:40.163 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/BotHub?id=_32DJSdf8NpELbpPI8r97w - - - 101 - - 4.9044ms
2024-02-04 17:37:48.959 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 17:37:48.960 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 17:37:48.961 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 17:37:48.963 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 4.0015ms
2024-02-04 17:37:48.973 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=2f7DUGlbiGDnyKl5K97ygw - -
2024-02-04 17:37:48.974 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 17:37:54.222 +03:00 [WRN] New task timed out. Hash: 5ec5950f142bca89e2aa6cb4127bdea9391929bfdb585a0fda8bc0406276e946
2024-02-04 17:37:54.771 +03:00 [WRN] Cached task timed out.
2024-02-04 17:38:02.497 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:7256/api/Auth - -
2024-02-04 17:38:02.498 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:38:02.500 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:7256/api/Auth - - - 204 - - 3.1320ms
2024-02-04 17:38:02.501 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Auth - -
2024-02-04 17:38:02.503 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:38:02.504 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 17:38:02.505 +03:00 [INF] Route matched with {action = "GetMe", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TgCheckerApi.Models.GetModels.UserProfileModel]] GetMe() on controller TgCheckerApi.Controllers.AuthController (TgCheckerApi).
2024-02-04 17:38:02.515 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.avatar, t.chat_id, t.last_update, t.notification_settings, t.telegram_id, t.unique_key, t.username, t1.id, t1.channel_id, t1.user_id, t1.id0, t1.avatar, t1.bumps, t1.description, t1.flag, t1."Hidden", t1.language, t1.last_bump, t1.members, t1.name, t1.notification_sent, t1.notifications, t1.promo_post, t1.promo_post_interval, t1.promo_post_last, t1.promo_post_sent, t1.promo_post_time, t1.telegram_id, t1."Url", t1."user", t1.id1, t1.channel, t1.tag, t1.id00, t1.text, t3.id, t3.channel_id, t3.content, t3.created_at, t3.parent_id, t3.rating, t3.user_id, t3.id0, t3.avatar, t3.bumps, t3.description, t3.flag, t3."Hidden", t3.language, t3.last_bump, t3.members, t3.name, t3.notification_sent, t3.notifications, t3.promo_post, t3.promo_post_interval, t3.promo_post_last, t3.promo_post_sent, t3.promo_post_time, t3.telegram_id, t3."Url", t3."user"
FROM (
    SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
    FROM "User" AS u
    WHERE u.unique_key = @__uniqueKeyClaim_0
    LIMIT 2
) AS t
LEFT JOIN (
    SELECT c.id, c.channel_id, c.user_id, c0.id AS id0, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."Url", c0."user", t0.id AS id1, t0.channel, t0.tag, t0.id0 AS id00, t0.text
    FROM "ChannelAccess" AS c
    LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
    LEFT JOIN (
        SELECT c1.id, c1.channel, c1.tag, t2.id AS id0, t2.text
        FROM "ChannelHasTag" AS c1
        LEFT JOIN "Tag" AS t2 ON c1.tag = t2.id
    ) AS t0 ON c0.id = t0.channel
) AS t1 ON t.id = t1.user_id
LEFT JOIN (
    SELECT c2.id, c2.channel_id, c2.content, c2.created_at, c2.parent_id, c2.rating, c2.user_id, c3.id AS id0, c3.avatar, c3.bumps, c3.description, c3.flag, c3."Hidden", c3.language, c3.last_bump, c3.members, c3.name, c3.notification_sent, c3.notifications, c3.promo_post, c3.promo_post_interval, c3.promo_post_last, c3.promo_post_sent, c3.promo_post_time, c3.telegram_id, c3."Url", c3."user"
    FROM "Comment" AS c2
    INNER JOIN "Channel" AS c3 ON c2.channel_id = c3.id
) AS t3 ON t.id = t3.user_id
ORDER BY t.id, t1.id, t1.id0, t1.id1, t1.id00, t3.id
2024-02-04 17:38:02.530 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:38:02.531 +03:00 [INF] Received request for getProfilePictureAndUsername. Request hash: 5ec5950f142bca89e2aa6cb4127bdea9391929bfdb585a0fda8bc0406276e946
2024-02-04 17:38:02.543 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:38:02.556 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:38:02.566 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 17:38:02.571 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 17:38:02.576 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 17:38:02.582 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 17:38:02.586 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 17:38:02.589 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:38:02.596 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:38:02.599 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:38:02.602 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 17:38:02.605 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 17:38:02.608 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 17:38:02.614 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 17:38:02.617 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 17:38:02.620 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:38:02.623 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:38:02.629 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:38:02.633 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 17:38:02.636 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 17:38:02.640 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 17:38:02.645 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 17:38:02.650 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 17:38:02.652 +03:00 [INF] Executing OkObjectResult, writing value of type 'TgCheckerApi.Models.GetModels.UserProfileModel'.
2024-02-04 17:38:02.653 +03:00 [INF] Executed action TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi) in 142.327ms
2024-02-04 17:38:02.654 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 17:38:02.655 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Auth - - - 200 28584 application/json;+charset=utf-8 153.8328ms
2024-02-04 17:38:02.668 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:7256/api/Notification/UserNotifications - -
2024-02-04 17:38:02.669 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:38:02.670 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:7256/api/Notification/UserNotifications - - - 204 - - 1.6939ms
2024-02-04 17:38:02.670 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification/UserNotifications - -
2024-02-04 17:38:02.671 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:38:02.676 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetUserNotifications (TgCheckerApi)'
2024-02-04 17:38:02.677 +03:00 [INF] Route matched with {action = "GetUserNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetUserNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-04 17:38:02.682 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "User" AS u
WHERE u.unique_key = @__uniqueKeyClaim_0
LIMIT 2
2024-02-04 17:38:02.687 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.user_id = @__user_Id_0
2024-02-04 17:38:02.692 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.BaseModels.Notification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-04 17:38:02.695 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetUserNotifications (TgCheckerApi) in 15.1349ms
2024-02-04 17:38:02.696 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetUserNotifications (TgCheckerApi)'
2024-02-04 17:38:02.698 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification/UserNotifications - - - 200 524 application/json;+charset=utf-8 27.2101ms
2024-02-04 17:38:02.867 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:7256/api/User/PaymentHistory - -
2024-02-04 17:38:02.868 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:38:02.870 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:7256/api/User/PaymentHistory - - - 204 - - 2.7271ms
2024-02-04 17:38:02.871 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/User/PaymentHistory - -
2024-02-04 17:38:02.872 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:38:02.875 +03:00 [INF] Executing endpoint 'TgCheckerApi.MapperProfiles.UserController.GetPaymentHistory (TgCheckerApi)'
2024-02-04 17:38:02.877 +03:00 [INF] Route matched with {action = "GetPaymentHistory", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.GetModels.PaymentHistoryModel]]] GetPaymentHistory() on controller TgCheckerApi.MapperProfiles.UserController (TgCheckerApi).
2024-02-04 17:38:02.885 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.avatar, t.chat_id, t.last_update, t.notification_settings, t.telegram_id, t.unique_key, t.username, t1.id, t1.channel_id, t1.user_id, t1.id0, t1.avatar, t1.bumps, t1.description, t1.flag, t1."Hidden", t1.language, t1.last_bump, t1.members, t1.name, t1.notification_sent, t1.notifications, t1.promo_post, t1.promo_post_interval, t1.promo_post_last, t1.promo_post_sent, t1.promo_post_time, t1.telegram_id, t1."Url", t1."user", t1.id1, t1.channel, t1.tag, t1.id00, t1.text, t3.id, t3.channel_id, t3.content, t3.created_at, t3.parent_id, t3.rating, t3.user_id, t3.id0, t3.avatar, t3.bumps, t3.description, t3.flag, t3."Hidden", t3.language, t3.last_bump, t3.members, t3.name, t3.notification_sent, t3.notifications, t3.promo_post, t3.promo_post_interval, t3.promo_post_last, t3.promo_post_sent, t3.promo_post_time, t3.telegram_id, t3."Url", t3."user"
FROM (
    SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
    FROM "User" AS u
    WHERE u.unique_key = @__uniqueKeyClaim_0
    LIMIT 2
) AS t
LEFT JOIN (
    SELECT c.id, c.channel_id, c.user_id, c0.id AS id0, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."Url", c0."user", t0.id AS id1, t0.channel, t0.tag, t0.id0 AS id00, t0.text
    FROM "ChannelAccess" AS c
    LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
    LEFT JOIN (
        SELECT c1.id, c1.channel, c1.tag, t2.id AS id0, t2.text
        FROM "ChannelHasTag" AS c1
        LEFT JOIN "Tag" AS t2 ON c1.tag = t2.id
    ) AS t0 ON c0.id = t0.channel
) AS t1 ON t.id = t1.user_id
LEFT JOIN (
    SELECT c2.id, c2.channel_id, c2.content, c2.created_at, c2.parent_id, c2.rating, c2.user_id, c3.id AS id0, c3.avatar, c3.bumps, c3.description, c3.flag, c3."Hidden", c3.language, c3.last_bump, c3.members, c3.name, c3.notification_sent, c3.notifications, c3.promo_post, c3.promo_post_interval, c3.promo_post_last, c3.promo_post_sent, c3.promo_post_time, c3.telegram_id, c3."Url", c3."user"
    FROM "Comment" AS c2
    INNER JOIN "Channel" AS c3 ON c2.channel_id = c3.id
) AS t3 ON t.id = t3.user_id
ORDER BY t.id, t1.id, t1.id0, t1.id1, t1.id00, t3.id
2024-02-04 17:38:02.886 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Auth - -
2024-02-04 17:38:02.899 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:38:02.900 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 17:38:02.901 +03:00 [INF] Route matched with {action = "GetMe", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TgCheckerApi.Models.GetModels.UserProfileModel]] GetMe() on controller TgCheckerApi.Controllers.AuthController (TgCheckerApi).
2024-02-04 17:38:02.901 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.channel_id AS "ChannelId", p.id AS "PaymentId", p.subtype_id AS "ChannelSubscriptionType", p.created_at AS "PurchaseDate", p.duration AS "SubscriptionDuration", p.amount_value AS "AmountValue", p.amount_currency AS "AmountCurrency"
FROM "Payments" AS p
WHERE p.user_id = @__userId_0
2024-02-04 17:38:02.913 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.avatar, t.chat_id, t.last_update, t.notification_settings, t.telegram_id, t.unique_key, t.username, t1.id, t1.channel_id, t1.user_id, t1.id0, t1.avatar, t1.bumps, t1.description, t1.flag, t1."Hidden", t1.language, t1.last_bump, t1.members, t1.name, t1.notification_sent, t1.notifications, t1.promo_post, t1.promo_post_interval, t1.promo_post_last, t1.promo_post_sent, t1.promo_post_time, t1.telegram_id, t1."Url", t1."user", t1.id1, t1.channel, t1.tag, t1.id00, t1.text, t3.id, t3.channel_id, t3.content, t3.created_at, t3.parent_id, t3.rating, t3.user_id, t3.id0, t3.avatar, t3.bumps, t3.description, t3.flag, t3."Hidden", t3.language, t3.last_bump, t3.members, t3.name, t3.notification_sent, t3.notifications, t3.promo_post, t3.promo_post_interval, t3.promo_post_last, t3.promo_post_sent, t3.promo_post_time, t3.telegram_id, t3."Url", t3."user"
FROM (
    SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
    FROM "User" AS u
    WHERE u.unique_key = @__uniqueKeyClaim_0
    LIMIT 2
) AS t
LEFT JOIN (
    SELECT c.id, c.channel_id, c.user_id, c0.id AS id0, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."Url", c0."user", t0.id AS id1, t0.channel, t0.tag, t0.id0 AS id00, t0.text
    FROM "ChannelAccess" AS c
    LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
    LEFT JOIN (
        SELECT c1.id, c1.channel, c1.tag, t2.id AS id0, t2.text
        FROM "ChannelHasTag" AS c1
        LEFT JOIN "Tag" AS t2 ON c1.tag = t2.id
    ) AS t0 ON c0.id = t0.channel
) AS t1 ON t.id = t1.user_id
LEFT JOIN (
    SELECT c2.id, c2.channel_id, c2.content, c2.created_at, c2.parent_id, c2.rating, c2.user_id, c3.id AS id0, c3.avatar, c3.bumps, c3.description, c3.flag, c3."Hidden", c3.language, c3.last_bump, c3.members, c3.name, c3.notification_sent, c3.notifications, c3.promo_post, c3.promo_post_interval, c3.promo_post_last, c3.promo_post_sent, c3.promo_post_time, c3.telegram_id, c3."Url", c3."user"
    FROM "Comment" AS c2
    INNER JOIN "Channel" AS c3 ON c2.channel_id = c3.id
) AS t3 ON t.id = t3.user_id
ORDER BY t.id, t1.id, t1.id0, t1.id1, t1.id00, t3.id
2024-02-04 17:38:02.916 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.GetModels.PaymentHistoryModel, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-04 17:38:02.932 +03:00 [INF] Received request for getProfilePictureAndUsername. Request hash: 5ec5950f142bca89e2aa6cb4127bdea9391929bfdb585a0fda8bc0406276e946
2024-02-04 17:38:02.939 +03:00 [INF] Request found in cache. Hash: 5ec5950f142bca89e2aa6cb4127bdea9391929bfdb585a0fda8bc0406276e946
2024-02-04 17:38:02.933 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:38:02.934 +03:00 [INF] Executed action TgCheckerApi.MapperProfiles.UserController.GetPaymentHistory (TgCheckerApi) in 52.9585ms
2024-02-04 17:38:02.944 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:38:02.945 +03:00 [INF] Executed endpoint 'TgCheckerApi.MapperProfiles.UserController.GetPaymentHistory (TgCheckerApi)'
2024-02-04 17:38:02.948 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:38:02.948 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/User/PaymentHistory - - - 200 1868 application/json;+charset=utf-8 77.5276ms
2024-02-04 17:38:02.954 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 17:38:02.959 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 17:38:02.963 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 17:38:02.968 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 17:38:02.971 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 17:38:02.974 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:38:02.979 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:38:02.984 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:38:02.987 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 17:38:02.990 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 17:38:02.994 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 17:38:03.001 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 17:38:03.005 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 17:38:03.008 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:38:03.012 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:38:03.017 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:38:03.022 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 17:38:03.028 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 17:38:03.033 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 17:38:03.037 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 17:38:03.040 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 17:38:03.042 +03:00 [INF] Executing OkObjectResult, writing value of type 'TgCheckerApi.Models.GetModels.UserProfileModel'.
2024-02-04 17:38:03.047 +03:00 [INF] Executed action TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi) in 139.4711ms
2024-02-04 17:38:03.048 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 17:38:03.050 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Auth - - - 200 28584 application/json;+charset=utf-8 163.9863ms
2024-02-04 17:38:03.129 +03:00 [INF] New task completed successfully. Hash: 5ec5950f142bca89e2aa6cb4127bdea9391929bfdb585a0fda8bc0406276e946
2024-02-04 17:38:03.213 +03:00 [INF] User profile updated in background for uwu.
2024-02-04 17:38:03.215 +03:00 [INF] Cached task completed successfully.
2024-02-04 17:38:03.217 +03:00 [INF] User profile updated in background for uwu.
2024-02-04 17:39:26.029 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:7256/api/Auth - -
2024-02-04 17:39:26.030 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:39:26.030 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:7256/api/Auth - - - 204 - - 1.7517ms
2024-02-04 17:39:26.031 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Auth - -
2024-02-04 17:39:26.032 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:39:26.034 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 17:39:26.036 +03:00 [INF] Route matched with {action = "GetMe", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TgCheckerApi.Models.GetModels.UserProfileModel]] GetMe() on controller TgCheckerApi.Controllers.AuthController (TgCheckerApi).
2024-02-04 17:39:26.048 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.avatar, t.chat_id, t.last_update, t.notification_settings, t.telegram_id, t.unique_key, t.username, t1.id, t1.channel_id, t1.user_id, t1.id0, t1.avatar, t1.bumps, t1.description, t1.flag, t1."Hidden", t1.language, t1.last_bump, t1.members, t1.name, t1.notification_sent, t1.notifications, t1.promo_post, t1.promo_post_interval, t1.promo_post_last, t1.promo_post_sent, t1.promo_post_time, t1.telegram_id, t1."Url", t1."user", t1.id1, t1.channel, t1.tag, t1.id00, t1.text, t3.id, t3.channel_id, t3.content, t3.created_at, t3.parent_id, t3.rating, t3.user_id, t3.id0, t3.avatar, t3.bumps, t3.description, t3.flag, t3."Hidden", t3.language, t3.last_bump, t3.members, t3.name, t3.notification_sent, t3.notifications, t3.promo_post, t3.promo_post_interval, t3.promo_post_last, t3.promo_post_sent, t3.promo_post_time, t3.telegram_id, t3."Url", t3."user"
FROM (
    SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
    FROM "User" AS u
    WHERE u.unique_key = @__uniqueKeyClaim_0
    LIMIT 2
) AS t
LEFT JOIN (
    SELECT c.id, c.channel_id, c.user_id, c0.id AS id0, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."Url", c0."user", t0.id AS id1, t0.channel, t0.tag, t0.id0 AS id00, t0.text
    FROM "ChannelAccess" AS c
    LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
    LEFT JOIN (
        SELECT c1.id, c1.channel, c1.tag, t2.id AS id0, t2.text
        FROM "ChannelHasTag" AS c1
        LEFT JOIN "Tag" AS t2 ON c1.tag = t2.id
    ) AS t0 ON c0.id = t0.channel
) AS t1 ON t.id = t1.user_id
LEFT JOIN (
    SELECT c2.id, c2.channel_id, c2.content, c2.created_at, c2.parent_id, c2.rating, c2.user_id, c3.id AS id0, c3.avatar, c3.bumps, c3.description, c3.flag, c3."Hidden", c3.language, c3.last_bump, c3.members, c3.name, c3.notification_sent, c3.notifications, c3.promo_post, c3.promo_post_interval, c3.promo_post_last, c3.promo_post_sent, c3.promo_post_time, c3.telegram_id, c3."Url", c3."user"
    FROM "Comment" AS c2
    INNER JOIN "Channel" AS c3 ON c2.channel_id = c3.id
) AS t3 ON t.id = t3.user_id
ORDER BY t.id, t1.id, t1.id0, t1.id1, t1.id00, t3.id
2024-02-04 17:39:26.056 +03:00 [INF] Received request for getProfilePictureAndUsername. Request hash: 5ec5950f142bca89e2aa6cb4127bdea9391929bfdb585a0fda8bc0406276e946
2024-02-04 17:39:26.057 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:39:26.065 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:39:26.077 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:39:26.081 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 17:39:26.086 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 17:39:26.090 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 17:39:26.096 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 17:39:26.099 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 17:39:26.103 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:39:26.109 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:39:26.112 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:39:26.115 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 17:39:26.119 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 17:39:26.126 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 17:39:26.129 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 17:39:26.132 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 17:39:26.137 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:39:26.143 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:39:26.146 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:39:26.150 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 17:39:26.153 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 17:39:26.160 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 17:39:26.164 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 17:39:26.167 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 17:39:26.173 +03:00 [INF] Executing OkObjectResult, writing value of type 'TgCheckerApi.Models.GetModels.UserProfileModel'.
2024-02-04 17:39:26.175 +03:00 [INF] Executed action TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi) in 136.5233ms
2024-02-04 17:39:26.176 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 17:39:26.178 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Auth - - - 200 28584 application/json;+charset=utf-8 146.3951ms
2024-02-04 17:39:26.375 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:7256/api/User/PaymentHistory - -
2024-02-04 17:39:26.376 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:39:26.377 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:7256/api/User/PaymentHistory - - - 204 - - 2.1765ms
2024-02-04 17:39:26.378 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/User/PaymentHistory - -
2024-02-04 17:39:26.379 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:39:26.380 +03:00 [INF] Executing endpoint 'TgCheckerApi.MapperProfiles.UserController.GetPaymentHistory (TgCheckerApi)'
2024-02-04 17:39:26.381 +03:00 [INF] Route matched with {action = "GetPaymentHistory", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.GetModels.PaymentHistoryModel]]] GetPaymentHistory() on controller TgCheckerApi.MapperProfiles.UserController (TgCheckerApi).
2024-02-04 17:39:26.391 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.avatar, t.chat_id, t.last_update, t.notification_settings, t.telegram_id, t.unique_key, t.username, t1.id, t1.channel_id, t1.user_id, t1.id0, t1.avatar, t1.bumps, t1.description, t1.flag, t1."Hidden", t1.language, t1.last_bump, t1.members, t1.name, t1.notification_sent, t1.notifications, t1.promo_post, t1.promo_post_interval, t1.promo_post_last, t1.promo_post_sent, t1.promo_post_time, t1.telegram_id, t1."Url", t1."user", t1.id1, t1.channel, t1.tag, t1.id00, t1.text, t3.id, t3.channel_id, t3.content, t3.created_at, t3.parent_id, t3.rating, t3.user_id, t3.id0, t3.avatar, t3.bumps, t3.description, t3.flag, t3."Hidden", t3.language, t3.last_bump, t3.members, t3.name, t3.notification_sent, t3.notifications, t3.promo_post, t3.promo_post_interval, t3.promo_post_last, t3.promo_post_sent, t3.promo_post_time, t3.telegram_id, t3."Url", t3."user"
FROM (
    SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
    FROM "User" AS u
    WHERE u.unique_key = @__uniqueKeyClaim_0
    LIMIT 2
) AS t
LEFT JOIN (
    SELECT c.id, c.channel_id, c.user_id, c0.id AS id0, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."Url", c0."user", t0.id AS id1, t0.channel, t0.tag, t0.id0 AS id00, t0.text
    FROM "ChannelAccess" AS c
    LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
    LEFT JOIN (
        SELECT c1.id, c1.channel, c1.tag, t2.id AS id0, t2.text
        FROM "ChannelHasTag" AS c1
        LEFT JOIN "Tag" AS t2 ON c1.tag = t2.id
    ) AS t0 ON c0.id = t0.channel
) AS t1 ON t.id = t1.user_id
LEFT JOIN (
    SELECT c2.id, c2.channel_id, c2.content, c2.created_at, c2.parent_id, c2.rating, c2.user_id, c3.id AS id0, c3.avatar, c3.bumps, c3.description, c3.flag, c3."Hidden", c3.language, c3.last_bump, c3.members, c3.name, c3.notification_sent, c3.notifications, c3.promo_post, c3.promo_post_interval, c3.promo_post_last, c3.promo_post_sent, c3.promo_post_time, c3.telegram_id, c3."Url", c3."user"
    FROM "Comment" AS c2
    INNER JOIN "Channel" AS c3 ON c2.channel_id = c3.id
) AS t3 ON t.id = t3.user_id
ORDER BY t.id, t1.id, t1.id0, t1.id1, t1.id00, t3.id
2024-02-04 17:39:26.392 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:7256/api/Notification/UserNotifications - -
2024-02-04 17:39:26.424 +03:00 [INF] New task completed successfully. Hash: 5ec5950f142bca89e2aa6cb4127bdea9391929bfdb585a0fda8bc0406276e946
2024-02-04 17:39:26.425 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:39:26.426 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.channel_id AS "ChannelId", p.id AS "PaymentId", p.subtype_id AS "ChannelSubscriptionType", p.created_at AS "PurchaseDate", p.duration AS "SubscriptionDuration", p.amount_value AS "AmountValue", p.amount_currency AS "AmountCurrency"
FROM "Payments" AS p
WHERE p.user_id = @__userId_0
2024-02-04 17:39:26.427 +03:00 [INF] User profile updated in background for uwu.
2024-02-04 17:39:26.427 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:7256/api/Notification/UserNotifications - - - 204 - - 36.0627ms
2024-02-04 17:39:26.430 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.GetModels.PaymentHistoryModel, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-04 17:39:26.432 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification/UserNotifications - -
2024-02-04 17:39:26.433 +03:00 [INF] Executed action TgCheckerApi.MapperProfiles.UserController.GetPaymentHistory (TgCheckerApi) in 50.2449ms
2024-02-04 17:39:26.437 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:39:26.438 +03:00 [INF] Executed endpoint 'TgCheckerApi.MapperProfiles.UserController.GetPaymentHistory (TgCheckerApi)'
2024-02-04 17:39:26.439 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetUserNotifications (TgCheckerApi)'
2024-02-04 17:39:26.440 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/User/PaymentHistory - - - 200 1868 application/json;+charset=utf-8 61.9826ms
2024-02-04 17:39:26.441 +03:00 [INF] Route matched with {action = "GetUserNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetUserNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-04 17:39:26.446 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "User" AS u
WHERE u.unique_key = @__uniqueKeyClaim_0
LIMIT 2
2024-02-04 17:39:26.454 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.user_id = @__user_Id_0
2024-02-04 17:39:26.457 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.BaseModels.Notification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-04 17:39:26.458 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetUserNotifications (TgCheckerApi) in 14.4755ms
2024-02-04 17:39:26.460 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetUserNotifications (TgCheckerApi)'
2024-02-04 17:39:26.461 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification/UserNotifications - - - 200 524 application/json;+charset=utf-8 29.0236ms
2024-02-04 17:39:26.520 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Auth - -
2024-02-04 17:39:26.522 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:39:26.523 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 17:39:26.524 +03:00 [INF] Route matched with {action = "GetMe", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TgCheckerApi.Models.GetModels.UserProfileModel]] GetMe() on controller TgCheckerApi.Controllers.AuthController (TgCheckerApi).
2024-02-04 17:39:26.531 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.avatar, t.chat_id, t.last_update, t.notification_settings, t.telegram_id, t.unique_key, t.username, t1.id, t1.channel_id, t1.user_id, t1.id0, t1.avatar, t1.bumps, t1.description, t1.flag, t1."Hidden", t1.language, t1.last_bump, t1.members, t1.name, t1.notification_sent, t1.notifications, t1.promo_post, t1.promo_post_interval, t1.promo_post_last, t1.promo_post_sent, t1.promo_post_time, t1.telegram_id, t1."Url", t1."user", t1.id1, t1.channel, t1.tag, t1.id00, t1.text, t3.id, t3.channel_id, t3.content, t3.created_at, t3.parent_id, t3.rating, t3.user_id, t3.id0, t3.avatar, t3.bumps, t3.description, t3.flag, t3."Hidden", t3.language, t3.last_bump, t3.members, t3.name, t3.notification_sent, t3.notifications, t3.promo_post, t3.promo_post_interval, t3.promo_post_last, t3.promo_post_sent, t3.promo_post_time, t3.telegram_id, t3."Url", t3."user"
FROM (
    SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
    FROM "User" AS u
    WHERE u.unique_key = @__uniqueKeyClaim_0
    LIMIT 2
) AS t
LEFT JOIN (
    SELECT c.id, c.channel_id, c.user_id, c0.id AS id0, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."Url", c0."user", t0.id AS id1, t0.channel, t0.tag, t0.id0 AS id00, t0.text
    FROM "ChannelAccess" AS c
    LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
    LEFT JOIN (
        SELECT c1.id, c1.channel, c1.tag, t2.id AS id0, t2.text
        FROM "ChannelHasTag" AS c1
        LEFT JOIN "Tag" AS t2 ON c1.tag = t2.id
    ) AS t0 ON c0.id = t0.channel
) AS t1 ON t.id = t1.user_id
LEFT JOIN (
    SELECT c2.id, c2.channel_id, c2.content, c2.created_at, c2.parent_id, c2.rating, c2.user_id, c3.id AS id0, c3.avatar, c3.bumps, c3.description, c3.flag, c3."Hidden", c3.language, c3.last_bump, c3.members, c3.name, c3.notification_sent, c3.notifications, c3.promo_post, c3.promo_post_interval, c3.promo_post_last, c3.promo_post_sent, c3.promo_post_time, c3.telegram_id, c3."Url", c3."user"
    FROM "Comment" AS c2
    INNER JOIN "Channel" AS c3 ON c2.channel_id = c3.id
) AS t3 ON t.id = t3.user_id
ORDER BY t.id, t1.id, t1.id0, t1.id1, t1.id00, t3.id
2024-02-04 17:39:26.540 +03:00 [INF] Received request for getProfilePictureAndUsername. Request hash: 5ec5950f142bca89e2aa6cb4127bdea9391929bfdb585a0fda8bc0406276e946
2024-02-04 17:39:26.541 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:39:26.549 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:39:26.554 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:39:26.557 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 17:39:26.563 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 17:39:26.567 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 17:39:26.571 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 17:39:26.576 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 17:39:26.579 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:39:26.582 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:39:26.587 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:39:26.592 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 17:39:26.595 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 17:39:26.598 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 17:39:26.601 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 17:39:26.607 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 17:39:26.610 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:39:26.613 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:39:26.616 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:39:26.623 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 17:39:26.627 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 17:39:26.630 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 17:39:26.637 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 17:39:26.640 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 17:39:26.642 +03:00 [INF] Executing OkObjectResult, writing value of type 'TgCheckerApi.Models.GetModels.UserProfileModel'.
2024-02-04 17:39:26.644 +03:00 [INF] Executed action TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi) in 116.8855ms
2024-02-04 17:39:26.645 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 17:39:26.646 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Auth - - - 200 28584 application/json;+charset=utf-8 126.7988ms
2024-02-04 17:39:26.918 +03:00 [INF] New task completed successfully. Hash: 5ec5950f142bca89e2aa6cb4127bdea9391929bfdb585a0fda8bc0406276e946
2024-02-04 17:39:26.924 +03:00 [INF] User profile updated in background for uwu.
2024-02-04 17:39:47.437 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:7256/api/Auth - -
2024-02-04 17:39:47.439 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:39:47.441 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:7256/api/Auth - - - 204 - - 4.6147ms
2024-02-04 17:39:47.447 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Auth - -
2024-02-04 17:39:47.448 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:39:47.450 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 17:39:47.453 +03:00 [INF] Route matched with {action = "GetMe", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TgCheckerApi.Models.GetModels.UserProfileModel]] GetMe() on controller TgCheckerApi.Controllers.AuthController (TgCheckerApi).
2024-02-04 17:39:47.462 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.avatar, t.chat_id, t.last_update, t.notification_settings, t.telegram_id, t.unique_key, t.username, t1.id, t1.channel_id, t1.user_id, t1.id0, t1.avatar, t1.bumps, t1.description, t1.flag, t1."Hidden", t1.language, t1.last_bump, t1.members, t1.name, t1.notification_sent, t1.notifications, t1.promo_post, t1.promo_post_interval, t1.promo_post_last, t1.promo_post_sent, t1.promo_post_time, t1.telegram_id, t1."Url", t1."user", t1.id1, t1.channel, t1.tag, t1.id00, t1.text, t3.id, t3.channel_id, t3.content, t3.created_at, t3.parent_id, t3.rating, t3.user_id, t3.id0, t3.avatar, t3.bumps, t3.description, t3.flag, t3."Hidden", t3.language, t3.last_bump, t3.members, t3.name, t3.notification_sent, t3.notifications, t3.promo_post, t3.promo_post_interval, t3.promo_post_last, t3.promo_post_sent, t3.promo_post_time, t3.telegram_id, t3."Url", t3."user"
FROM (
    SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
    FROM "User" AS u
    WHERE u.unique_key = @__uniqueKeyClaim_0
    LIMIT 2
) AS t
LEFT JOIN (
    SELECT c.id, c.channel_id, c.user_id, c0.id AS id0, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."Url", c0."user", t0.id AS id1, t0.channel, t0.tag, t0.id0 AS id00, t0.text
    FROM "ChannelAccess" AS c
    LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
    LEFT JOIN (
        SELECT c1.id, c1.channel, c1.tag, t2.id AS id0, t2.text
        FROM "ChannelHasTag" AS c1
        LEFT JOIN "Tag" AS t2 ON c1.tag = t2.id
    ) AS t0 ON c0.id = t0.channel
) AS t1 ON t.id = t1.user_id
LEFT JOIN (
    SELECT c2.id, c2.channel_id, c2.content, c2.created_at, c2.parent_id, c2.rating, c2.user_id, c3.id AS id0, c3.avatar, c3.bumps, c3.description, c3.flag, c3."Hidden", c3.language, c3.last_bump, c3.members, c3.name, c3.notification_sent, c3.notifications, c3.promo_post, c3.promo_post_interval, c3.promo_post_last, c3.promo_post_sent, c3.promo_post_time, c3.telegram_id, c3."Url", c3."user"
    FROM "Comment" AS c2
    INNER JOIN "Channel" AS c3 ON c2.channel_id = c3.id
) AS t3 ON t.id = t3.user_id
ORDER BY t.id, t1.id, t1.id0, t1.id1, t1.id00, t3.id
2024-02-04 17:39:47.475 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:39:47.475 +03:00 [INF] Received request for getProfilePictureAndUsername. Request hash: 5ec5950f142bca89e2aa6cb4127bdea9391929bfdb585a0fda8bc0406276e946
2024-02-04 17:39:47.480 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:39:47.491 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:39:47.495 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 17:39:47.502 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 17:39:47.506 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 17:39:47.510 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 17:39:47.513 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 17:39:47.520 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:39:47.525 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:39:47.530 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:39:47.536 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 17:39:47.540 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 17:39:47.543 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 17:39:47.549 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 17:39:47.553 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 17:39:47.557 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:39:47.559 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:39:47.566 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:39:47.568 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 17:39:47.572 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 17:39:47.576 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 17:39:47.583 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 17:39:47.587 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 17:39:47.594 +03:00 [INF] Executing OkObjectResult, writing value of type 'TgCheckerApi.Models.GetModels.UserProfileModel'.
2024-02-04 17:39:47.596 +03:00 [INF] Executed action TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi) in 138.1641ms
2024-02-04 17:39:47.597 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 17:39:47.598 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Auth - - - 200 28584 application/json;+charset=utf-8 151.2616ms
2024-02-04 17:39:47.800 +03:00 [INF] New task completed successfully. Hash: 5ec5950f142bca89e2aa6cb4127bdea9391929bfdb585a0fda8bc0406276e946
2024-02-04 17:39:47.801 +03:00 [INF] User profile updated in background for uwu.
2024-02-04 17:39:47.806 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:7256/api/User/PaymentHistory - -
2024-02-04 17:39:47.816 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:39:47.817 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:7256/api/User/PaymentHistory - - - 204 - - 12.6342ms
2024-02-04 17:39:47.817 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/User/PaymentHistory - -
2024-02-04 17:39:47.819 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:39:47.820 +03:00 [INF] Executing endpoint 'TgCheckerApi.MapperProfiles.UserController.GetPaymentHistory (TgCheckerApi)'
2024-02-04 17:39:47.821 +03:00 [INF] Route matched with {action = "GetPaymentHistory", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.GetModels.PaymentHistoryModel]]] GetPaymentHistory() on controller TgCheckerApi.MapperProfiles.UserController (TgCheckerApi).
2024-02-04 17:39:47.822 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:7256/api/Notification/UserNotifications - -
2024-02-04 17:39:47.827 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:39:47.828 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:7256/api/Notification/UserNotifications - - - 204 - - 6.7147ms
2024-02-04 17:39:47.829 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.avatar, t.chat_id, t.last_update, t.notification_settings, t.telegram_id, t.unique_key, t.username, t1.id, t1.channel_id, t1.user_id, t1.id0, t1.avatar, t1.bumps, t1.description, t1.flag, t1."Hidden", t1.language, t1.last_bump, t1.members, t1.name, t1.notification_sent, t1.notifications, t1.promo_post, t1.promo_post_interval, t1.promo_post_last, t1.promo_post_sent, t1.promo_post_time, t1.telegram_id, t1."Url", t1."user", t1.id1, t1.channel, t1.tag, t1.id00, t1.text, t3.id, t3.channel_id, t3.content, t3.created_at, t3.parent_id, t3.rating, t3.user_id, t3.id0, t3.avatar, t3.bumps, t3.description, t3.flag, t3."Hidden", t3.language, t3.last_bump, t3.members, t3.name, t3.notification_sent, t3.notifications, t3.promo_post, t3.promo_post_interval, t3.promo_post_last, t3.promo_post_sent, t3.promo_post_time, t3.telegram_id, t3."Url", t3."user"
FROM (
    SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
    FROM "User" AS u
    WHERE u.unique_key = @__uniqueKeyClaim_0
    LIMIT 2
) AS t
LEFT JOIN (
    SELECT c.id, c.channel_id, c.user_id, c0.id AS id0, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."Url", c0."user", t0.id AS id1, t0.channel, t0.tag, t0.id0 AS id00, t0.text
    FROM "ChannelAccess" AS c
    LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
    LEFT JOIN (
        SELECT c1.id, c1.channel, c1.tag, t2.id AS id0, t2.text
        FROM "ChannelHasTag" AS c1
        LEFT JOIN "Tag" AS t2 ON c1.tag = t2.id
    ) AS t0 ON c0.id = t0.channel
) AS t1 ON t.id = t1.user_id
LEFT JOIN (
    SELECT c2.id, c2.channel_id, c2.content, c2.created_at, c2.parent_id, c2.rating, c2.user_id, c3.id AS id0, c3.avatar, c3.bumps, c3.description, c3.flag, c3."Hidden", c3.language, c3.last_bump, c3.members, c3.name, c3.notification_sent, c3.notifications, c3.promo_post, c3.promo_post_interval, c3.promo_post_last, c3.promo_post_sent, c3.promo_post_time, c3.telegram_id, c3."Url", c3."user"
    FROM "Comment" AS c2
    INNER JOIN "Channel" AS c3 ON c2.channel_id = c3.id
) AS t3 ON t.id = t3.user_id
ORDER BY t.id, t1.id, t1.id0, t1.id1, t1.id00, t3.id
2024-02-04 17:39:47.830 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification/UserNotifications - -
2024-02-04 17:39:47.844 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:39:47.845 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetUserNotifications (TgCheckerApi)'
2024-02-04 17:39:47.847 +03:00 [INF] Route matched with {action = "GetUserNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetUserNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-04 17:39:47.839 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.channel_id AS "ChannelId", p.id AS "PaymentId", p.subtype_id AS "ChannelSubscriptionType", p.created_at AS "PurchaseDate", p.duration AS "SubscriptionDuration", p.amount_value AS "AmountValue", p.amount_currency AS "AmountCurrency"
FROM "Payments" AS p
WHERE p.user_id = @__userId_0
2024-02-04 17:39:47.853 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "User" AS u
WHERE u.unique_key = @__uniqueKeyClaim_0
LIMIT 2
2024-02-04 17:39:47.858 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.GetModels.PaymentHistoryModel, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-04 17:39:47.861 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.user_id = @__user_Id_0
2024-02-04 17:39:47.864 +03:00 [INF] Executed action TgCheckerApi.MapperProfiles.UserController.GetPaymentHistory (TgCheckerApi) in 38.5565ms
2024-02-04 17:39:47.868 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.BaseModels.Notification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-04 17:39:47.870 +03:00 [INF] Executed endpoint 'TgCheckerApi.MapperProfiles.UserController.GetPaymentHistory (TgCheckerApi)'
2024-02-04 17:39:47.874 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetUserNotifications (TgCheckerApi) in 24.51ms
2024-02-04 17:39:47.875 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/User/PaymentHistory - - - 200 1868 application/json;+charset=utf-8 57.4743ms
2024-02-04 17:39:47.876 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetUserNotifications (TgCheckerApi)'
2024-02-04 17:39:47.880 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification/UserNotifications - - - 200 524 application/json;+charset=utf-8 49.7326ms
2024-02-04 17:39:47.970 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Auth - -
2024-02-04 17:39:47.972 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:39:47.974 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 17:39:47.975 +03:00 [INF] Route matched with {action = "GetMe", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TgCheckerApi.Models.GetModels.UserProfileModel]] GetMe() on controller TgCheckerApi.Controllers.AuthController (TgCheckerApi).
2024-02-04 17:39:47.985 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.avatar, t.chat_id, t.last_update, t.notification_settings, t.telegram_id, t.unique_key, t.username, t1.id, t1.channel_id, t1.user_id, t1.id0, t1.avatar, t1.bumps, t1.description, t1.flag, t1."Hidden", t1.language, t1.last_bump, t1.members, t1.name, t1.notification_sent, t1.notifications, t1.promo_post, t1.promo_post_interval, t1.promo_post_last, t1.promo_post_sent, t1.promo_post_time, t1.telegram_id, t1."Url", t1."user", t1.id1, t1.channel, t1.tag, t1.id00, t1.text, t3.id, t3.channel_id, t3.content, t3.created_at, t3.parent_id, t3.rating, t3.user_id, t3.id0, t3.avatar, t3.bumps, t3.description, t3.flag, t3."Hidden", t3.language, t3.last_bump, t3.members, t3.name, t3.notification_sent, t3.notifications, t3.promo_post, t3.promo_post_interval, t3.promo_post_last, t3.promo_post_sent, t3.promo_post_time, t3.telegram_id, t3."Url", t3."user"
FROM (
    SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
    FROM "User" AS u
    WHERE u.unique_key = @__uniqueKeyClaim_0
    LIMIT 2
) AS t
LEFT JOIN (
    SELECT c.id, c.channel_id, c.user_id, c0.id AS id0, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."Url", c0."user", t0.id AS id1, t0.channel, t0.tag, t0.id0 AS id00, t0.text
    FROM "ChannelAccess" AS c
    LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
    LEFT JOIN (
        SELECT c1.id, c1.channel, c1.tag, t2.id AS id0, t2.text
        FROM "ChannelHasTag" AS c1
        LEFT JOIN "Tag" AS t2 ON c1.tag = t2.id
    ) AS t0 ON c0.id = t0.channel
) AS t1 ON t.id = t1.user_id
LEFT JOIN (
    SELECT c2.id, c2.channel_id, c2.content, c2.created_at, c2.parent_id, c2.rating, c2.user_id, c3.id AS id0, c3.avatar, c3.bumps, c3.description, c3.flag, c3."Hidden", c3.language, c3.last_bump, c3.members, c3.name, c3.notification_sent, c3.notifications, c3.promo_post, c3.promo_post_interval, c3.promo_post_last, c3.promo_post_sent, c3.promo_post_time, c3.telegram_id, c3."Url", c3."user"
    FROM "Comment" AS c2
    INNER JOIN "Channel" AS c3 ON c2.channel_id = c3.id
) AS t3 ON t.id = t3.user_id
ORDER BY t.id, t1.id, t1.id0, t1.id1, t1.id00, t3.id
2024-02-04 17:39:48.005 +03:00 [INF] Received request for getProfilePictureAndUsername. Request hash: 5ec5950f142bca89e2aa6cb4127bdea9391929bfdb585a0fda8bc0406276e946
2024-02-04 17:39:48.006 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:39:48.013 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:39:48.019 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:39:48.025 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 17:39:48.032 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 17:39:48.037 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 17:39:48.041 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 17:39:48.049 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 17:39:48.052 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:39:48.056 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:39:48.061 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:39:48.067 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 17:39:48.071 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 17:39:48.076 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 17:39:48.084 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 17:39:48.088 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 17:39:48.092 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:39:48.099 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:39:48.102 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:39:48.109 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 17:39:48.115 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 17:39:48.119 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 17:39:48.122 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 17:39:48.127 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 17:39:48.130 +03:00 [INF] Executing OkObjectResult, writing value of type 'TgCheckerApi.Models.GetModels.UserProfileModel'.
2024-02-04 17:39:48.132 +03:00 [INF] Executed action TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi) in 152.689ms
2024-02-04 17:39:48.133 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 17:39:48.135 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Auth - - - 200 28584 application/json;+charset=utf-8 164.1470ms
2024-02-04 17:39:48.415 +03:00 [INF] New task completed successfully. Hash: 5ec5950f142bca89e2aa6cb4127bdea9391929bfdb585a0fda8bc0406276e946
2024-02-04 17:39:48.420 +03:00 [INF] User profile updated in background for uwu.
2024-02-04 17:49:12.857 +03:00 [INF] User profile is available. Using 'C:\Users\timar\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-04 17:49:13.013 +03:00 [INF] Default Quartz.NET properties loaded from embedded resource file
2024-02-04 17:49:13.051 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-02-04 17:49:13.056 +03:00 [INF] Quartz Scheduler created
2024-02-04 17:49:13.056 +03:00 [INF] RAMJobStore initialized.
2024-02-04 17:49:13.057 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-02-04 17:49:13.058 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-02-04 17:49:13.059 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-02-04 17:49:13.060 +03:00 [INF] JobFactory set to: TgCheckerApi.Job.QuartzJobFactory
2024-02-04 17:49:13.103 +03:00 [INF] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2024-02-04 17:49:13.187 +03:00 [INF] Now listening on: http://localhost:7256
2024-02-04 17:49:13.188 +03:00 [INF] Now listening on: http://localhost:5244
2024-02-04 17:49:13.192 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-04 17:49:13.193 +03:00 [INF] Hosting environment: Development
2024-02-04 17:49:13.194 +03:00 [INF] Content root path: C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\
2024-02-04 17:49:13.694 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 17:49:13.729 +03:00 [WRN] Failed to determine the https port for redirect.
2024-02-04 17:49:13.804 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 17:49:13.838 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 17:49:13.841 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 150.2071ms
2024-02-04 17:49:13.845 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=PRvqIA68NhXBbNPQKx_Ujw - -
2024-02-04 17:49:13.854 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 17:49:13.872 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/index.html - -
2024-02-04 17:49:14.090 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/index.html - - - 200 - text/html;charset=utf-8 218.1605ms
2024-02-04 17:49:14.093 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_vs/browserLink - -
2024-02-04 17:49:14.095 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - -
2024-02-04 17:49:14.100 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - - - 200 12356 application/javascript;+charset=utf-8 5.5853ms
2024-02-04 17:49:14.111 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 17.9075ms
2024-02-04 17:49:14.177 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - -
2024-02-04 17:49:14.241 +03:00 [ERR] An unhandled exception has occurred while executing the request.
Swashbuckle.AspNetCore.SwaggerGen.SwaggerGeneratorException: Ambiguous HTTP method for action - TgCheckerApi.Controllers.AuthController.UpdateUserProfileIfNeeded (TgCheckerApi). Actions require an explicit HttpMethod binding for Swagger/OpenAPI 3.0
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GenerateOperations(IEnumerable`1 apiDescriptions, SchemaRepository schemaRepository)
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GeneratePaths(IEnumerable`1 apiDescriptions, SchemaRepository schemaRepository)
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GetSwaggerDocumentWithoutFilters(String documentName, String host, String basePath)
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GetSwaggerAsync(String documentName, String host, String basePath)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2024-02-04 17:49:14.262 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - - - 500 - text/plain;+charset=utf-8 84.5736ms
2024-02-04 17:49:21.634 +03:00 [INF] User profile is available. Using 'C:\Users\timar\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-04 17:49:21.794 +03:00 [INF] Default Quartz.NET properties loaded from embedded resource file
2024-02-04 17:49:21.832 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-02-04 17:49:21.836 +03:00 [INF] Quartz Scheduler created
2024-02-04 17:49:21.837 +03:00 [INF] RAMJobStore initialized.
2024-02-04 17:49:21.838 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-02-04 17:49:21.839 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-02-04 17:49:21.840 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-02-04 17:49:21.841 +03:00 [INF] JobFactory set to: TgCheckerApi.Job.QuartzJobFactory
2024-02-04 17:49:21.881 +03:00 [INF] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2024-02-04 17:49:21.960 +03:00 [INF] Now listening on: http://localhost:7256
2024-02-04 17:49:21.961 +03:00 [INF] Now listening on: http://localhost:5244
2024-02-04 17:49:21.965 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-04 17:49:21.966 +03:00 [INF] Hosting environment: Development
2024-02-04 17:49:21.966 +03:00 [INF] Content root path: C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\
2024-02-04 17:49:22.599 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/index.html - -
2024-02-04 17:49:22.844 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/index.html - - - 200 - text/html;charset=utf-8 247.6114ms
2024-02-04 17:49:22.853 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_vs/browserLink - -
2024-02-04 17:49:22.854 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - -
2024-02-04 17:49:22.860 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - - - 200 12356 application/javascript;+charset=utf-8 5.6565ms
2024-02-04 17:49:22.869 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 16.5569ms
2024-02-04 17:49:22.928 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - -
2024-02-04 17:49:23.050 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 121.9104ms
2024-02-04 17:49:23.888 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 17:49:23.893 +03:00 [WRN] Failed to determine the https port for redirect.
2024-02-04 17:49:23.968 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 17:49:23.983 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 17:49:23.983 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 95.8518ms
2024-02-04 17:49:23.989 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=F2zD1plOaSA4mI9DH5jGYA - -
2024-02-04 17:49:23.991 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 17:49:32.106 +03:00 [INF] Start processing HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-04 17:49:32.116 +03:00 [INF] Sending HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-04 17:49:32.668 +03:00 [INF] Received HTTP response headers after 546.0491ms - 200
2024-02-04 17:49:32.672 +03:00 [INF] End processing HTTP request after 573.6363ms - 200
2024-02-04 17:49:32.678 +03:00 [INF] Successfully processed all channels via HTTP request at: {DateTime.UtcNow}
2024-02-04 17:49:32.866 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:7256/api/Auth - -
2024-02-04 17:49:32.868 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:49:32.870 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:7256/api/Auth - - - 204 - - 3.3298ms
2024-02-04 17:49:32.870 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Auth - -
2024-02-04 17:49:32.871 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:49:32.973 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 17:49:32.993 +03:00 [INF] Route matched with {action = "GetMe", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TgCheckerApi.Models.GetModels.UserProfileModel]] GetMe() on controller TgCheckerApi.Controllers.AuthController (TgCheckerApi).
2024-02-04 17:49:33.024 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:7256/api/Notification/UserNotifications - -
2024-02-04 17:49:33.025 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:49:33.025 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:7256/api/Notification/UserNotifications - - - 204 - - 1.4890ms
2024-02-04 17:49:33.026 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification/UserNotifications - -
2024-02-04 17:49:33.027 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:49:33.029 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetUserNotifications (TgCheckerApi)'
2024-02-04 17:49:33.033 +03:00 [INF] Route matched with {action = "GetUserNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetUserNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-04 17:49:35.658 +03:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2024-02-04 17:49:36.096 +03:00 [INF] Executed DbCommand (97ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "User" AS u
WHERE u.unique_key = @__uniqueKeyClaim_0
LIMIT 2
2024-02-04 17:49:36.096 +03:00 [INF] Executed DbCommand (97ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.avatar, t.chat_id, t.last_update, t.notification_settings, t.telegram_id, t.unique_key, t.username, t1.id, t1.channel_id, t1.user_id, t1.id0, t1.avatar, t1.bumps, t1.description, t1.flag, t1."Hidden", t1.language, t1.last_bump, t1.members, t1.name, t1.notification_sent, t1.notifications, t1.promo_post, t1.promo_post_interval, t1.promo_post_last, t1.promo_post_sent, t1.promo_post_time, t1.telegram_id, t1."Url", t1."user", t1.id1, t1.channel, t1.tag, t1.id00, t1.text, t3.id, t3.channel_id, t3.content, t3.created_at, t3.parent_id, t3.rating, t3.user_id, t3.id0, t3.avatar, t3.bumps, t3.description, t3.flag, t3."Hidden", t3.language, t3.last_bump, t3.members, t3.name, t3.notification_sent, t3.notifications, t3.promo_post, t3.promo_post_interval, t3.promo_post_last, t3.promo_post_sent, t3.promo_post_time, t3.telegram_id, t3."Url", t3."user"
FROM (
    SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
    FROM "User" AS u
    WHERE u.unique_key = @__uniqueKeyClaim_0
    LIMIT 2
) AS t
LEFT JOIN (
    SELECT c.id, c.channel_id, c.user_id, c0.id AS id0, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."Url", c0."user", t0.id AS id1, t0.channel, t0.tag, t0.id0 AS id00, t0.text
    FROM "ChannelAccess" AS c
    LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
    LEFT JOIN (
        SELECT c1.id, c1.channel, c1.tag, t2.id AS id0, t2.text
        FROM "ChannelHasTag" AS c1
        LEFT JOIN "Tag" AS t2 ON c1.tag = t2.id
    ) AS t0 ON c0.id = t0.channel
) AS t1 ON t.id = t1.user_id
LEFT JOIN (
    SELECT c2.id, c2.channel_id, c2.content, c2.created_at, c2.parent_id, c2.rating, c2.user_id, c3.id AS id0, c3.avatar, c3.bumps, c3.description, c3.flag, c3."Hidden", c3.language, c3.last_bump, c3.members, c3.name, c3.notification_sent, c3.notifications, c3.promo_post, c3.promo_post_interval, c3.promo_post_last, c3.promo_post_sent, c3.promo_post_time, c3.telegram_id, c3."Url", c3."user"
    FROM "Comment" AS c2
    INNER JOIN "Channel" AS c3 ON c2.channel_id = c3.id
) AS t3 ON t.id = t3.user_id
ORDER BY t.id, t1.id, t1.id0, t1.id1, t1.id00, t3.id
2024-02-04 17:49:36.320 +03:00 [INF] Executed DbCommand (13ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.user_id = @__user_Id_0
2024-02-04 17:49:36.355 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.BaseModels.Notification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-04 17:49:36.373 +03:00 [INF] Received request for getProfilePictureAndUsername. Request hash: 5ec5950f142bca89e2aa6cb4127bdea9391929bfdb585a0fda8bc0406276e946
2024-02-04 17:49:36.393 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetUserNotifications (TgCheckerApi) in 3348.3797ms
2024-02-04 17:49:36.397 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetUserNotifications (TgCheckerApi)'
2024-02-04 17:49:36.423 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification/UserNotifications - - - 200 524 application/json;+charset=utf-8 3396.9893ms
2024-02-04 17:49:36.471 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:49:36.498 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:49:36.506 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:49:36.516 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 17:49:36.547 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 17:49:36.659 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 17:49:36.698 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 17:49:36.742 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 17:49:36.751 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:49:36.754 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:49:36.756 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:49:36.758 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 17:49:36.762 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 17:49:36.766 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 17:49:36.792 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 17:49:36.795 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 17:49:36.798 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:49:36.801 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:49:36.803 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:49:36.806 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 17:49:36.809 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 17:49:36.811 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 17:49:36.814 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 17:49:36.818 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 17:49:36.822 +03:00 [INF] Executing OkObjectResult, writing value of type 'TgCheckerApi.Models.GetModels.UserProfileModel'.
2024-02-04 17:49:36.840 +03:00 [INF] Executed action TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi) in 3844.2145ms
2024-02-04 17:49:36.841 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 17:49:36.841 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Auth - -
2024-02-04 17:49:36.842 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Auth - - - 200 28584 application/json;+charset=utf-8 3971.9404ms
2024-02-04 17:49:36.843 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:49:36.845 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 17:49:36.846 +03:00 [INF] Route matched with {action = "GetMe", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TgCheckerApi.Models.GetModels.UserProfileModel]] GetMe() on controller TgCheckerApi.Controllers.AuthController (TgCheckerApi).
2024-02-04 17:49:36.911 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.avatar, t.chat_id, t.last_update, t.notification_settings, t.telegram_id, t.unique_key, t.username, t1.id, t1.channel_id, t1.user_id, t1.id0, t1.avatar, t1.bumps, t1.description, t1.flag, t1."Hidden", t1.language, t1.last_bump, t1.members, t1.name, t1.notification_sent, t1.notifications, t1.promo_post, t1.promo_post_interval, t1.promo_post_last, t1.promo_post_sent, t1.promo_post_time, t1.telegram_id, t1."Url", t1."user", t1.id1, t1.channel, t1.tag, t1.id00, t1.text, t3.id, t3.channel_id, t3.content, t3.created_at, t3.parent_id, t3.rating, t3.user_id, t3.id0, t3.avatar, t3.bumps, t3.description, t3.flag, t3."Hidden", t3.language, t3.last_bump, t3.members, t3.name, t3.notification_sent, t3.notifications, t3.promo_post, t3.promo_post_interval, t3.promo_post_last, t3.promo_post_sent, t3.promo_post_time, t3.telegram_id, t3."Url", t3."user"
FROM (
    SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
    FROM "User" AS u
    WHERE u.unique_key = @__uniqueKeyClaim_0
    LIMIT 2
) AS t
LEFT JOIN (
    SELECT c.id, c.channel_id, c.user_id, c0.id AS id0, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."Url", c0."user", t0.id AS id1, t0.channel, t0.tag, t0.id0 AS id00, t0.text
    FROM "ChannelAccess" AS c
    LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
    LEFT JOIN (
        SELECT c1.id, c1.channel, c1.tag, t2.id AS id0, t2.text
        FROM "ChannelHasTag" AS c1
        LEFT JOIN "Tag" AS t2 ON c1.tag = t2.id
    ) AS t0 ON c0.id = t0.channel
) AS t1 ON t.id = t1.user_id
LEFT JOIN (
    SELECT c2.id, c2.channel_id, c2.content, c2.created_at, c2.parent_id, c2.rating, c2.user_id, c3.id AS id0, c3.avatar, c3.bumps, c3.description, c3.flag, c3."Hidden", c3.language, c3.last_bump, c3.members, c3.name, c3.notification_sent, c3.notifications, c3.promo_post, c3.promo_post_interval, c3.promo_post_last, c3.promo_post_sent, c3.promo_post_time, c3.telegram_id, c3."Url", c3."user"
    FROM "Comment" AS c2
    INNER JOIN "Channel" AS c3 ON c2.channel_id = c3.id
) AS t3 ON t.id = t3.user_id
ORDER BY t.id, t1.id, t1.id0, t1.id1, t1.id00, t3.id
2024-02-04 17:49:36.921 +03:00 [INF] Received request for getProfilePictureAndUsername. Request hash: 5ec5950f142bca89e2aa6cb4127bdea9391929bfdb585a0fda8bc0406276e946
2024-02-04 17:49:36.923 +03:00 [INF] Request found in cache. Hash: 5ec5950f142bca89e2aa6cb4127bdea9391929bfdb585a0fda8bc0406276e946
2024-02-04 17:49:36.922 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:49:36.929 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:49:36.932 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:49:36.934 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 17:49:36.939 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 17:49:36.944 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 17:49:36.948 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 17:49:36.950 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 17:49:36.955 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:49:36.959 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:49:36.961 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:49:36.963 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 17:49:36.965 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 17:49:36.970 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 17:49:36.973 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 17:49:36.975 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 17:49:36.978 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:49:36.980 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:49:36.982 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:49:36.987 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 17:49:36.989 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 17:49:36.992 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 17:49:36.994 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:7256/api/User/PaymentHistory - -
2024-02-04 17:49:36.996 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:49:36.996 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 17:49:36.996 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:7256/api/User/PaymentHistory - - - 204 - - 2.2426ms
2024-02-04 17:49:37.001 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/User/PaymentHistory - -
2024-02-04 17:49:37.001 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 17:49:37.002 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:49:37.004 +03:00 [INF] Executing OkObjectResult, writing value of type 'TgCheckerApi.Models.GetModels.UserProfileModel'.
2024-02-04 17:49:37.005 +03:00 [INF] Executing endpoint 'TgCheckerApi.MapperProfiles.UserController.GetPaymentHistory (TgCheckerApi)'
2024-02-04 17:49:37.006 +03:00 [INF] Executed action TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi) in 157.6742ms
2024-02-04 17:49:37.008 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 17:49:37.009 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Auth - - - 200 28584 application/json;+charset=utf-8 167.8009ms
2024-02-04 17:49:37.010 +03:00 [INF] Route matched with {action = "GetPaymentHistory", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.GetModels.PaymentHistoryModel]]] GetPaymentHistory() on controller TgCheckerApi.MapperProfiles.UserController (TgCheckerApi).
2024-02-04 17:49:37.018 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.avatar, t.chat_id, t.last_update, t.notification_settings, t.telegram_id, t.unique_key, t.username, t1.id, t1.channel_id, t1.user_id, t1.id0, t1.avatar, t1.bumps, t1.description, t1.flag, t1."Hidden", t1.language, t1.last_bump, t1.members, t1.name, t1.notification_sent, t1.notifications, t1.promo_post, t1.promo_post_interval, t1.promo_post_last, t1.promo_post_sent, t1.promo_post_time, t1.telegram_id, t1."Url", t1."user", t1.id1, t1.channel, t1.tag, t1.id00, t1.text, t3.id, t3.channel_id, t3.content, t3.created_at, t3.parent_id, t3.rating, t3.user_id, t3.id0, t3.avatar, t3.bumps, t3.description, t3.flag, t3."Hidden", t3.language, t3.last_bump, t3.members, t3.name, t3.notification_sent, t3.notifications, t3.promo_post, t3.promo_post_interval, t3.promo_post_last, t3.promo_post_sent, t3.promo_post_time, t3.telegram_id, t3."Url", t3."user"
FROM (
    SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
    FROM "User" AS u
    WHERE u.unique_key = @__uniqueKeyClaim_0
    LIMIT 2
) AS t
LEFT JOIN (
    SELECT c.id, c.channel_id, c.user_id, c0.id AS id0, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."Url", c0."user", t0.id AS id1, t0.channel, t0.tag, t0.id0 AS id00, t0.text
    FROM "ChannelAccess" AS c
    LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
    LEFT JOIN (
        SELECT c1.id, c1.channel, c1.tag, t2.id AS id0, t2.text
        FROM "ChannelHasTag" AS c1
        LEFT JOIN "Tag" AS t2 ON c1.tag = t2.id
    ) AS t0 ON c0.id = t0.channel
) AS t1 ON t.id = t1.user_id
LEFT JOIN (
    SELECT c2.id, c2.channel_id, c2.content, c2.created_at, c2.parent_id, c2.rating, c2.user_id, c3.id AS id0, c3.avatar, c3.bumps, c3.description, c3.flag, c3."Hidden", c3.language, c3.last_bump, c3.members, c3.name, c3.notification_sent, c3.notifications, c3.promo_post, c3.promo_post_interval, c3.promo_post_last, c3.promo_post_sent, c3.promo_post_time, c3.telegram_id, c3."Url", c3."user"
    FROM "Comment" AS c2
    INNER JOIN "Channel" AS c3 ON c2.channel_id = c3.id
) AS t3 ON t.id = t3.user_id
ORDER BY t.id, t1.id, t1.id0, t1.id1, t1.id00, t3.id
2024-02-04 17:49:37.036 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.channel_id AS "ChannelId", p.id AS "PaymentId", p.subtype_id AS "ChannelSubscriptionType", p.created_at AS "PurchaseDate", p.duration AS "SubscriptionDuration", p.amount_value AS "AmountValue", p.amount_currency AS "AmountCurrency"
FROM "Payments" AS p
WHERE p.user_id = @__userId_0
2024-02-04 17:49:37.040 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.GetModels.PaymentHistoryModel, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-04 17:49:37.046 +03:00 [INF] Executed action TgCheckerApi.MapperProfiles.UserController.GetPaymentHistory (TgCheckerApi) in 34.7347ms
2024-02-04 17:49:37.048 +03:00 [INF] Executed endpoint 'TgCheckerApi.MapperProfiles.UserController.GetPaymentHistory (TgCheckerApi)'
2024-02-04 17:49:37.049 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/User/PaymentHistory - - - 200 1868 application/json;+charset=utf-8 48.0102ms
2024-02-04 17:49:42.941 +03:00 [INF] Executed endpoint '/BotHub'
2024-02-04 17:49:42.942 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/BotHub?id=F2zD1plOaSA4mI9DH5jGYA - - - 101 - - 18952.8324ms
2024-02-04 17:49:45.767 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 17:49:45.768 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 17:49:45.771 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 17:49:45.772 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 5.0172ms
2024-02-04 17:49:45.784 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=CmZNIgZAhlcE7Lv6ZNx5TQ - -
2024-02-04 17:49:45.784 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 17:49:54.330 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:7256/api/Auth - -
2024-02-04 17:49:54.331 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:49:54.332 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:7256/api/Auth - - - 204 - - 1.8811ms
2024-02-04 17:49:54.332 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Auth - -
2024-02-04 17:49:54.333 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:49:54.334 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 17:49:54.335 +03:00 [INF] Route matched with {action = "GetMe", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TgCheckerApi.Models.GetModels.UserProfileModel]] GetMe() on controller TgCheckerApi.Controllers.AuthController (TgCheckerApi).
2024-02-04 17:49:54.342 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.avatar, t.chat_id, t.last_update, t.notification_settings, t.telegram_id, t.unique_key, t.username, t1.id, t1.channel_id, t1.user_id, t1.id0, t1.avatar, t1.bumps, t1.description, t1.flag, t1."Hidden", t1.language, t1.last_bump, t1.members, t1.name, t1.notification_sent, t1.notifications, t1.promo_post, t1.promo_post_interval, t1.promo_post_last, t1.promo_post_sent, t1.promo_post_time, t1.telegram_id, t1."Url", t1."user", t1.id1, t1.channel, t1.tag, t1.id00, t1.text, t3.id, t3.channel_id, t3.content, t3.created_at, t3.parent_id, t3.rating, t3.user_id, t3.id0, t3.avatar, t3.bumps, t3.description, t3.flag, t3."Hidden", t3.language, t3.last_bump, t3.members, t3.name, t3.notification_sent, t3.notifications, t3.promo_post, t3.promo_post_interval, t3.promo_post_last, t3.promo_post_sent, t3.promo_post_time, t3.telegram_id, t3."Url", t3."user"
FROM (
    SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
    FROM "User" AS u
    WHERE u.unique_key = @__uniqueKeyClaim_0
    LIMIT 2
) AS t
LEFT JOIN (
    SELECT c.id, c.channel_id, c.user_id, c0.id AS id0, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."Url", c0."user", t0.id AS id1, t0.channel, t0.tag, t0.id0 AS id00, t0.text
    FROM "ChannelAccess" AS c
    LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
    LEFT JOIN (
        SELECT c1.id, c1.channel, c1.tag, t2.id AS id0, t2.text
        FROM "ChannelHasTag" AS c1
        LEFT JOIN "Tag" AS t2 ON c1.tag = t2.id
    ) AS t0 ON c0.id = t0.channel
) AS t1 ON t.id = t1.user_id
LEFT JOIN (
    SELECT c2.id, c2.channel_id, c2.content, c2.created_at, c2.parent_id, c2.rating, c2.user_id, c3.id AS id0, c3.avatar, c3.bumps, c3.description, c3.flag, c3."Hidden", c3.language, c3.last_bump, c3.members, c3.name, c3.notification_sent, c3.notifications, c3.promo_post, c3.promo_post_interval, c3.promo_post_last, c3.promo_post_sent, c3.promo_post_time, c3.telegram_id, c3."Url", c3."user"
    FROM "Comment" AS c2
    INNER JOIN "Channel" AS c3 ON c2.channel_id = c3.id
) AS t3 ON t.id = t3.user_id
ORDER BY t.id, t1.id, t1.id0, t1.id1, t1.id00, t3.id
2024-02-04 17:49:54.348 +03:00 [INF] Received request for getProfilePictureAndUsername. Request hash: 5ec5950f142bca89e2aa6cb4127bdea9391929bfdb585a0fda8bc0406276e946
2024-02-04 17:49:54.348 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:49:54.348 +03:00 [INF] Request found in cache. Hash: 5ec5950f142bca89e2aa6cb4127bdea9391929bfdb585a0fda8bc0406276e946
2024-02-04 17:49:54.354 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:49:54.361 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:49:54.364 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 17:49:54.368 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 17:49:54.375 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 17:49:54.385 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 17:49:54.392 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 17:49:54.395 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:49:54.397 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:49:54.400 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:49:54.404 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 17:49:54.407 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 17:49:54.411 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 17:49:54.413 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 17:49:54.415 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 17:49:54.420 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:49:54.422 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:49:54.424 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:49:54.428 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 17:49:54.435 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 17:49:54.439 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 17:49:54.441 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 17:49:54.444 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 17:49:54.446 +03:00 [INF] Executing OkObjectResult, writing value of type 'TgCheckerApi.Models.GetModels.UserProfileModel'.
2024-02-04 17:49:54.447 +03:00 [INF] Executed action TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi) in 108.715ms
2024-02-04 17:49:54.448 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 17:49:54.451 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Auth - - - 200 28584 application/json;+charset=utf-8 118.5384ms
2024-02-04 17:49:54.648 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:7256/api/User/PaymentHistory - -
2024-02-04 17:49:54.649 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:49:54.650 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:7256/api/User/PaymentHistory - - - 204 - - 1.7386ms
2024-02-04 17:49:54.651 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/User/PaymentHistory - -
2024-02-04 17:49:54.651 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:49:54.653 +03:00 [INF] Executing endpoint 'TgCheckerApi.MapperProfiles.UserController.GetPaymentHistory (TgCheckerApi)'
2024-02-04 17:49:54.654 +03:00 [INF] Route matched with {action = "GetPaymentHistory", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.GetModels.PaymentHistoryModel]]] GetPaymentHistory() on controller TgCheckerApi.MapperProfiles.UserController (TgCheckerApi).
2024-02-04 17:49:54.659 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.avatar, t.chat_id, t.last_update, t.notification_settings, t.telegram_id, t.unique_key, t.username, t1.id, t1.channel_id, t1.user_id, t1.id0, t1.avatar, t1.bumps, t1.description, t1.flag, t1."Hidden", t1.language, t1.last_bump, t1.members, t1.name, t1.notification_sent, t1.notifications, t1.promo_post, t1.promo_post_interval, t1.promo_post_last, t1.promo_post_sent, t1.promo_post_time, t1.telegram_id, t1."Url", t1."user", t1.id1, t1.channel, t1.tag, t1.id00, t1.text, t3.id, t3.channel_id, t3.content, t3.created_at, t3.parent_id, t3.rating, t3.user_id, t3.id0, t3.avatar, t3.bumps, t3.description, t3.flag, t3."Hidden", t3.language, t3.last_bump, t3.members, t3.name, t3.notification_sent, t3.notifications, t3.promo_post, t3.promo_post_interval, t3.promo_post_last, t3.promo_post_sent, t3.promo_post_time, t3.telegram_id, t3."Url", t3."user"
FROM (
    SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
    FROM "User" AS u
    WHERE u.unique_key = @__uniqueKeyClaim_0
    LIMIT 2
) AS t
LEFT JOIN (
    SELECT c.id, c.channel_id, c.user_id, c0.id AS id0, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."Url", c0."user", t0.id AS id1, t0.channel, t0.tag, t0.id0 AS id00, t0.text
    FROM "ChannelAccess" AS c
    LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
    LEFT JOIN (
        SELECT c1.id, c1.channel, c1.tag, t2.id AS id0, t2.text
        FROM "ChannelHasTag" AS c1
        LEFT JOIN "Tag" AS t2 ON c1.tag = t2.id
    ) AS t0 ON c0.id = t0.channel
) AS t1 ON t.id = t1.user_id
LEFT JOIN (
    SELECT c2.id, c2.channel_id, c2.content, c2.created_at, c2.parent_id, c2.rating, c2.user_id, c3.id AS id0, c3.avatar, c3.bumps, c3.description, c3.flag, c3."Hidden", c3.language, c3.last_bump, c3.members, c3.name, c3.notification_sent, c3.notifications, c3.promo_post, c3.promo_post_interval, c3.promo_post_last, c3.promo_post_sent, c3.promo_post_time, c3.telegram_id, c3."Url", c3."user"
    FROM "Comment" AS c2
    INNER JOIN "Channel" AS c3 ON c2.channel_id = c3.id
) AS t3 ON t.id = t3.user_id
ORDER BY t.id, t1.id, t1.id0, t1.id1, t1.id00, t3.id
2024-02-04 17:49:54.668 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.channel_id AS "ChannelId", p.id AS "PaymentId", p.subtype_id AS "ChannelSubscriptionType", p.created_at AS "PurchaseDate", p.duration AS "SubscriptionDuration", p.amount_value AS "AmountValue", p.amount_currency AS "AmountCurrency"
FROM "Payments" AS p
WHERE p.user_id = @__userId_0
2024-02-04 17:49:54.673 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.GetModels.PaymentHistoryModel, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-04 17:49:54.674 +03:00 [INF] Executed action TgCheckerApi.MapperProfiles.UserController.GetPaymentHistory (TgCheckerApi) in 18.7581ms
2024-02-04 17:49:54.675 +03:00 [INF] Executed endpoint 'TgCheckerApi.MapperProfiles.UserController.GetPaymentHistory (TgCheckerApi)'
2024-02-04 17:49:54.676 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/User/PaymentHistory - - - 200 1868 application/json;+charset=utf-8 25.5582ms
2024-02-04 17:49:54.683 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:7256/api/Notification/UserNotifications - -
2024-02-04 17:49:54.684 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:49:54.685 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:7256/api/Notification/UserNotifications - - - 204 - - 1.6090ms
2024-02-04 17:49:54.687 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification/UserNotifications - -
2024-02-04 17:49:54.687 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:49:54.690 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetUserNotifications (TgCheckerApi)'
2024-02-04 17:49:54.691 +03:00 [INF] Route matched with {action = "GetUserNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetUserNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-04 17:49:54.698 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "User" AS u
WHERE u.unique_key = @__uniqueKeyClaim_0
LIMIT 2
2024-02-04 17:49:54.706 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.user_id = @__user_Id_0
2024-02-04 17:49:54.708 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.BaseModels.Notification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-04 17:49:54.709 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetUserNotifications (TgCheckerApi) in 17.2872ms
2024-02-04 17:49:54.710 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetUserNotifications (TgCheckerApi)'
2024-02-04 17:49:54.711 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification/UserNotifications - - - 200 524 application/json;+charset=utf-8 24.6526ms
2024-02-04 17:49:54.772 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Auth - -
2024-02-04 17:49:54.776 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:49:54.777 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 17:49:54.778 +03:00 [INF] Route matched with {action = "GetMe", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TgCheckerApi.Models.GetModels.UserProfileModel]] GetMe() on controller TgCheckerApi.Controllers.AuthController (TgCheckerApi).
2024-02-04 17:49:54.783 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.avatar, t.chat_id, t.last_update, t.notification_settings, t.telegram_id, t.unique_key, t.username, t1.id, t1.channel_id, t1.user_id, t1.id0, t1.avatar, t1.bumps, t1.description, t1.flag, t1."Hidden", t1.language, t1.last_bump, t1.members, t1.name, t1.notification_sent, t1.notifications, t1.promo_post, t1.promo_post_interval, t1.promo_post_last, t1.promo_post_sent, t1.promo_post_time, t1.telegram_id, t1."Url", t1."user", t1.id1, t1.channel, t1.tag, t1.id00, t1.text, t3.id, t3.channel_id, t3.content, t3.created_at, t3.parent_id, t3.rating, t3.user_id, t3.id0, t3.avatar, t3.bumps, t3.description, t3.flag, t3."Hidden", t3.language, t3.last_bump, t3.members, t3.name, t3.notification_sent, t3.notifications, t3.promo_post, t3.promo_post_interval, t3.promo_post_last, t3.promo_post_sent, t3.promo_post_time, t3.telegram_id, t3."Url", t3."user"
FROM (
    SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
    FROM "User" AS u
    WHERE u.unique_key = @__uniqueKeyClaim_0
    LIMIT 2
) AS t
LEFT JOIN (
    SELECT c.id, c.channel_id, c.user_id, c0.id AS id0, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."Url", c0."user", t0.id AS id1, t0.channel, t0.tag, t0.id0 AS id00, t0.text
    FROM "ChannelAccess" AS c
    LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
    LEFT JOIN (
        SELECT c1.id, c1.channel, c1.tag, t2.id AS id0, t2.text
        FROM "ChannelHasTag" AS c1
        LEFT JOIN "Tag" AS t2 ON c1.tag = t2.id
    ) AS t0 ON c0.id = t0.channel
) AS t1 ON t.id = t1.user_id
LEFT JOIN (
    SELECT c2.id, c2.channel_id, c2.content, c2.created_at, c2.parent_id, c2.rating, c2.user_id, c3.id AS id0, c3.avatar, c3.bumps, c3.description, c3.flag, c3."Hidden", c3.language, c3.last_bump, c3.members, c3.name, c3.notification_sent, c3.notifications, c3.promo_post, c3.promo_post_interval, c3.promo_post_last, c3.promo_post_sent, c3.promo_post_time, c3.telegram_id, c3."Url", c3."user"
    FROM "Comment" AS c2
    INNER JOIN "Channel" AS c3 ON c2.channel_id = c3.id
) AS t3 ON t.id = t3.user_id
ORDER BY t.id, t1.id, t1.id0, t1.id1, t1.id00, t3.id
2024-02-04 17:49:54.788 +03:00 [INF] Received request for getProfilePictureAndUsername. Request hash: 5ec5950f142bca89e2aa6cb4127bdea9391929bfdb585a0fda8bc0406276e946
2024-02-04 17:49:54.788 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:49:54.789 +03:00 [INF] Request found in cache. Hash: 5ec5950f142bca89e2aa6cb4127bdea9391929bfdb585a0fda8bc0406276e946
2024-02-04 17:49:54.792 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:49:54.794 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:49:54.800 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 17:49:54.802 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 17:49:54.805 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 17:49:54.808 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 17:49:54.810 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 17:49:54.814 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:49:54.816 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:49:54.819 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:49:54.822 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 17:49:54.824 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 17:49:54.826 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 17:49:54.830 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 17:49:54.832 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 17:49:54.834 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:49:54.836 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:49:54.838 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:49:54.840 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 17:49:54.844 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 17:49:54.847 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 17:49:54.849 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 17:49:54.852 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 17:49:54.854 +03:00 [INF] Executing OkObjectResult, writing value of type 'TgCheckerApi.Models.GetModels.UserProfileModel'.
2024-02-04 17:49:54.855 +03:00 [INF] Executed action TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi) in 75.8751ms
2024-02-04 17:49:54.858 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 17:49:54.859 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Auth - - - 200 28584 application/json;+charset=utf-8 86.3014ms
2024-02-04 17:50:06.409 +03:00 [WRN] New task timed out. Hash: 5ec5950f142bca89e2aa6cb4127bdea9391929bfdb585a0fda8bc0406276e946
2024-02-04 17:50:06.412 +03:00 [WRN] Response is not in expected 'OkObjectResult' format or does not contain a string value.
2024-02-04 17:50:06.463 +03:00 [ERR] Invalid operation when updating user profile.
System.InvalidOperationException: Invalid response format.
   at TgCheckerApi.Services.WebSocketService.ResponseToObject[T](IActionResult response) in C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\Services\WebSocketService.cs:line 75
   at TgCheckerApi.Controllers.AuthController.UpdateUserProfileIfNeeded(User user) in C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\Controllers\AuthController.cs:line 141
2024-02-04 17:50:06.936 +03:00 [WRN] Cached task timed out.
2024-02-04 17:50:06.937 +03:00 [WRN] Response is not in expected 'OkObjectResult' format or does not contain a string value.
2024-02-04 17:50:06.957 +03:00 [ERR] Invalid operation when updating user profile.
System.InvalidOperationException: Invalid response format.
   at TgCheckerApi.Services.WebSocketService.ResponseToObject[T](IActionResult response) in C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\Services\WebSocketService.cs:line 75
   at TgCheckerApi.Controllers.AuthController.UpdateUserProfileIfNeeded(User user) in C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\Controllers\AuthController.cs:line 141
2024-02-04 17:50:24.362 +03:00 [WRN] Cached task timed out.
2024-02-04 17:50:24.363 +03:00 [WRN] Response is not in expected 'OkObjectResult' format or does not contain a string value.
2024-02-04 17:50:24.384 +03:00 [ERR] Invalid operation when updating user profile.
System.InvalidOperationException: Invalid response format.
   at TgCheckerApi.Services.WebSocketService.ResponseToObject[T](IActionResult response) in C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\Services\WebSocketService.cs:line 75
   at TgCheckerApi.Controllers.AuthController.UpdateUserProfileIfNeeded(User user) in C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\Controllers\AuthController.cs:line 141
2024-02-04 17:50:24.808 +03:00 [WRN] Cached task timed out.
2024-02-04 17:50:24.809 +03:00 [WRN] Response is not in expected 'OkObjectResult' format or does not contain a string value.
2024-02-04 17:50:24.928 +03:00 [ERR] Invalid operation when updating user profile.
System.InvalidOperationException: Invalid response format.
   at TgCheckerApi.Services.WebSocketService.ResponseToObject[T](IActionResult response) in C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\Services\WebSocketService.cs:line 75
   at TgCheckerApi.Controllers.AuthController.UpdateUserProfileIfNeeded(User user) in C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\Controllers\AuthController.cs:line 141
2024-02-04 17:50:33.990 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:7256/api/Auth - -
2024-02-04 17:50:33.991 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:50:33.992 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:7256/api/Auth - - - 204 - - 2.2912ms
2024-02-04 17:50:33.997 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Auth - -
2024-02-04 17:50:33.998 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:50:33.999 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 17:50:34.000 +03:00 [INF] Route matched with {action = "GetMe", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TgCheckerApi.Models.GetModels.UserProfileModel]] GetMe() on controller TgCheckerApi.Controllers.AuthController (TgCheckerApi).
2024-02-04 17:50:34.007 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.avatar, t.chat_id, t.last_update, t.notification_settings, t.telegram_id, t.unique_key, t.username, t1.id, t1.channel_id, t1.user_id, t1.id0, t1.avatar, t1.bumps, t1.description, t1.flag, t1."Hidden", t1.language, t1.last_bump, t1.members, t1.name, t1.notification_sent, t1.notifications, t1.promo_post, t1.promo_post_interval, t1.promo_post_last, t1.promo_post_sent, t1.promo_post_time, t1.telegram_id, t1."Url", t1."user", t1.id1, t1.channel, t1.tag, t1.id00, t1.text, t3.id, t3.channel_id, t3.content, t3.created_at, t3.parent_id, t3.rating, t3.user_id, t3.id0, t3.avatar, t3.bumps, t3.description, t3.flag, t3."Hidden", t3.language, t3.last_bump, t3.members, t3.name, t3.notification_sent, t3.notifications, t3.promo_post, t3.promo_post_interval, t3.promo_post_last, t3.promo_post_sent, t3.promo_post_time, t3.telegram_id, t3."Url", t3."user"
FROM (
    SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
    FROM "User" AS u
    WHERE u.unique_key = @__uniqueKeyClaim_0
    LIMIT 2
) AS t
LEFT JOIN (
    SELECT c.id, c.channel_id, c.user_id, c0.id AS id0, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."Url", c0."user", t0.id AS id1, t0.channel, t0.tag, t0.id0 AS id00, t0.text
    FROM "ChannelAccess" AS c
    LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
    LEFT JOIN (
        SELECT c1.id, c1.channel, c1.tag, t2.id AS id0, t2.text
        FROM "ChannelHasTag" AS c1
        LEFT JOIN "Tag" AS t2 ON c1.tag = t2.id
    ) AS t0 ON c0.id = t0.channel
) AS t1 ON t.id = t1.user_id
LEFT JOIN (
    SELECT c2.id, c2.channel_id, c2.content, c2.created_at, c2.parent_id, c2.rating, c2.user_id, c3.id AS id0, c3.avatar, c3.bumps, c3.description, c3.flag, c3."Hidden", c3.language, c3.last_bump, c3.members, c3.name, c3.notification_sent, c3.notifications, c3.promo_post, c3.promo_post_interval, c3.promo_post_last, c3.promo_post_sent, c3.promo_post_time, c3.telegram_id, c3."Url", c3."user"
    FROM "Comment" AS c2
    INNER JOIN "Channel" AS c3 ON c2.channel_id = c3.id
) AS t3 ON t.id = t3.user_id
ORDER BY t.id, t1.id, t1.id0, t1.id1, t1.id00, t3.id
2024-02-04 17:50:34.018 +03:00 [INF] Received request for getProfilePictureAndUsername. Request hash: 5ec5950f142bca89e2aa6cb4127bdea9391929bfdb585a0fda8bc0406276e946
2024-02-04 17:50:34.019 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:50:34.023 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:50:34.032 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:50:34.039 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 17:50:34.044 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 17:50:34.048 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 17:50:34.052 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 17:50:34.055 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 17:50:34.061 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:50:34.065 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:50:34.067 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:50:34.070 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 17:50:34.079 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 17:50:34.082 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 17:50:34.085 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 17:50:34.088 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 17:50:34.093 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:50:34.096 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:50:34.099 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:50:34.102 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 17:50:34.109 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 17:50:34.113 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 17:50:34.116 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 17:50:34.120 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 17:50:34.124 +03:00 [INF] Executing OkObjectResult, writing value of type 'TgCheckerApi.Models.GetModels.UserProfileModel'.
2024-02-04 17:50:34.126 +03:00 [INF] Executed action TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi) in 123.341ms
2024-02-04 17:50:34.127 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 17:50:34.128 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Auth - - - 200 28584 application/json;+charset=utf-8 130.9859ms
2024-02-04 17:50:34.310 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:7256/api/User/PaymentHistory - -
2024-02-04 17:50:34.311 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:50:34.312 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:7256/api/User/PaymentHistory - - - 204 - - 2.2921ms
2024-02-04 17:50:34.314 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/User/PaymentHistory - -
2024-02-04 17:50:34.314 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:50:34.315 +03:00 [INF] Executing endpoint 'TgCheckerApi.MapperProfiles.UserController.GetPaymentHistory (TgCheckerApi)'
2024-02-04 17:50:34.316 +03:00 [INF] Route matched with {action = "GetPaymentHistory", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.GetModels.PaymentHistoryModel]]] GetPaymentHistory() on controller TgCheckerApi.MapperProfiles.UserController (TgCheckerApi).
2024-02-04 17:50:34.325 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:7256/api/Notification/UserNotifications - -
2024-02-04 17:50:34.326 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.avatar, t.chat_id, t.last_update, t.notification_settings, t.telegram_id, t.unique_key, t.username, t1.id, t1.channel_id, t1.user_id, t1.id0, t1.avatar, t1.bumps, t1.description, t1.flag, t1."Hidden", t1.language, t1.last_bump, t1.members, t1.name, t1.notification_sent, t1.notifications, t1.promo_post, t1.promo_post_interval, t1.promo_post_last, t1.promo_post_sent, t1.promo_post_time, t1.telegram_id, t1."Url", t1."user", t1.id1, t1.channel, t1.tag, t1.id00, t1.text, t3.id, t3.channel_id, t3.content, t3.created_at, t3.parent_id, t3.rating, t3.user_id, t3.id0, t3.avatar, t3.bumps, t3.description, t3.flag, t3."Hidden", t3.language, t3.last_bump, t3.members, t3.name, t3.notification_sent, t3.notifications, t3.promo_post, t3.promo_post_interval, t3.promo_post_last, t3.promo_post_sent, t3.promo_post_time, t3.telegram_id, t3."Url", t3."user"
FROM (
    SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
    FROM "User" AS u
    WHERE u.unique_key = @__uniqueKeyClaim_0
    LIMIT 2
) AS t
LEFT JOIN (
    SELECT c.id, c.channel_id, c.user_id, c0.id AS id0, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."Url", c0."user", t0.id AS id1, t0.channel, t0.tag, t0.id0 AS id00, t0.text
    FROM "ChannelAccess" AS c
    LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
    LEFT JOIN (
        SELECT c1.id, c1.channel, c1.tag, t2.id AS id0, t2.text
        FROM "ChannelHasTag" AS c1
        LEFT JOIN "Tag" AS t2 ON c1.tag = t2.id
    ) AS t0 ON c0.id = t0.channel
) AS t1 ON t.id = t1.user_id
LEFT JOIN (
    SELECT c2.id, c2.channel_id, c2.content, c2.created_at, c2.parent_id, c2.rating, c2.user_id, c3.id AS id0, c3.avatar, c3.bumps, c3.description, c3.flag, c3."Hidden", c3.language, c3.last_bump, c3.members, c3.name, c3.notification_sent, c3.notifications, c3.promo_post, c3.promo_post_interval, c3.promo_post_last, c3.promo_post_sent, c3.promo_post_time, c3.telegram_id, c3."Url", c3."user"
    FROM "Comment" AS c2
    INNER JOIN "Channel" AS c3 ON c2.channel_id = c3.id
) AS t3 ON t.id = t3.user_id
ORDER BY t.id, t1.id, t1.id0, t1.id1, t1.id00, t3.id
2024-02-04 17:50:34.334 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:50:34.344 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:7256/api/Notification/UserNotifications - - - 204 - - 18.8151ms
2024-02-04 17:50:34.345 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.channel_id AS "ChannelId", p.id AS "PaymentId", p.subtype_id AS "ChannelSubscriptionType", p.created_at AS "PurchaseDate", p.duration AS "SubscriptionDuration", p.amount_value AS "AmountValue", p.amount_currency AS "AmountCurrency"
FROM "Payments" AS p
WHERE p.user_id = @__userId_0
2024-02-04 17:50:34.345 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification/UserNotifications - -
2024-02-04 17:50:34.348 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.GetModels.PaymentHistoryModel, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-04 17:50:34.349 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:50:34.352 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetUserNotifications (TgCheckerApi)'
2024-02-04 17:50:34.353 +03:00 [INF] Route matched with {action = "GetUserNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetUserNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-04 17:50:34.351 +03:00 [INF] Executed action TgCheckerApi.MapperProfiles.UserController.GetPaymentHistory (TgCheckerApi) in 30.6109ms
2024-02-04 17:50:34.361 +03:00 [INF] Executed endpoint 'TgCheckerApi.MapperProfiles.UserController.GetPaymentHistory (TgCheckerApi)'
2024-02-04 17:50:34.362 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "User" AS u
WHERE u.unique_key = @__uniqueKeyClaim_0
LIMIT 2
2024-02-04 17:50:34.363 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/User/PaymentHistory - - - 200 1868 application/json;+charset=utf-8 49.5440ms
2024-02-04 17:50:34.369 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.user_id = @__user_Id_0
2024-02-04 17:50:34.375 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.BaseModels.Notification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-04 17:50:34.376 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetUserNotifications (TgCheckerApi) in 17.1152ms
2024-02-04 17:50:34.377 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetUserNotifications (TgCheckerApi)'
2024-02-04 17:50:34.379 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification/UserNotifications - - - 200 524 application/json;+charset=utf-8 33.3370ms
2024-02-04 17:50:34.438 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Auth - -
2024-02-04 17:50:34.442 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:50:34.443 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 17:50:34.445 +03:00 [INF] Route matched with {action = "GetMe", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TgCheckerApi.Models.GetModels.UserProfileModel]] GetMe() on controller TgCheckerApi.Controllers.AuthController (TgCheckerApi).
2024-02-04 17:50:34.452 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.avatar, t.chat_id, t.last_update, t.notification_settings, t.telegram_id, t.unique_key, t.username, t1.id, t1.channel_id, t1.user_id, t1.id0, t1.avatar, t1.bumps, t1.description, t1.flag, t1."Hidden", t1.language, t1.last_bump, t1.members, t1.name, t1.notification_sent, t1.notifications, t1.promo_post, t1.promo_post_interval, t1.promo_post_last, t1.promo_post_sent, t1.promo_post_time, t1.telegram_id, t1."Url", t1."user", t1.id1, t1.channel, t1.tag, t1.id00, t1.text, t3.id, t3.channel_id, t3.content, t3.created_at, t3.parent_id, t3.rating, t3.user_id, t3.id0, t3.avatar, t3.bumps, t3.description, t3.flag, t3."Hidden", t3.language, t3.last_bump, t3.members, t3.name, t3.notification_sent, t3.notifications, t3.promo_post, t3.promo_post_interval, t3.promo_post_last, t3.promo_post_sent, t3.promo_post_time, t3.telegram_id, t3."Url", t3."user"
FROM (
    SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
    FROM "User" AS u
    WHERE u.unique_key = @__uniqueKeyClaim_0
    LIMIT 2
) AS t
LEFT JOIN (
    SELECT c.id, c.channel_id, c.user_id, c0.id AS id0, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."Url", c0."user", t0.id AS id1, t0.channel, t0.tag, t0.id0 AS id00, t0.text
    FROM "ChannelAccess" AS c
    LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
    LEFT JOIN (
        SELECT c1.id, c1.channel, c1.tag, t2.id AS id0, t2.text
        FROM "ChannelHasTag" AS c1
        LEFT JOIN "Tag" AS t2 ON c1.tag = t2.id
    ) AS t0 ON c0.id = t0.channel
) AS t1 ON t.id = t1.user_id
LEFT JOIN (
    SELECT c2.id, c2.channel_id, c2.content, c2.created_at, c2.parent_id, c2.rating, c2.user_id, c3.id AS id0, c3.avatar, c3.bumps, c3.description, c3.flag, c3."Hidden", c3.language, c3.last_bump, c3.members, c3.name, c3.notification_sent, c3.notifications, c3.promo_post, c3.promo_post_interval, c3.promo_post_last, c3.promo_post_sent, c3.promo_post_time, c3.telegram_id, c3."Url", c3."user"
    FROM "Comment" AS c2
    INNER JOIN "Channel" AS c3 ON c2.channel_id = c3.id
) AS t3 ON t.id = t3.user_id
ORDER BY t.id, t1.id, t1.id0, t1.id1, t1.id00, t3.id
2024-02-04 17:50:34.467 +03:00 [INF] Received request for getProfilePictureAndUsername. Request hash: 5ec5950f142bca89e2aa6cb4127bdea9391929bfdb585a0fda8bc0406276e946
2024-02-04 17:50:34.468 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:50:34.468 +03:00 [INF] Request found in cache. Hash: 5ec5950f142bca89e2aa6cb4127bdea9391929bfdb585a0fda8bc0406276e946
2024-02-04 17:50:34.473 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:50:34.481 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:50:34.488 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 17:50:34.492 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 17:50:34.497 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 17:50:34.501 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 17:50:34.505 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 17:50:34.511 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:50:34.515 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:50:34.518 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:50:34.523 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 17:50:34.529 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 17:50:34.533 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 17:50:34.566 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 17:50:34.574 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 17:50:34.578 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:50:34.582 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:50:34.585 +03:00 [INF] New task completed successfully. Hash: 5ec5950f142bca89e2aa6cb4127bdea9391929bfdb585a0fda8bc0406276e946
2024-02-04 17:50:34.590 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:50:34.595 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 17:50:34.600 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 17:50:34.607 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 17:50:34.612 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 17:50:34.616 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 17:50:34.622 +03:00 [INF] Executing OkObjectResult, writing value of type 'TgCheckerApi.Models.GetModels.UserProfileModel'.
2024-02-04 17:50:34.624 +03:00 [INF] Executed action TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi) in 175.907ms
2024-02-04 17:50:34.626 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 17:50:34.627 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Auth - - - 200 28584 application/json;+charset=utf-8 188.9708ms
2024-02-04 17:50:34.661 +03:00 [INF] User profile updated in background for uwu.
2024-02-04 17:50:34.663 +03:00 [INF] Cached task completed successfully.
2024-02-04 17:50:34.665 +03:00 [INF] User profile updated in background for uwu.
2024-02-04 17:51:32.096 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:7256/api/Auth - -
2024-02-04 17:51:32.102 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:51:32.104 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:7256/api/Auth - - - 204 - - 7.1458ms
2024-02-04 17:51:32.105 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Auth - -
2024-02-04 17:51:32.106 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:51:32.107 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 17:51:32.108 +03:00 [INF] Route matched with {action = "GetMe", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TgCheckerApi.Models.GetModels.UserProfileModel]] GetMe() on controller TgCheckerApi.Controllers.AuthController (TgCheckerApi).
2024-02-04 17:51:32.117 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.avatar, t.chat_id, t.last_update, t.notification_settings, t.telegram_id, t.unique_key, t.username, t1.id, t1.channel_id, t1.user_id, t1.id0, t1.avatar, t1.bumps, t1.description, t1.flag, t1."Hidden", t1.language, t1.last_bump, t1.members, t1.name, t1.notification_sent, t1.notifications, t1.promo_post, t1.promo_post_interval, t1.promo_post_last, t1.promo_post_sent, t1.promo_post_time, t1.telegram_id, t1."Url", t1."user", t1.id1, t1.channel, t1.tag, t1.id00, t1.text, t3.id, t3.channel_id, t3.content, t3.created_at, t3.parent_id, t3.rating, t3.user_id, t3.id0, t3.avatar, t3.bumps, t3.description, t3.flag, t3."Hidden", t3.language, t3.last_bump, t3.members, t3.name, t3.notification_sent, t3.notifications, t3.promo_post, t3.promo_post_interval, t3.promo_post_last, t3.promo_post_sent, t3.promo_post_time, t3.telegram_id, t3."Url", t3."user"
FROM (
    SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
    FROM "User" AS u
    WHERE u.unique_key = @__uniqueKeyClaim_0
    LIMIT 2
) AS t
LEFT JOIN (
    SELECT c.id, c.channel_id, c.user_id, c0.id AS id0, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."Url", c0."user", t0.id AS id1, t0.channel, t0.tag, t0.id0 AS id00, t0.text
    FROM "ChannelAccess" AS c
    LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
    LEFT JOIN (
        SELECT c1.id, c1.channel, c1.tag, t2.id AS id0, t2.text
        FROM "ChannelHasTag" AS c1
        LEFT JOIN "Tag" AS t2 ON c1.tag = t2.id
    ) AS t0 ON c0.id = t0.channel
) AS t1 ON t.id = t1.user_id
LEFT JOIN (
    SELECT c2.id, c2.channel_id, c2.content, c2.created_at, c2.parent_id, c2.rating, c2.user_id, c3.id AS id0, c3.avatar, c3.bumps, c3.description, c3.flag, c3."Hidden", c3.language, c3.last_bump, c3.members, c3.name, c3.notification_sent, c3.notifications, c3.promo_post, c3.promo_post_interval, c3.promo_post_last, c3.promo_post_sent, c3.promo_post_time, c3.telegram_id, c3."Url", c3."user"
    FROM "Comment" AS c2
    INNER JOIN "Channel" AS c3 ON c2.channel_id = c3.id
) AS t3 ON t.id = t3.user_id
ORDER BY t.id, t1.id, t1.id0, t1.id1, t1.id00, t3.id
2024-02-04 17:51:32.145 +03:00 [INF] Received request for getProfilePictureAndUsername. Request hash: 5ec5950f142bca89e2aa6cb4127bdea9391929bfdb585a0fda8bc0406276e946
2024-02-04 17:51:32.146 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:51:32.154 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:51:32.158 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:51:32.163 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 17:51:32.170 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 17:51:32.174 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 17:51:32.178 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 17:51:32.186 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 17:51:32.190 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:51:32.194 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:51:32.201 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:51:32.205 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 17:51:32.212 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 17:51:32.221 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 17:51:32.226 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 17:51:32.232 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 17:51:32.236 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:51:32.240 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:51:32.247 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:51:32.251 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 17:51:32.254 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 17:51:32.287 +03:00 [INF] Executed DbCommand (16ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 17:51:32.298 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 17:51:32.303 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 17:51:32.305 +03:00 [INF] Executing OkObjectResult, writing value of type 'TgCheckerApi.Models.GetModels.UserProfileModel'.
2024-02-04 17:51:32.307 +03:00 [INF] Executed action TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi) in 194.1738ms
2024-02-04 17:51:32.310 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 17:51:32.311 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Auth - - - 200 28584 application/json;+charset=utf-8 206.5091ms
2024-02-04 17:51:32.325 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:7256/api/Notification/UserNotifications - -
2024-02-04 17:51:32.326 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:51:32.328 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:7256/api/Notification/UserNotifications - - - 204 - - 2.9993ms
2024-02-04 17:51:32.329 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification/UserNotifications - -
2024-02-04 17:51:32.330 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:51:32.331 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetUserNotifications (TgCheckerApi)'
2024-02-04 17:51:32.332 +03:00 [INF] Route matched with {action = "GetUserNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetUserNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-04 17:51:32.339 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "User" AS u
WHERE u.unique_key = @__uniqueKeyClaim_0
LIMIT 2
2024-02-04 17:51:32.346 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.user_id = @__user_Id_0
2024-02-04 17:51:32.349 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.BaseModels.Notification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-04 17:51:32.352 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetUserNotifications (TgCheckerApi) in 17.0528ms
2024-02-04 17:51:32.353 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetUserNotifications (TgCheckerApi)'
2024-02-04 17:51:32.357 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification/UserNotifications - - - 200 524 application/json;+charset=utf-8 27.8434ms
2024-02-04 17:51:32.505 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:7256/api/User/PaymentHistory - -
2024-02-04 17:51:32.506 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:51:32.508 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:7256/api/User/PaymentHistory - - - 204 - - 2.1021ms
2024-02-04 17:51:32.509 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/User/PaymentHistory - -
2024-02-04 17:51:32.509 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:51:32.510 +03:00 [INF] Executing endpoint 'TgCheckerApi.MapperProfiles.UserController.GetPaymentHistory (TgCheckerApi)'
2024-02-04 17:51:32.511 +03:00 [INF] Route matched with {action = "GetPaymentHistory", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.GetModels.PaymentHistoryModel]]] GetPaymentHistory() on controller TgCheckerApi.MapperProfiles.UserController (TgCheckerApi).
2024-02-04 17:51:32.517 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.avatar, t.chat_id, t.last_update, t.notification_settings, t.telegram_id, t.unique_key, t.username, t1.id, t1.channel_id, t1.user_id, t1.id0, t1.avatar, t1.bumps, t1.description, t1.flag, t1."Hidden", t1.language, t1.last_bump, t1.members, t1.name, t1.notification_sent, t1.notifications, t1.promo_post, t1.promo_post_interval, t1.promo_post_last, t1.promo_post_sent, t1.promo_post_time, t1.telegram_id, t1."Url", t1."user", t1.id1, t1.channel, t1.tag, t1.id00, t1.text, t3.id, t3.channel_id, t3.content, t3.created_at, t3.parent_id, t3.rating, t3.user_id, t3.id0, t3.avatar, t3.bumps, t3.description, t3.flag, t3."Hidden", t3.language, t3.last_bump, t3.members, t3.name, t3.notification_sent, t3.notifications, t3.promo_post, t3.promo_post_interval, t3.promo_post_last, t3.promo_post_sent, t3.promo_post_time, t3.telegram_id, t3."Url", t3."user"
FROM (
    SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
    FROM "User" AS u
    WHERE u.unique_key = @__uniqueKeyClaim_0
    LIMIT 2
) AS t
LEFT JOIN (
    SELECT c.id, c.channel_id, c.user_id, c0.id AS id0, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."Url", c0."user", t0.id AS id1, t0.channel, t0.tag, t0.id0 AS id00, t0.text
    FROM "ChannelAccess" AS c
    LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
    LEFT JOIN (
        SELECT c1.id, c1.channel, c1.tag, t2.id AS id0, t2.text
        FROM "ChannelHasTag" AS c1
        LEFT JOIN "Tag" AS t2 ON c1.tag = t2.id
    ) AS t0 ON c0.id = t0.channel
) AS t1 ON t.id = t1.user_id
LEFT JOIN (
    SELECT c2.id, c2.channel_id, c2.content, c2.created_at, c2.parent_id, c2.rating, c2.user_id, c3.id AS id0, c3.avatar, c3.bumps, c3.description, c3.flag, c3."Hidden", c3.language, c3.last_bump, c3.members, c3.name, c3.notification_sent, c3.notifications, c3.promo_post, c3.promo_post_interval, c3.promo_post_last, c3.promo_post_sent, c3.promo_post_time, c3.telegram_id, c3."Url", c3."user"
    FROM "Comment" AS c2
    INNER JOIN "Channel" AS c3 ON c2.channel_id = c3.id
) AS t3 ON t.id = t3.user_id
ORDER BY t.id, t1.id, t1.id0, t1.id1, t1.id00, t3.id
2024-02-04 17:51:32.523 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Auth - -
2024-02-04 17:51:32.524 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:51:32.525 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.channel_id AS "ChannelId", p.id AS "PaymentId", p.subtype_id AS "ChannelSubscriptionType", p.created_at AS "PurchaseDate", p.duration AS "SubscriptionDuration", p.amount_value AS "AmountValue", p.amount_currency AS "AmountCurrency"
FROM "Payments" AS p
WHERE p.user_id = @__userId_0
2024-02-04 17:51:32.525 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 17:51:32.529 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.GetModels.PaymentHistoryModel, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-04 17:51:32.533 +03:00 [INF] Route matched with {action = "GetMe", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TgCheckerApi.Models.GetModels.UserProfileModel]] GetMe() on controller TgCheckerApi.Controllers.AuthController (TgCheckerApi).
2024-02-04 17:51:32.535 +03:00 [INF] Executed action TgCheckerApi.MapperProfiles.UserController.GetPaymentHistory (TgCheckerApi) in 21.3246ms
2024-02-04 17:51:32.540 +03:00 [INF] Executed endpoint 'TgCheckerApi.MapperProfiles.UserController.GetPaymentHistory (TgCheckerApi)'
2024-02-04 17:51:32.544 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.avatar, t.chat_id, t.last_update, t.notification_settings, t.telegram_id, t.unique_key, t.username, t1.id, t1.channel_id, t1.user_id, t1.id0, t1.avatar, t1.bumps, t1.description, t1.flag, t1."Hidden", t1.language, t1.last_bump, t1.members, t1.name, t1.notification_sent, t1.notifications, t1.promo_post, t1.promo_post_interval, t1.promo_post_last, t1.promo_post_sent, t1.promo_post_time, t1.telegram_id, t1."Url", t1."user", t1.id1, t1.channel, t1.tag, t1.id00, t1.text, t3.id, t3.channel_id, t3.content, t3.created_at, t3.parent_id, t3.rating, t3.user_id, t3.id0, t3.avatar, t3.bumps, t3.description, t3.flag, t3."Hidden", t3.language, t3.last_bump, t3.members, t3.name, t3.notification_sent, t3.notifications, t3.promo_post, t3.promo_post_interval, t3.promo_post_last, t3.promo_post_sent, t3.promo_post_time, t3.telegram_id, t3."Url", t3."user"
FROM (
    SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
    FROM "User" AS u
    WHERE u.unique_key = @__uniqueKeyClaim_0
    LIMIT 2
) AS t
LEFT JOIN (
    SELECT c.id, c.channel_id, c.user_id, c0.id AS id0, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."Url", c0."user", t0.id AS id1, t0.channel, t0.tag, t0.id0 AS id00, t0.text
    FROM "ChannelAccess" AS c
    LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
    LEFT JOIN (
        SELECT c1.id, c1.channel, c1.tag, t2.id AS id0, t2.text
        FROM "ChannelHasTag" AS c1
        LEFT JOIN "Tag" AS t2 ON c1.tag = t2.id
    ) AS t0 ON c0.id = t0.channel
) AS t1 ON t.id = t1.user_id
LEFT JOIN (
    SELECT c2.id, c2.channel_id, c2.content, c2.created_at, c2.parent_id, c2.rating, c2.user_id, c3.id AS id0, c3.avatar, c3.bumps, c3.description, c3.flag, c3."Hidden", c3.language, c3.last_bump, c3.members, c3.name, c3.notification_sent, c3.notifications, c3.promo_post, c3.promo_post_interval, c3.promo_post_last, c3.promo_post_sent, c3.promo_post_time, c3.telegram_id, c3."Url", c3."user"
    FROM "Comment" AS c2
    INNER JOIN "Channel" AS c3 ON c2.channel_id = c3.id
) AS t3 ON t.id = t3.user_id
ORDER BY t.id, t1.id, t1.id0, t1.id1, t1.id00, t3.id
2024-02-04 17:51:32.549 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/User/PaymentHistory - - - 200 1868 application/json;+charset=utf-8 40.6063ms
2024-02-04 17:51:32.603 +03:00 [INF] New task completed successfully. Hash: 5ec5950f142bca89e2aa6cb4127bdea9391929bfdb585a0fda8bc0406276e946
2024-02-04 17:51:32.613 +03:00 [INF] Received request for getProfilePictureAndUsername. Request hash: 5ec5950f142bca89e2aa6cb4127bdea9391929bfdb585a0fda8bc0406276e946
2024-02-04 17:51:32.614 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:51:32.614 +03:00 [INF] User profile updated in background for uwu.
2024-02-04 17:51:32.618 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:51:32.625 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:51:32.628 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 17:51:32.630 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 17:51:32.633 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 17:51:32.635 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 17:51:32.641 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 17:51:32.643 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:51:32.645 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:51:32.648 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:51:32.651 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 17:51:32.656 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 17:51:32.659 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 17:51:32.663 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 17:51:32.678 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 17:51:32.687 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:51:32.690 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:51:32.692 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:51:32.695 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 17:51:32.697 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 17:51:32.704 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 17:51:32.708 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 17:51:32.711 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 17:51:32.713 +03:00 [INF] Executing OkObjectResult, writing value of type 'TgCheckerApi.Models.GetModels.UserProfileModel'.
2024-02-04 17:51:32.714 +03:00 [INF] Executed action TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi) in 177.5448ms
2024-02-04 17:51:32.718 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 17:51:32.719 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Auth - - - 200 28584 application/json;+charset=utf-8 196.1394ms
2024-02-04 17:51:33.018 +03:00 [INF] New task completed successfully. Hash: 5ec5950f142bca89e2aa6cb4127bdea9391929bfdb585a0fda8bc0406276e946
2024-02-04 17:51:33.020 +03:00 [INF] User profile updated in background for uwu.
2024-02-04 17:51:42.358 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:7256/api/Auth - -
2024-02-04 17:51:42.359 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:51:42.360 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:7256/api/Auth - - - 204 - - 2.1893ms
2024-02-04 17:51:42.361 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Auth - -
2024-02-04 17:51:42.363 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:51:42.364 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 17:51:42.365 +03:00 [INF] Route matched with {action = "GetMe", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TgCheckerApi.Models.GetModels.UserProfileModel]] GetMe() on controller TgCheckerApi.Controllers.AuthController (TgCheckerApi).
2024-02-04 17:51:42.370 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.avatar, t.chat_id, t.last_update, t.notification_settings, t.telegram_id, t.unique_key, t.username, t1.id, t1.channel_id, t1.user_id, t1.id0, t1.avatar, t1.bumps, t1.description, t1.flag, t1."Hidden", t1.language, t1.last_bump, t1.members, t1.name, t1.notification_sent, t1.notifications, t1.promo_post, t1.promo_post_interval, t1.promo_post_last, t1.promo_post_sent, t1.promo_post_time, t1.telegram_id, t1."Url", t1."user", t1.id1, t1.channel, t1.tag, t1.id00, t1.text, t3.id, t3.channel_id, t3.content, t3.created_at, t3.parent_id, t3.rating, t3.user_id, t3.id0, t3.avatar, t3.bumps, t3.description, t3.flag, t3."Hidden", t3.language, t3.last_bump, t3.members, t3.name, t3.notification_sent, t3.notifications, t3.promo_post, t3.promo_post_interval, t3.promo_post_last, t3.promo_post_sent, t3.promo_post_time, t3.telegram_id, t3."Url", t3."user"
FROM (
    SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
    FROM "User" AS u
    WHERE u.unique_key = @__uniqueKeyClaim_0
    LIMIT 2
) AS t
LEFT JOIN (
    SELECT c.id, c.channel_id, c.user_id, c0.id AS id0, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."Url", c0."user", t0.id AS id1, t0.channel, t0.tag, t0.id0 AS id00, t0.text
    FROM "ChannelAccess" AS c
    LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
    LEFT JOIN (
        SELECT c1.id, c1.channel, c1.tag, t2.id AS id0, t2.text
        FROM "ChannelHasTag" AS c1
        LEFT JOIN "Tag" AS t2 ON c1.tag = t2.id
    ) AS t0 ON c0.id = t0.channel
) AS t1 ON t.id = t1.user_id
LEFT JOIN (
    SELECT c2.id, c2.channel_id, c2.content, c2.created_at, c2.parent_id, c2.rating, c2.user_id, c3.id AS id0, c3.avatar, c3.bumps, c3.description, c3.flag, c3."Hidden", c3.language, c3.last_bump, c3.members, c3.name, c3.notification_sent, c3.notifications, c3.promo_post, c3.promo_post_interval, c3.promo_post_last, c3.promo_post_sent, c3.promo_post_time, c3.telegram_id, c3."Url", c3."user"
    FROM "Comment" AS c2
    INNER JOIN "Channel" AS c3 ON c2.channel_id = c3.id
) AS t3 ON t.id = t3.user_id
ORDER BY t.id, t1.id, t1.id0, t1.id1, t1.id00, t3.id
2024-02-04 17:51:42.377 +03:00 [INF] Received request for getProfilePictureAndUsername. Request hash: 5ec5950f142bca89e2aa6cb4127bdea9391929bfdb585a0fda8bc0406276e946
2024-02-04 17:51:42.377 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:51:42.386 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:51:42.388 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:51:42.392 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 17:51:42.400 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 17:51:42.404 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 17:51:42.409 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 17:51:42.416 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 17:51:42.419 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:51:42.423 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:51:42.429 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:51:42.432 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 17:51:42.435 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 17:51:42.437 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 17:51:42.441 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 17:51:42.447 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 17:51:42.450 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:51:42.453 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:51:42.459 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:51:42.462 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 17:51:42.465 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 17:51:42.469 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 17:51:42.476 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 17:51:42.480 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 17:51:42.483 +03:00 [INF] Executing OkObjectResult, writing value of type 'TgCheckerApi.Models.GetModels.UserProfileModel'.
2024-02-04 17:51:42.484 +03:00 [INF] Executed action TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi) in 117.4473ms
2024-02-04 17:51:42.485 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 17:51:42.487 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Auth - - - 200 28585 application/json;+charset=utf-8 125.0948ms
2024-02-04 17:51:42.682 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:7256/api/User/PaymentHistory - -
2024-02-04 17:51:42.682 +03:00 [INF] New task completed successfully. Hash: 5ec5950f142bca89e2aa6cb4127bdea9391929bfdb585a0fda8bc0406276e946
2024-02-04 17:51:42.683 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:51:42.688 +03:00 [INF] User profile updated in background for uwu.
2024-02-04 17:51:42.689 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:7256/api/User/PaymentHistory - - - 204 - - 7.2010ms
2024-02-04 17:51:42.690 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/User/PaymentHistory - -
2024-02-04 17:51:42.691 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:51:42.692 +03:00 [INF] Executing endpoint 'TgCheckerApi.MapperProfiles.UserController.GetPaymentHistory (TgCheckerApi)'
2024-02-04 17:51:42.693 +03:00 [INF] Route matched with {action = "GetPaymentHistory", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.GetModels.PaymentHistoryModel]]] GetPaymentHistory() on controller TgCheckerApi.MapperProfiles.UserController (TgCheckerApi).
2024-02-04 17:51:42.695 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:7256/api/Notification/UserNotifications - -
2024-02-04 17:51:42.697 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:51:42.698 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:7256/api/Notification/UserNotifications - - - 204 - - 3.5266ms
2024-02-04 17:51:42.698 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.avatar, t.chat_id, t.last_update, t.notification_settings, t.telegram_id, t.unique_key, t.username, t1.id, t1.channel_id, t1.user_id, t1.id0, t1.avatar, t1.bumps, t1.description, t1.flag, t1."Hidden", t1.language, t1.last_bump, t1.members, t1.name, t1.notification_sent, t1.notifications, t1.promo_post, t1.promo_post_interval, t1.promo_post_last, t1.promo_post_sent, t1.promo_post_time, t1.telegram_id, t1."Url", t1."user", t1.id1, t1.channel, t1.tag, t1.id00, t1.text, t3.id, t3.channel_id, t3.content, t3.created_at, t3.parent_id, t3.rating, t3.user_id, t3.id0, t3.avatar, t3.bumps, t3.description, t3.flag, t3."Hidden", t3.language, t3.last_bump, t3.members, t3.name, t3.notification_sent, t3.notifications, t3.promo_post, t3.promo_post_interval, t3.promo_post_last, t3.promo_post_sent, t3.promo_post_time, t3.telegram_id, t3."Url", t3."user"
FROM (
    SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
    FROM "User" AS u
    WHERE u.unique_key = @__uniqueKeyClaim_0
    LIMIT 2
) AS t
LEFT JOIN (
    SELECT c.id, c.channel_id, c.user_id, c0.id AS id0, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."Url", c0."user", t0.id AS id1, t0.channel, t0.tag, t0.id0 AS id00, t0.text
    FROM "ChannelAccess" AS c
    LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
    LEFT JOIN (
        SELECT c1.id, c1.channel, c1.tag, t2.id AS id0, t2.text
        FROM "ChannelHasTag" AS c1
        LEFT JOIN "Tag" AS t2 ON c1.tag = t2.id
    ) AS t0 ON c0.id = t0.channel
) AS t1 ON t.id = t1.user_id
LEFT JOIN (
    SELECT c2.id, c2.channel_id, c2.content, c2.created_at, c2.parent_id, c2.rating, c2.user_id, c3.id AS id0, c3.avatar, c3.bumps, c3.description, c3.flag, c3."Hidden", c3.language, c3.last_bump, c3.members, c3.name, c3.notification_sent, c3.notifications, c3.promo_post, c3.promo_post_interval, c3.promo_post_last, c3.promo_post_sent, c3.promo_post_time, c3.telegram_id, c3."Url", c3."user"
    FROM "Comment" AS c2
    INNER JOIN "Channel" AS c3 ON c2.channel_id = c3.id
) AS t3 ON t.id = t3.user_id
ORDER BY t.id, t1.id, t1.id0, t1.id1, t1.id00, t3.id
2024-02-04 17:51:42.702 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification/UserNotifications - -
2024-02-04 17:51:42.709 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:51:42.709 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.channel_id AS "ChannelId", p.id AS "PaymentId", p.subtype_id AS "ChannelSubscriptionType", p.created_at AS "PurchaseDate", p.duration AS "SubscriptionDuration", p.amount_value AS "AmountValue", p.amount_currency AS "AmountCurrency"
FROM "Payments" AS p
WHERE p.user_id = @__userId_0
2024-02-04 17:51:42.710 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetUserNotifications (TgCheckerApi)'
2024-02-04 17:51:42.713 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.GetModels.PaymentHistoryModel, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-04 17:51:42.718 +03:00 [INF] Route matched with {action = "GetUserNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetUserNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-04 17:51:42.719 +03:00 [INF] Executed action TgCheckerApi.MapperProfiles.UserController.GetPaymentHistory (TgCheckerApi) in 24.3053ms
2024-02-04 17:51:42.724 +03:00 [INF] Executed endpoint 'TgCheckerApi.MapperProfiles.UserController.GetPaymentHistory (TgCheckerApi)'
2024-02-04 17:51:42.725 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "User" AS u
WHERE u.unique_key = @__uniqueKeyClaim_0
LIMIT 2
2024-02-04 17:51:42.726 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/User/PaymentHistory - - - 200 1868 application/json;+charset=utf-8 35.1958ms
2024-02-04 17:51:42.729 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.user_id = @__user_Id_0
2024-02-04 17:51:42.734 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.BaseModels.Notification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-04 17:51:42.736 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetUserNotifications (TgCheckerApi) in 14.5363ms
2024-02-04 17:51:42.737 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetUserNotifications (TgCheckerApi)'
2024-02-04 17:51:42.739 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification/UserNotifications - - - 200 524 application/json;+charset=utf-8 37.2965ms
2024-02-04 17:51:42.804 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Auth - -
2024-02-04 17:51:42.807 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:51:42.808 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 17:51:42.809 +03:00 [INF] Route matched with {action = "GetMe", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TgCheckerApi.Models.GetModels.UserProfileModel]] GetMe() on controller TgCheckerApi.Controllers.AuthController (TgCheckerApi).
2024-02-04 17:51:42.815 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.avatar, t.chat_id, t.last_update, t.notification_settings, t.telegram_id, t.unique_key, t.username, t1.id, t1.channel_id, t1.user_id, t1.id0, t1.avatar, t1.bumps, t1.description, t1.flag, t1."Hidden", t1.language, t1.last_bump, t1.members, t1.name, t1.notification_sent, t1.notifications, t1.promo_post, t1.promo_post_interval, t1.promo_post_last, t1.promo_post_sent, t1.promo_post_time, t1.telegram_id, t1."Url", t1."user", t1.id1, t1.channel, t1.tag, t1.id00, t1.text, t3.id, t3.channel_id, t3.content, t3.created_at, t3.parent_id, t3.rating, t3.user_id, t3.id0, t3.avatar, t3.bumps, t3.description, t3.flag, t3."Hidden", t3.language, t3.last_bump, t3.members, t3.name, t3.notification_sent, t3.notifications, t3.promo_post, t3.promo_post_interval, t3.promo_post_last, t3.promo_post_sent, t3.promo_post_time, t3.telegram_id, t3."Url", t3."user"
FROM (
    SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
    FROM "User" AS u
    WHERE u.unique_key = @__uniqueKeyClaim_0
    LIMIT 2
) AS t
LEFT JOIN (
    SELECT c.id, c.channel_id, c.user_id, c0.id AS id0, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."Url", c0."user", t0.id AS id1, t0.channel, t0.tag, t0.id0 AS id00, t0.text
    FROM "ChannelAccess" AS c
    LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
    LEFT JOIN (
        SELECT c1.id, c1.channel, c1.tag, t2.id AS id0, t2.text
        FROM "ChannelHasTag" AS c1
        LEFT JOIN "Tag" AS t2 ON c1.tag = t2.id
    ) AS t0 ON c0.id = t0.channel
) AS t1 ON t.id = t1.user_id
LEFT JOIN (
    SELECT c2.id, c2.channel_id, c2.content, c2.created_at, c2.parent_id, c2.rating, c2.user_id, c3.id AS id0, c3.avatar, c3.bumps, c3.description, c3.flag, c3."Hidden", c3.language, c3.last_bump, c3.members, c3.name, c3.notification_sent, c3.notifications, c3.promo_post, c3.promo_post_interval, c3.promo_post_last, c3.promo_post_sent, c3.promo_post_time, c3.telegram_id, c3."Url", c3."user"
    FROM "Comment" AS c2
    INNER JOIN "Channel" AS c3 ON c2.channel_id = c3.id
) AS t3 ON t.id = t3.user_id
ORDER BY t.id, t1.id, t1.id0, t1.id1, t1.id00, t3.id
2024-02-04 17:51:42.823 +03:00 [INF] Received request for getProfilePictureAndUsername. Request hash: 5ec5950f142bca89e2aa6cb4127bdea9391929bfdb585a0fda8bc0406276e946
2024-02-04 17:51:42.823 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:51:42.831 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:51:42.834 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:51:42.837 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 17:51:42.843 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 17:51:42.846 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 17:51:42.850 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 17:51:42.853 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 17:51:42.859 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:51:42.862 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:51:42.866 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:51:42.869 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 17:51:42.875 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 17:51:42.878 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 17:51:42.881 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 17:51:42.884 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 17:51:42.890 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:51:42.893 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:51:42.896 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:51:42.899 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 17:51:42.902 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 17:51:42.908 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 17:51:42.911 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 17:51:42.914 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 17:51:42.916 +03:00 [INF] Executing OkObjectResult, writing value of type 'TgCheckerApi.Models.GetModels.UserProfileModel'.
2024-02-04 17:51:42.917 +03:00 [INF] Executed action TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi) in 105.8756ms
2024-02-04 17:51:42.922 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 17:51:42.924 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Auth - - - 200 28585 application/json;+charset=utf-8 119.3828ms
2024-02-04 17:51:43.176 +03:00 [INF] New task completed successfully. Hash: 5ec5950f142bca89e2aa6cb4127bdea9391929bfdb585a0fda8bc0406276e946
2024-02-04 17:51:43.178 +03:00 [INF] User profile updated in background for uwu.
2024-02-04 17:53:09.111 +03:00 [INF] User profile is available. Using 'C:\Users\timar\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-04 17:53:09.266 +03:00 [INF] Default Quartz.NET properties loaded from embedded resource file
2024-02-04 17:53:09.303 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-02-04 17:53:09.306 +03:00 [INF] Quartz Scheduler created
2024-02-04 17:53:09.307 +03:00 [INF] RAMJobStore initialized.
2024-02-04 17:53:09.308 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-02-04 17:53:09.309 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-02-04 17:53:09.309 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-02-04 17:53:09.311 +03:00 [INF] JobFactory set to: TgCheckerApi.Job.QuartzJobFactory
2024-02-04 17:53:09.349 +03:00 [INF] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2024-02-04 17:53:09.429 +03:00 [INF] Now listening on: http://localhost:7256
2024-02-04 17:53:09.430 +03:00 [INF] Now listening on: http://localhost:5244
2024-02-04 17:53:09.434 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-04 17:53:09.435 +03:00 [INF] Hosting environment: Development
2024-02-04 17:53:09.436 +03:00 [INF] Content root path: C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\
2024-02-04 17:53:09.479 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 17:53:09.508 +03:00 [WRN] Failed to determine the https port for redirect.
2024-02-04 17:53:09.581 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 17:53:09.611 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 17:53:09.617 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 141.3346ms
2024-02-04 17:53:09.620 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=U3lV1tZi_mhb-j65MJ_Rlg - -
2024-02-04 17:53:09.627 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 17:53:09.846 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/index.html - -
2024-02-04 17:53:10.060 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/index.html - - - 200 - text/html;charset=utf-8 214.3369ms
2024-02-04 17:53:10.064 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_vs/browserLink - -
2024-02-04 17:53:10.066 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - -
2024-02-04 17:53:10.073 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - - - 200 12356 application/javascript;+charset=utf-8 7.1730ms
2024-02-04 17:53:10.078 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 13.8852ms
2024-02-04 17:53:10.150 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - -
2024-02-04 17:53:10.288 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 137.5671ms
2024-02-04 17:53:18.255 +03:00 [INF] Executed endpoint '/BotHub'
2024-02-04 17:53:18.258 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/BotHub?id=U3lV1tZi_mhb-j65MJ_Rlg - - - 101 - - 8638.2283ms
2024-02-04 17:53:19.562 +03:00 [INF] Start processing HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-04 17:53:19.573 +03:00 [INF] Sending HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-04 17:53:19.982 +03:00 [INF] Received HTTP response headers after 402.4813ms - 200
2024-02-04 17:53:19.987 +03:00 [INF] End processing HTTP request after 432.5046ms - 200
2024-02-04 17:53:19.993 +03:00 [INF] Successfully processed all channels via HTTP request at: {DateTime.UtcNow}
2024-02-04 17:53:21.256 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 17:53:21.260 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 17:53:21.261 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 17:53:21.262 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 5.3310ms
2024-02-04 17:53:21.272 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=q4s2o-bAahbypHwwHDKJvw - -
2024-02-04 17:53:21.274 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 17:53:36.068 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:7256/api/Auth - -
2024-02-04 17:53:36.070 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:53:36.072 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:7256/api/Auth - - - 204 - - 3.4907ms
2024-02-04 17:53:36.072 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Auth - -
2024-02-04 17:53:36.074 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:53:36.174 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 17:53:36.197 +03:00 [INF] Route matched with {action = "GetMe", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TgCheckerApi.Models.GetModels.UserProfileModel]] GetMe() on controller TgCheckerApi.Controllers.AuthController (TgCheckerApi).
2024-02-04 17:53:36.233 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:7256/api/Notification/UserNotifications - -
2024-02-04 17:53:36.234 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:53:36.235 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:7256/api/Notification/UserNotifications - - - 204 - - 2.0214ms
2024-02-04 17:53:36.236 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification/UserNotifications - -
2024-02-04 17:53:36.237 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:53:36.240 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetUserNotifications (TgCheckerApi)'
2024-02-04 17:53:36.248 +03:00 [INF] Route matched with {action = "GetUserNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetUserNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-04 17:53:38.628 +03:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2024-02-04 17:53:39.050 +03:00 [INF] Executed DbCommand (96ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "User" AS u
WHERE u.unique_key = @__uniqueKeyClaim_0
LIMIT 2
2024-02-04 17:53:39.050 +03:00 [INF] Executed DbCommand (96ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.avatar, t.chat_id, t.last_update, t.notification_settings, t.telegram_id, t.unique_key, t.username, t1.id, t1.channel_id, t1.user_id, t1.id0, t1.avatar, t1.bumps, t1.description, t1.flag, t1."Hidden", t1.language, t1.last_bump, t1.members, t1.name, t1.notification_sent, t1.notifications, t1.promo_post, t1.promo_post_interval, t1.promo_post_last, t1.promo_post_sent, t1.promo_post_time, t1.telegram_id, t1."Url", t1."user", t1.id1, t1.channel, t1.tag, t1.id00, t1.text, t3.id, t3.channel_id, t3.content, t3.created_at, t3.parent_id, t3.rating, t3.user_id, t3.id0, t3.avatar, t3.bumps, t3.description, t3.flag, t3."Hidden", t3.language, t3.last_bump, t3.members, t3.name, t3.notification_sent, t3.notifications, t3.promo_post, t3.promo_post_interval, t3.promo_post_last, t3.promo_post_sent, t3.promo_post_time, t3.telegram_id, t3."Url", t3."user"
FROM (
    SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
    FROM "User" AS u
    WHERE u.unique_key = @__uniqueKeyClaim_0
    LIMIT 2
) AS t
LEFT JOIN (
    SELECT c.id, c.channel_id, c.user_id, c0.id AS id0, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."Url", c0."user", t0.id AS id1, t0.channel, t0.tag, t0.id0 AS id00, t0.text
    FROM "ChannelAccess" AS c
    LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
    LEFT JOIN (
        SELECT c1.id, c1.channel, c1.tag, t2.id AS id0, t2.text
        FROM "ChannelHasTag" AS c1
        LEFT JOIN "Tag" AS t2 ON c1.tag = t2.id
    ) AS t0 ON c0.id = t0.channel
) AS t1 ON t.id = t1.user_id
LEFT JOIN (
    SELECT c2.id, c2.channel_id, c2.content, c2.created_at, c2.parent_id, c2.rating, c2.user_id, c3.id AS id0, c3.avatar, c3.bumps, c3.description, c3.flag, c3."Hidden", c3.language, c3.last_bump, c3.members, c3.name, c3.notification_sent, c3.notifications, c3.promo_post, c3.promo_post_interval, c3.promo_post_last, c3.promo_post_sent, c3.promo_post_time, c3.telegram_id, c3."Url", c3."user"
    FROM "Comment" AS c2
    INNER JOIN "Channel" AS c3 ON c2.channel_id = c3.id
) AS t3 ON t.id = t3.user_id
ORDER BY t.id, t1.id, t1.id0, t1.id1, t1.id00, t3.id
2024-02-04 17:53:39.273 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.user_id = @__user_Id_0
2024-02-04 17:53:39.308 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.BaseModels.Notification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-04 17:53:39.311 +03:00 [INF] Received request for getProfilePictureAndUsername. Request hash: 5ec5950f142bca89e2aa6cb4127bdea9391929bfdb585a0fda8bc0406276e946
2024-02-04 17:53:39.345 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetUserNotifications (TgCheckerApi) in 3089.8974ms
2024-02-04 17:53:39.347 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetUserNotifications (TgCheckerApi)'
2024-02-04 17:53:39.366 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification/UserNotifications - - - 200 524 application/json;+charset=utf-8 3130.6574ms
2024-02-04 17:53:39.402 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:53:39.431 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:53:39.440 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:53:39.448 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 17:53:39.478 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 17:53:39.584 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 17:53:39.616 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 17:53:39.652 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 17:53:39.662 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:53:39.665 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:53:39.667 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:53:39.672 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 17:53:39.676 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 17:53:39.679 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 17:53:39.702 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 17:53:39.705 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 17:53:39.708 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:53:39.711 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:53:39.713 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:53:39.719 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 17:53:39.721 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 17:53:39.727 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 17:53:39.730 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 17:53:39.736 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 17:53:39.741 +03:00 [INF] Executing OkObjectResult, writing value of type 'TgCheckerApi.Models.GetModels.UserProfileModel'.
2024-02-04 17:53:39.759 +03:00 [INF] Executed action TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi) in 3559.6338ms
2024-02-04 17:53:39.760 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Auth - -
2024-02-04 17:53:39.763 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:53:39.761 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 17:53:39.765 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Auth - - - 200 28584 application/json;+charset=utf-8 3692.6846ms
2024-02-04 17:53:39.764 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 17:53:39.767 +03:00 [INF] Route matched with {action = "GetMe", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TgCheckerApi.Models.GetModels.UserProfileModel]] GetMe() on controller TgCheckerApi.Controllers.AuthController (TgCheckerApi).
2024-02-04 17:53:39.809 +03:00 [INF] New task completed successfully. Hash: 5ec5950f142bca89e2aa6cb4127bdea9391929bfdb585a0fda8bc0406276e946
2024-02-04 17:53:39.843 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:7256/api/User/PaymentHistory - -
2024-02-04 17:53:39.845 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:53:39.847 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.avatar, t.chat_id, t.last_update, t.notification_settings, t.telegram_id, t.unique_key, t.username, t1.id, t1.channel_id, t1.user_id, t1.id0, t1.avatar, t1.bumps, t1.description, t1.flag, t1."Hidden", t1.language, t1.last_bump, t1.members, t1.name, t1.notification_sent, t1.notifications, t1.promo_post, t1.promo_post_interval, t1.promo_post_last, t1.promo_post_sent, t1.promo_post_time, t1.telegram_id, t1."Url", t1."user", t1.id1, t1.channel, t1.tag, t1.id00, t1.text, t3.id, t3.channel_id, t3.content, t3.created_at, t3.parent_id, t3.rating, t3.user_id, t3.id0, t3.avatar, t3.bumps, t3.description, t3.flag, t3."Hidden", t3.language, t3.last_bump, t3.members, t3.name, t3.notification_sent, t3.notifications, t3.promo_post, t3.promo_post_interval, t3.promo_post_last, t3.promo_post_sent, t3.promo_post_time, t3.telegram_id, t3."Url", t3."user"
FROM (
    SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
    FROM "User" AS u
    WHERE u.unique_key = @__uniqueKeyClaim_0
    LIMIT 2
) AS t
LEFT JOIN (
    SELECT c.id, c.channel_id, c.user_id, c0.id AS id0, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."Url", c0."user", t0.id AS id1, t0.channel, t0.tag, t0.id0 AS id00, t0.text
    FROM "ChannelAccess" AS c
    LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
    LEFT JOIN (
        SELECT c1.id, c1.channel, c1.tag, t2.id AS id0, t2.text
        FROM "ChannelHasTag" AS c1
        LEFT JOIN "Tag" AS t2 ON c1.tag = t2.id
    ) AS t0 ON c0.id = t0.channel
) AS t1 ON t.id = t1.user_id
LEFT JOIN (
    SELECT c2.id, c2.channel_id, c2.content, c2.created_at, c2.parent_id, c2.rating, c2.user_id, c3.id AS id0, c3.avatar, c3.bumps, c3.description, c3.flag, c3."Hidden", c3.language, c3.last_bump, c3.members, c3.name, c3.notification_sent, c3.notifications, c3.promo_post, c3.promo_post_interval, c3.promo_post_last, c3.promo_post_sent, c3.promo_post_time, c3.telegram_id, c3."Url", c3."user"
    FROM "Comment" AS c2
    INNER JOIN "Channel" AS c3 ON c2.channel_id = c3.id
) AS t3 ON t.id = t3.user_id
ORDER BY t.id, t1.id, t1.id0, t1.id1, t1.id00, t3.id
2024-02-04 17:53:39.848 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:7256/api/User/PaymentHistory - - - 204 - - 4.4089ms
2024-02-04 17:53:39.854 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/User/PaymentHistory - -
2024-02-04 17:53:39.859 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:53:39.855 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:53:39.854 +03:00 [INF] Received request for getProfilePictureAndUsername. Request hash: 5ec5950f142bca89e2aa6cb4127bdea9391929bfdb585a0fda8bc0406276e946
2024-02-04 17:53:39.860 +03:00 [INF] Executing endpoint 'TgCheckerApi.MapperProfiles.UserController.GetPaymentHistory (TgCheckerApi)'
2024-02-04 17:53:39.863 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:53:39.866 +03:00 [INF] Route matched with {action = "GetPaymentHistory", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.GetModels.PaymentHistoryModel]]] GetPaymentHistory() on controller TgCheckerApi.MapperProfiles.UserController (TgCheckerApi).
2024-02-04 17:53:39.867 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:53:39.876 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 17:53:39.877 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.avatar, t.chat_id, t.last_update, t.notification_settings, t.telegram_id, t.unique_key, t.username, t1.id, t1.channel_id, t1.user_id, t1.id0, t1.avatar, t1.bumps, t1.description, t1.flag, t1."Hidden", t1.language, t1.last_bump, t1.members, t1.name, t1.notification_sent, t1.notifications, t1.promo_post, t1.promo_post_interval, t1.promo_post_last, t1.promo_post_sent, t1.promo_post_time, t1.telegram_id, t1."Url", t1."user", t1.id1, t1.channel, t1.tag, t1.id00, t1.text, t3.id, t3.channel_id, t3.content, t3.created_at, t3.parent_id, t3.rating, t3.user_id, t3.id0, t3.avatar, t3.bumps, t3.description, t3.flag, t3."Hidden", t3.language, t3.last_bump, t3.members, t3.name, t3.notification_sent, t3.notifications, t3.promo_post, t3.promo_post_interval, t3.promo_post_last, t3.promo_post_sent, t3.promo_post_time, t3.telegram_id, t3."Url", t3."user"
FROM (
    SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
    FROM "User" AS u
    WHERE u.unique_key = @__uniqueKeyClaim_0
    LIMIT 2
) AS t
LEFT JOIN (
    SELECT c.id, c.channel_id, c.user_id, c0.id AS id0, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."Url", c0."user", t0.id AS id1, t0.channel, t0.tag, t0.id0 AS id00, t0.text
    FROM "ChannelAccess" AS c
    LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
    LEFT JOIN (
        SELECT c1.id, c1.channel, c1.tag, t2.id AS id0, t2.text
        FROM "ChannelHasTag" AS c1
        LEFT JOIN "Tag" AS t2 ON c1.tag = t2.id
    ) AS t0 ON c0.id = t0.channel
) AS t1 ON t.id = t1.user_id
LEFT JOIN (
    SELECT c2.id, c2.channel_id, c2.content, c2.created_at, c2.parent_id, c2.rating, c2.user_id, c3.id AS id0, c3.avatar, c3.bumps, c3.description, c3.flag, c3."Hidden", c3.language, c3.last_bump, c3.members, c3.name, c3.notification_sent, c3.notifications, c3.promo_post, c3.promo_post_interval, c3.promo_post_last, c3.promo_post_sent, c3.promo_post_time, c3.telegram_id, c3."Url", c3."user"
    FROM "Comment" AS c2
    INNER JOIN "Channel" AS c3 ON c2.channel_id = c3.id
) AS t3 ON t.id = t3.user_id
ORDER BY t.id, t1.id, t1.id0, t1.id1, t1.id00, t3.id
2024-02-04 17:53:39.880 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 17:53:39.885 +03:00 [INF] 0 entities were saved to the database.
2024-02-04 17:53:39.892 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 17:53:39.895 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 17:53:39.899 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 17:53:39.903 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.channel_id AS "ChannelId", p.id AS "PaymentId", p.subtype_id AS "ChannelSubscriptionType", p.created_at AS "PurchaseDate", p.duration AS "SubscriptionDuration", p.amount_value AS "AmountValue", p.amount_currency AS "AmountCurrency"
FROM "Payments" AS p
WHERE p.user_id = @__userId_0
2024-02-04 17:53:39.903 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:53:39.908 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.GetModels.PaymentHistoryModel, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-04 17:53:39.911 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:53:39.914 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:53:39.917 +03:00 [INF] Executed action TgCheckerApi.MapperProfiles.UserController.GetPaymentHistory (TgCheckerApi) in 48.4141ms
2024-02-04 17:53:39.921 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 17:53:39.921 +03:00 [INF] Executed endpoint 'TgCheckerApi.MapperProfiles.UserController.GetPaymentHistory (TgCheckerApi)'
2024-02-04 17:53:39.925 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 17:53:39.925 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/User/PaymentHistory - - - 200 1868 application/json;+charset=utf-8 70.8871ms
2024-02-04 17:53:39.928 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 17:53:39.931 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 17:53:39.936 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 17:53:39.939 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:53:39.945 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:53:39.948 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:53:39.952 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 17:53:39.955 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 17:53:39.959 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 17:53:39.962 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 17:53:39.968 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 17:53:39.971 +03:00 [INF] Executing OkObjectResult, writing value of type 'TgCheckerApi.Models.GetModels.UserProfileModel'.
2024-02-04 17:53:39.972 +03:00 [INF] Executed action TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi) in 182.2216ms
2024-02-04 17:53:39.973 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 17:53:39.974 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Auth - - - 200 28584 application/json;+charset=utf-8 214.0360ms
2024-02-04 17:53:40.200 +03:00 [INF] New task completed successfully. Hash: 5ec5950f142bca89e2aa6cb4127bdea9391929bfdb585a0fda8bc0406276e946
2024-02-04 17:53:40.205 +03:00 [INF] 0 entities were saved to the database.
2024-02-04 17:57:18.223 +03:00 [INF] User profile is available. Using 'C:\Users\timar\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-04 17:57:18.388 +03:00 [INF] Default Quartz.NET properties loaded from embedded resource file
2024-02-04 17:57:18.426 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-02-04 17:57:18.431 +03:00 [INF] Quartz Scheduler created
2024-02-04 17:57:18.432 +03:00 [INF] RAMJobStore initialized.
2024-02-04 17:57:18.433 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-02-04 17:57:18.434 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-02-04 17:57:18.436 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-02-04 17:57:18.438 +03:00 [INF] JobFactory set to: TgCheckerApi.Job.QuartzJobFactory
2024-02-04 17:57:18.480 +03:00 [INF] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2024-02-04 17:57:18.551 +03:00 [INF] Now listening on: http://localhost:7256
2024-02-04 17:57:18.552 +03:00 [INF] Now listening on: http://localhost:5244
2024-02-04 17:57:18.555 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-04 17:57:18.557 +03:00 [INF] Hosting environment: Development
2024-02-04 17:57:18.557 +03:00 [INF] Content root path: C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\
2024-02-04 17:57:18.881 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 17:57:18.913 +03:00 [WRN] Failed to determine the https port for redirect.
2024-02-04 17:57:18.988 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 17:57:19.011 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/index.html - -
2024-02-04 17:57:19.022 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 17:57:19.025 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 146.8619ms
2024-02-04 17:57:19.026 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=DFmVMQDmmW3SDvvlS7rMqg - -
2024-02-04 17:57:19.031 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 17:57:19.080 +03:00 [INF] Executed endpoint '/BotHub'
2024-02-04 17:57:19.084 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/BotHub?id=DFmVMQDmmW3SDvvlS7rMqg - - - 101 - - 57.8979ms
2024-02-04 17:57:19.245 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/index.html - - - 200 - text/html;charset=utf-8 234.0744ms
2024-02-04 17:57:19.250 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_vs/browserLink - -
2024-02-04 17:57:19.252 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - -
2024-02-04 17:57:19.258 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - - - 200 12356 application/javascript;+charset=utf-8 6.4999ms
2024-02-04 17:57:19.276 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 25.3207ms
2024-02-04 17:57:19.349 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - -
2024-02-04 17:57:19.469 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 120.5066ms
2024-02-04 17:57:28.681 +03:00 [INF] Start processing HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-04 17:57:28.690 +03:00 [INF] Sending HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-04 17:57:29.228 +03:00 [INF] Received HTTP response headers after 530.5474ms - 200
2024-02-04 17:57:29.232 +03:00 [INF] End processing HTTP request after 558.4877ms - 200
2024-02-04 17:57:29.238 +03:00 [INF] Successfully processed all channels via HTTP request at: {DateTime.UtcNow}
2024-02-04 17:57:30.081 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 17:57:30.084 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 17:57:30.085 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 17:57:30.086 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 5.0052ms
2024-02-04 17:57:30.097 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=S7w9mM6_nERw7iOJsUVyRw - -
2024-02-04 17:57:30.098 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 17:57:36.405 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:7256/api/Auth - -
2024-02-04 17:57:36.407 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:57:36.408 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:7256/api/Auth - - - 204 - - 3.3897ms
2024-02-04 17:57:36.410 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Auth - -
2024-02-04 17:57:36.410 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:57:36.508 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 17:57:36.528 +03:00 [INF] Route matched with {action = "GetMe", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TgCheckerApi.Models.GetModels.UserProfileModel]] GetMe() on controller TgCheckerApi.Controllers.AuthController (TgCheckerApi).
2024-02-04 17:57:36.564 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:7256/api/Notification/UserNotifications - -
2024-02-04 17:57:36.565 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:57:36.566 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:7256/api/Notification/UserNotifications - - - 204 - - 1.9417ms
2024-02-04 17:57:36.567 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification/UserNotifications - -
2024-02-04 17:57:36.572 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:57:36.575 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetUserNotifications (TgCheckerApi)'
2024-02-04 17:57:36.583 +03:00 [INF] Route matched with {action = "GetUserNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetUserNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-04 17:57:38.952 +03:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2024-02-04 17:57:39.369 +03:00 [INF] Executed DbCommand (100ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "User" AS u
WHERE u.unique_key = @__uniqueKeyClaim_0
LIMIT 2
2024-02-04 17:57:39.369 +03:00 [INF] Executed DbCommand (100ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.avatar, t.chat_id, t.last_update, t.notification_settings, t.telegram_id, t.unique_key, t.username, t1.id, t1.channel_id, t1.user_id, t1.id0, t1.avatar, t1.bumps, t1.description, t1.flag, t1."Hidden", t1.language, t1.last_bump, t1.members, t1.name, t1.notification_sent, t1.notifications, t1.promo_post, t1.promo_post_interval, t1.promo_post_last, t1.promo_post_sent, t1.promo_post_time, t1.telegram_id, t1."Url", t1."user", t1.id1, t1.channel, t1.tag, t1.id00, t1.text, t3.id, t3.channel_id, t3.content, t3.created_at, t3.parent_id, t3.rating, t3.user_id, t3.id0, t3.avatar, t3.bumps, t3.description, t3.flag, t3."Hidden", t3.language, t3.last_bump, t3.members, t3.name, t3.notification_sent, t3.notifications, t3.promo_post, t3.promo_post_interval, t3.promo_post_last, t3.promo_post_sent, t3.promo_post_time, t3.telegram_id, t3."Url", t3."user"
FROM (
    SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
    FROM "User" AS u
    WHERE u.unique_key = @__uniqueKeyClaim_0
    LIMIT 2
) AS t
LEFT JOIN (
    SELECT c.id, c.channel_id, c.user_id, c0.id AS id0, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."Url", c0."user", t0.id AS id1, t0.channel, t0.tag, t0.id0 AS id00, t0.text
    FROM "ChannelAccess" AS c
    LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
    LEFT JOIN (
        SELECT c1.id, c1.channel, c1.tag, t2.id AS id0, t2.text
        FROM "ChannelHasTag" AS c1
        LEFT JOIN "Tag" AS t2 ON c1.tag = t2.id
    ) AS t0 ON c0.id = t0.channel
) AS t1 ON t.id = t1.user_id
LEFT JOIN (
    SELECT c2.id, c2.channel_id, c2.content, c2.created_at, c2.parent_id, c2.rating, c2.user_id, c3.id AS id0, c3.avatar, c3.bumps, c3.description, c3.flag, c3."Hidden", c3.language, c3.last_bump, c3.members, c3.name, c3.notification_sent, c3.notifications, c3.promo_post, c3.promo_post_interval, c3.promo_post_last, c3.promo_post_sent, c3.promo_post_time, c3.telegram_id, c3."Url", c3."user"
    FROM "Comment" AS c2
    INNER JOIN "Channel" AS c3 ON c2.channel_id = c3.id
) AS t3 ON t.id = t3.user_id
ORDER BY t.id, t1.id, t1.id0, t1.id1, t1.id00, t3.id
2024-02-04 17:57:39.585 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.user_id = @__user_Id_0
2024-02-04 17:57:39.620 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.BaseModels.Notification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-04 17:57:39.658 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetUserNotifications (TgCheckerApi) in 3062.4454ms
2024-02-04 17:57:39.659 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetUserNotifications (TgCheckerApi)'
2024-02-04 17:57:39.680 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification/UserNotifications - - - 200 524 application/json;+charset=utf-8 3112.8346ms
2024-02-04 17:57:39.698 +03:00 [INF] Received request for getProfilePictureAndUsername. Request hash: 5ec5950f142bca89e2aa6cb4127bdea9391929bfdb585a0fda8bc0406276e946
2024-02-04 17:57:39.718 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:57:39.748 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:57:39.760 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:57:39.768 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 17:57:39.801 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 17:57:39.906 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 17:57:39.941 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 17:57:39.977 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 17:57:39.987 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:57:39.990 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:57:39.995 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:57:39.997 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 17:57:40.001 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 17:57:40.004 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 17:57:40.030 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 17:57:40.033 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 17:57:40.037 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:57:40.041 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:57:40.044 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:57:40.047 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 17:57:40.051 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 17:57:40.055 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 17:57:40.060 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 17:57:40.064 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 17:57:40.068 +03:00 [INF] Executing OkObjectResult, writing value of type 'TgCheckerApi.Models.GetModels.UserProfileModel'.
2024-02-04 17:57:40.100 +03:00 [INF] New task completed successfully. Hash: 5ec5950f142bca89e2aa6cb4127bdea9391929bfdb585a0fda8bc0406276e946
2024-02-04 17:57:40.101 +03:00 [INF] Executed action TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi) in 3570.4258ms
2024-02-04 17:57:40.102 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Auth - -
2024-02-04 17:57:40.103 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:57:40.102 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 17:57:40.105 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Auth - - - 200 28584 application/json;+charset=utf-8 3695.7290ms
2024-02-04 17:57:40.104 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 17:57:40.107 +03:00 [INF] Route matched with {action = "GetMe", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TgCheckerApi.Models.GetModels.UserProfileModel]] GetMe() on controller TgCheckerApi.Controllers.AuthController (TgCheckerApi).
2024-02-04 17:57:40.117 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.avatar, t.chat_id, t.last_update, t.notification_settings, t.telegram_id, t.unique_key, t.username, t1.id, t1.channel_id, t1.user_id, t1.id0, t1.avatar, t1.bumps, t1.description, t1.flag, t1."Hidden", t1.language, t1.last_bump, t1.members, t1.name, t1.notification_sent, t1.notifications, t1.promo_post, t1.promo_post_interval, t1.promo_post_last, t1.promo_post_sent, t1.promo_post_time, t1.telegram_id, t1."Url", t1."user", t1.id1, t1.channel, t1.tag, t1.id00, t1.text, t3.id, t3.channel_id, t3.content, t3.created_at, t3.parent_id, t3.rating, t3.user_id, t3.id0, t3.avatar, t3.bumps, t3.description, t3.flag, t3."Hidden", t3.language, t3.last_bump, t3.members, t3.name, t3.notification_sent, t3.notifications, t3.promo_post, t3.promo_post_interval, t3.promo_post_last, t3.promo_post_sent, t3.promo_post_time, t3.telegram_id, t3."Url", t3."user"
FROM (
    SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
    FROM "User" AS u
    WHERE u.unique_key = @__uniqueKeyClaim_0
    LIMIT 2
) AS t
LEFT JOIN (
    SELECT c.id, c.channel_id, c.user_id, c0.id AS id0, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."Url", c0."user", t0.id AS id1, t0.channel, t0.tag, t0.id0 AS id00, t0.text
    FROM "ChannelAccess" AS c
    LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
    LEFT JOIN (
        SELECT c1.id, c1.channel, c1.tag, t2.id AS id0, t2.text
        FROM "ChannelHasTag" AS c1
        LEFT JOIN "Tag" AS t2 ON c1.tag = t2.id
    ) AS t0 ON c0.id = t0.channel
) AS t1 ON t.id = t1.user_id
LEFT JOIN (
    SELECT c2.id, c2.channel_id, c2.content, c2.created_at, c2.parent_id, c2.rating, c2.user_id, c3.id AS id0, c3.avatar, c3.bumps, c3.description, c3.flag, c3."Hidden", c3.language, c3.last_bump, c3.members, c3.name, c3.notification_sent, c3.notifications, c3.promo_post, c3.promo_post_interval, c3.promo_post_last, c3.promo_post_sent, c3.promo_post_time, c3.telegram_id, c3."Url", c3."user"
    FROM "Comment" AS c2
    INNER JOIN "Channel" AS c3 ON c2.channel_id = c3.id
) AS t3 ON t.id = t3.user_id
ORDER BY t.id, t1.id, t1.id0, t1.id1, t1.id00, t3.id
2024-02-04 17:57:40.127 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:57:40.127 +03:00 [INF] Received request for getProfilePictureAndUsername. Request hash: 5ec5950f142bca89e2aa6cb4127bdea9391929bfdb585a0fda8bc0406276e946
2024-02-04 17:57:40.132 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:57:40.139 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:57:40.143 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 17:57:40.146 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 17:57:40.152 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 17:57:40.156 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 17:57:40.159 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 17:57:40.167 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:57:40.171 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:57:40.174 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:57:40.177 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 17:57:40.185 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 17:57:40.188 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:7256/api/User/PaymentHistory - -
2024-02-04 17:57:40.189 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 17:57:40.189 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:57:40.194 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:7256/api/User/PaymentHistory - - - 204 - - 5.3196ms
2024-02-04 17:57:40.194 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 17:57:40.198 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/User/PaymentHistory - -
2024-02-04 17:57:40.203 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 17:57:40.203 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:57:40.207 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:57:40.213 +03:00 [INF] Executing endpoint 'TgCheckerApi.MapperProfiles.UserController.GetPaymentHistory (TgCheckerApi)'
2024-02-04 17:57:40.220 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:57:40.225 +03:00 [INF] Route matched with {action = "GetPaymentHistory", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.GetModels.PaymentHistoryModel]]] GetPaymentHistory() on controller TgCheckerApi.MapperProfiles.UserController (TgCheckerApi).
2024-02-04 17:57:40.235 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:57:40.245 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.avatar, t.chat_id, t.last_update, t.notification_settings, t.telegram_id, t.unique_key, t.username, t1.id, t1.channel_id, t1.user_id, t1.id0, t1.avatar, t1.bumps, t1.description, t1.flag, t1."Hidden", t1.language, t1.last_bump, t1.members, t1.name, t1.notification_sent, t1.notifications, t1.promo_post, t1.promo_post_interval, t1.promo_post_last, t1.promo_post_sent, t1.promo_post_time, t1.telegram_id, t1."Url", t1."user", t1.id1, t1.channel, t1.tag, t1.id00, t1.text, t3.id, t3.channel_id, t3.content, t3.created_at, t3.parent_id, t3.rating, t3.user_id, t3.id0, t3.avatar, t3.bumps, t3.description, t3.flag, t3."Hidden", t3.language, t3.last_bump, t3.members, t3.name, t3.notification_sent, t3.notifications, t3.promo_post, t3.promo_post_interval, t3.promo_post_last, t3.promo_post_sent, t3.promo_post_time, t3.telegram_id, t3."Url", t3."user"
FROM (
    SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
    FROM "User" AS u
    WHERE u.unique_key = @__uniqueKeyClaim_0
    LIMIT 2
) AS t
LEFT JOIN (
    SELECT c.id, c.channel_id, c.user_id, c0.id AS id0, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."Url", c0."user", t0.id AS id1, t0.channel, t0.tag, t0.id0 AS id00, t0.text
    FROM "ChannelAccess" AS c
    LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
    LEFT JOIN (
        SELECT c1.id, c1.channel, c1.tag, t2.id AS id0, t2.text
        FROM "ChannelHasTag" AS c1
        LEFT JOIN "Tag" AS t2 ON c1.tag = t2.id
    ) AS t0 ON c0.id = t0.channel
) AS t1 ON t.id = t1.user_id
LEFT JOIN (
    SELECT c2.id, c2.channel_id, c2.content, c2.created_at, c2.parent_id, c2.rating, c2.user_id, c3.id AS id0, c3.avatar, c3.bumps, c3.description, c3.flag, c3."Hidden", c3.language, c3.last_bump, c3.members, c3.name, c3.notification_sent, c3.notifications, c3.promo_post, c3.promo_post_interval, c3.promo_post_last, c3.promo_post_sent, c3.promo_post_time, c3.telegram_id, c3."Url", c3."user"
    FROM "Comment" AS c2
    INNER JOIN "Channel" AS c3 ON c2.channel_id = c3.id
) AS t3 ON t.id = t3.user_id
ORDER BY t.id, t1.id, t1.id0, t1.id1, t1.id00, t3.id
2024-02-04 17:57:40.245 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 17:57:40.263 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 17:57:40.266 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 17:57:40.268 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.channel_id AS "ChannelId", p.id AS "PaymentId", p.subtype_id AS "ChannelSubscriptionType", p.created_at AS "PurchaseDate", p.duration AS "SubscriptionDuration", p.amount_value AS "AmountValue", p.amount_currency AS "AmountCurrency"
FROM "Payments" AS p
WHERE p.user_id = @__userId_0
2024-02-04 17:57:40.269 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 17:57:40.273 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.GetModels.PaymentHistoryModel, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-04 17:57:40.278 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 17:57:40.281 +03:00 [INF] Executing OkObjectResult, writing value of type 'TgCheckerApi.Models.GetModels.UserProfileModel'.
2024-02-04 17:57:40.282 +03:00 [INF] Executed action TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi) in 173.2394ms
2024-02-04 17:57:40.283 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 17:57:40.284 +03:00 [INF] Executed action TgCheckerApi.MapperProfiles.UserController.GetPaymentHistory (TgCheckerApi) in 46.1506ms
2024-02-04 17:57:40.284 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Auth - - - 200 28584 application/json;+charset=utf-8 181.7587ms
2024-02-04 17:57:40.285 +03:00 [INF] Executed endpoint 'TgCheckerApi.MapperProfiles.UserController.GetPaymentHistory (TgCheckerApi)'
2024-02-04 17:57:40.290 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/User/PaymentHistory - - - 200 1868 application/json;+charset=utf-8 92.2511ms
2024-02-04 17:57:40.388 +03:00 [INF] Executed DbCommand (46ms) [Parameters=[@p7='?' (DbType = Int32), @p0='?' (DbType = Binary), @p1='?' (DbType = Int64), @p2='?' (DbType = DateTime), @p3='?' (DbType = Int32), @p4='?' (DbType = Int64), @p5='?', @p6='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "User" SET avatar = @p0, chat_id = @p1, last_update = @p2, notification_settings = @p3, telegram_id = @p4, unique_key = @p5, username = @p6
WHERE id = @p7;
2024-02-04 17:57:40.412 +03:00 [INF] 1 entities were saved to the database.
2024-02-04 17:57:40.450 +03:00 [INF] New task completed successfully. Hash: 5ec5950f142bca89e2aa6cb4127bdea9391929bfdb585a0fda8bc0406276e946
2024-02-04 17:57:40.454 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@p7='?' (DbType = Int32), @p0='?' (DbType = Binary), @p1='?' (DbType = Int64), @p2='?' (DbType = DateTime), @p3='?' (DbType = Int32), @p4='?' (DbType = Int64), @p5='?', @p6='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "User" SET avatar = @p0, chat_id = @p1, last_update = @p2, notification_settings = @p3, telegram_id = @p4, unique_key = @p5, username = @p6
WHERE id = @p7;
2024-02-04 17:57:40.458 +03:00 [INF] 1 entities were saved to the database.
2024-02-04 17:57:56.422 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:7256/api/Auth - -
2024-02-04 17:57:56.422 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:57:56.423 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:7256/api/Auth - - - 204 - - 1.3409ms
2024-02-04 17:57:56.426 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Auth - -
2024-02-04 17:57:56.427 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:57:56.427 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 17:57:56.428 +03:00 [INF] Route matched with {action = "GetMe", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TgCheckerApi.Models.GetModels.UserProfileModel]] GetMe() on controller TgCheckerApi.Controllers.AuthController (TgCheckerApi).
2024-02-04 17:57:56.433 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.avatar, t.chat_id, t.last_update, t.notification_settings, t.telegram_id, t.unique_key, t.username, t1.id, t1.channel_id, t1.user_id, t1.id0, t1.avatar, t1.bumps, t1.description, t1.flag, t1."Hidden", t1.language, t1.last_bump, t1.members, t1.name, t1.notification_sent, t1.notifications, t1.promo_post, t1.promo_post_interval, t1.promo_post_last, t1.promo_post_sent, t1.promo_post_time, t1.telegram_id, t1."Url", t1."user", t1.id1, t1.channel, t1.tag, t1.id00, t1.text, t3.id, t3.channel_id, t3.content, t3.created_at, t3.parent_id, t3.rating, t3.user_id, t3.id0, t3.avatar, t3.bumps, t3.description, t3.flag, t3."Hidden", t3.language, t3.last_bump, t3.members, t3.name, t3.notification_sent, t3.notifications, t3.promo_post, t3.promo_post_interval, t3.promo_post_last, t3.promo_post_sent, t3.promo_post_time, t3.telegram_id, t3."Url", t3."user"
FROM (
    SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
    FROM "User" AS u
    WHERE u.unique_key = @__uniqueKeyClaim_0
    LIMIT 2
) AS t
LEFT JOIN (
    SELECT c.id, c.channel_id, c.user_id, c0.id AS id0, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."Url", c0."user", t0.id AS id1, t0.channel, t0.tag, t0.id0 AS id00, t0.text
    FROM "ChannelAccess" AS c
    LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
    LEFT JOIN (
        SELECT c1.id, c1.channel, c1.tag, t2.id AS id0, t2.text
        FROM "ChannelHasTag" AS c1
        LEFT JOIN "Tag" AS t2 ON c1.tag = t2.id
    ) AS t0 ON c0.id = t0.channel
) AS t1 ON t.id = t1.user_id
LEFT JOIN (
    SELECT c2.id, c2.channel_id, c2.content, c2.created_at, c2.parent_id, c2.rating, c2.user_id, c3.id AS id0, c3.avatar, c3.bumps, c3.description, c3.flag, c3."Hidden", c3.language, c3.last_bump, c3.members, c3.name, c3.notification_sent, c3.notifications, c3.promo_post, c3.promo_post_interval, c3.promo_post_last, c3.promo_post_sent, c3.promo_post_time, c3.telegram_id, c3."Url", c3."user"
    FROM "Comment" AS c2
    INNER JOIN "Channel" AS c3 ON c2.channel_id = c3.id
) AS t3 ON t.id = t3.user_id
ORDER BY t.id, t1.id, t1.id0, t1.id1, t1.id00, t3.id
2024-02-04 17:57:56.443 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:57:56.445 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:57:56.447 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:57:56.449 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 17:57:56.454 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 17:57:56.457 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 17:57:56.459 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 17:57:56.462 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 17:57:56.464 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:57:56.469 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:57:56.471 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:57:56.475 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 17:57:56.477 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 17:57:56.479 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 17:57:56.483 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 17:57:56.486 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 17:57:56.489 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:57:56.491 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:57:56.495 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:57:56.499 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 17:57:56.501 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 17:57:56.504 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 17:57:56.507 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 17:57:56.509 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 17:57:56.511 +03:00 [INF] Executing OkObjectResult, writing value of type 'TgCheckerApi.Models.GetModels.UserProfileModel'.
2024-02-04 17:57:56.512 +03:00 [INF] Executed action TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi) in 82.6031ms
2024-02-04 17:57:56.515 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 17:57:56.516 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Auth - - - 200 25324 application/json;+charset=utf-8 89.2577ms
2024-02-04 17:57:56.713 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:7256/api/User/PaymentHistory - -
2024-02-04 17:57:56.714 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:57:56.714 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:7256/api/User/PaymentHistory - - - 204 - - 1.3473ms
2024-02-04 17:57:56.715 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/User/PaymentHistory - -
2024-02-04 17:57:56.716 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:57:56.717 +03:00 [INF] Executing endpoint 'TgCheckerApi.MapperProfiles.UserController.GetPaymentHistory (TgCheckerApi)'
2024-02-04 17:57:56.718 +03:00 [INF] Route matched with {action = "GetPaymentHistory", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.GetModels.PaymentHistoryModel]]] GetPaymentHistory() on controller TgCheckerApi.MapperProfiles.UserController (TgCheckerApi).
2024-02-04 17:57:56.722 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.avatar, t.chat_id, t.last_update, t.notification_settings, t.telegram_id, t.unique_key, t.username, t1.id, t1.channel_id, t1.user_id, t1.id0, t1.avatar, t1.bumps, t1.description, t1.flag, t1."Hidden", t1.language, t1.last_bump, t1.members, t1.name, t1.notification_sent, t1.notifications, t1.promo_post, t1.promo_post_interval, t1.promo_post_last, t1.promo_post_sent, t1.promo_post_time, t1.telegram_id, t1."Url", t1."user", t1.id1, t1.channel, t1.tag, t1.id00, t1.text, t3.id, t3.channel_id, t3.content, t3.created_at, t3.parent_id, t3.rating, t3.user_id, t3.id0, t3.avatar, t3.bumps, t3.description, t3.flag, t3."Hidden", t3.language, t3.last_bump, t3.members, t3.name, t3.notification_sent, t3.notifications, t3.promo_post, t3.promo_post_interval, t3.promo_post_last, t3.promo_post_sent, t3.promo_post_time, t3.telegram_id, t3."Url", t3."user"
FROM (
    SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
    FROM "User" AS u
    WHERE u.unique_key = @__uniqueKeyClaim_0
    LIMIT 2
) AS t
LEFT JOIN (
    SELECT c.id, c.channel_id, c.user_id, c0.id AS id0, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."Url", c0."user", t0.id AS id1, t0.channel, t0.tag, t0.id0 AS id00, t0.text
    FROM "ChannelAccess" AS c
    LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
    LEFT JOIN (
        SELECT c1.id, c1.channel, c1.tag, t2.id AS id0, t2.text
        FROM "ChannelHasTag" AS c1
        LEFT JOIN "Tag" AS t2 ON c1.tag = t2.id
    ) AS t0 ON c0.id = t0.channel
) AS t1 ON t.id = t1.user_id
LEFT JOIN (
    SELECT c2.id, c2.channel_id, c2.content, c2.created_at, c2.parent_id, c2.rating, c2.user_id, c3.id AS id0, c3.avatar, c3.bumps, c3.description, c3.flag, c3."Hidden", c3.language, c3.last_bump, c3.members, c3.name, c3.notification_sent, c3.notifications, c3.promo_post, c3.promo_post_interval, c3.promo_post_last, c3.promo_post_sent, c3.promo_post_time, c3.telegram_id, c3."Url", c3."user"
    FROM "Comment" AS c2
    INNER JOIN "Channel" AS c3 ON c2.channel_id = c3.id
) AS t3 ON t.id = t3.user_id
ORDER BY t.id, t1.id, t1.id0, t1.id1, t1.id00, t3.id
2024-02-04 17:57:56.728 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.channel_id AS "ChannelId", p.id AS "PaymentId", p.subtype_id AS "ChannelSubscriptionType", p.created_at AS "PurchaseDate", p.duration AS "SubscriptionDuration", p.amount_value AS "AmountValue", p.amount_currency AS "AmountCurrency"
FROM "Payments" AS p
WHERE p.user_id = @__userId_0
2024-02-04 17:57:56.730 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.GetModels.PaymentHistoryModel, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-04 17:57:56.731 +03:00 [INF] Executed action TgCheckerApi.MapperProfiles.UserController.GetPaymentHistory (TgCheckerApi) in 12.4725ms
2024-02-04 17:57:56.732 +03:00 [INF] Executed endpoint 'TgCheckerApi.MapperProfiles.UserController.GetPaymentHistory (TgCheckerApi)'
2024-02-04 17:57:56.733 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/User/PaymentHistory - - - 200 1868 application/json;+charset=utf-8 17.9588ms
2024-02-04 17:57:56.810 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:7256/api/Notification/UserNotifications - -
2024-02-04 17:57:56.811 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:57:56.811 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:7256/api/Notification/UserNotifications - - - 204 - - 1.3389ms
2024-02-04 17:57:56.812 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification/UserNotifications - -
2024-02-04 17:57:56.812 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:57:56.814 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetUserNotifications (TgCheckerApi)'
2024-02-04 17:57:56.815 +03:00 [INF] Route matched with {action = "GetUserNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetUserNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-04 17:57:56.829 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "User" AS u
WHERE u.unique_key = @__uniqueKeyClaim_0
LIMIT 2
2024-02-04 17:57:56.834 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.user_id = @__user_Id_0
2024-02-04 17:57:56.836 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.BaseModels.Notification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-04 17:57:56.837 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetUserNotifications (TgCheckerApi) in 20.5516ms
2024-02-04 17:57:56.838 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetUserNotifications (TgCheckerApi)'
2024-02-04 17:57:56.838 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification/UserNotifications - - - 200 524 application/json;+charset=utf-8 26.4791ms
2024-02-04 17:57:56.879 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Auth - -
2024-02-04 17:57:56.879 +03:00 [INF] CORS policy execution successful.
2024-02-04 17:57:56.880 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 17:57:56.881 +03:00 [INF] Route matched with {action = "GetMe", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TgCheckerApi.Models.GetModels.UserProfileModel]] GetMe() on controller TgCheckerApi.Controllers.AuthController (TgCheckerApi).
2024-02-04 17:57:56.885 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.avatar, t.chat_id, t.last_update, t.notification_settings, t.telegram_id, t.unique_key, t.username, t1.id, t1.channel_id, t1.user_id, t1.id0, t1.avatar, t1.bumps, t1.description, t1.flag, t1."Hidden", t1.language, t1.last_bump, t1.members, t1.name, t1.notification_sent, t1.notifications, t1.promo_post, t1.promo_post_interval, t1.promo_post_last, t1.promo_post_sent, t1.promo_post_time, t1.telegram_id, t1."Url", t1."user", t1.id1, t1.channel, t1.tag, t1.id00, t1.text, t3.id, t3.channel_id, t3.content, t3.created_at, t3.parent_id, t3.rating, t3.user_id, t3.id0, t3.avatar, t3.bumps, t3.description, t3.flag, t3."Hidden", t3.language, t3.last_bump, t3.members, t3.name, t3.notification_sent, t3.notifications, t3.promo_post, t3.promo_post_interval, t3.promo_post_last, t3.promo_post_sent, t3.promo_post_time, t3.telegram_id, t3."Url", t3."user"
FROM (
    SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
    FROM "User" AS u
    WHERE u.unique_key = @__uniqueKeyClaim_0
    LIMIT 2
) AS t
LEFT JOIN (
    SELECT c.id, c.channel_id, c.user_id, c0.id AS id0, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."Url", c0."user", t0.id AS id1, t0.channel, t0.tag, t0.id0 AS id00, t0.text
    FROM "ChannelAccess" AS c
    LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
    LEFT JOIN (
        SELECT c1.id, c1.channel, c1.tag, t2.id AS id0, t2.text
        FROM "ChannelHasTag" AS c1
        LEFT JOIN "Tag" AS t2 ON c1.tag = t2.id
    ) AS t0 ON c0.id = t0.channel
) AS t1 ON t.id = t1.user_id
LEFT JOIN (
    SELECT c2.id, c2.channel_id, c2.content, c2.created_at, c2.parent_id, c2.rating, c2.user_id, c3.id AS id0, c3.avatar, c3.bumps, c3.description, c3.flag, c3."Hidden", c3.language, c3.last_bump, c3.members, c3.name, c3.notification_sent, c3.notifications, c3.promo_post, c3.promo_post_interval, c3.promo_post_last, c3.promo_post_sent, c3.promo_post_time, c3.telegram_id, c3."Url", c3."user"
    FROM "Comment" AS c2
    INNER JOIN "Channel" AS c3 ON c2.channel_id = c3.id
) AS t3 ON t.id = t3.user_id
ORDER BY t.id, t1.id, t1.id0, t1.id1, t1.id00, t3.id
2024-02-04 17:57:56.890 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:57:56.892 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:57:56.894 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:57:56.899 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 17:57:56.901 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 17:57:56.903 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 17:57:56.905 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 17:57:56.906 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 17:57:56.908 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:57:56.914 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:57:56.916 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:57:56.919 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 17:57:56.921 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 17:57:56.923 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 17:57:56.925 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 17:57:56.930 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 17:57:56.932 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:57:56.934 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:57:56.936 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 17:57:56.938 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 17:57:56.940 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 17:57:56.944 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 17:57:56.946 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 17:57:56.948 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 17:57:56.949 +03:00 [INF] Executing OkObjectResult, writing value of type 'TgCheckerApi.Models.GetModels.UserProfileModel'.
2024-02-04 17:57:56.950 +03:00 [INF] Executed action TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi) in 68.2795ms
2024-02-04 17:57:56.951 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 17:57:56.952 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Auth - - - 200 25324 application/json;+charset=utf-8 72.9002ms
2024-02-04 18:23:40.321 +03:00 [INF] User profile is available. Using 'C:\Users\timar\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-04 18:23:40.471 +03:00 [INF] Default Quartz.NET properties loaded from embedded resource file
2024-02-04 18:23:40.509 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-02-04 18:23:40.513 +03:00 [INF] Quartz Scheduler created
2024-02-04 18:23:40.514 +03:00 [INF] RAMJobStore initialized.
2024-02-04 18:23:40.515 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-02-04 18:23:40.516 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-02-04 18:23:40.516 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-02-04 18:23:40.518 +03:00 [INF] JobFactory set to: TgCheckerApi.Job.QuartzJobFactory
2024-02-04 18:23:40.560 +03:00 [INF] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2024-02-04 18:23:40.639 +03:00 [INF] Now listening on: http://localhost:7256
2024-02-04 18:23:40.640 +03:00 [INF] Now listening on: http://localhost:5244
2024-02-04 18:23:40.643 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-04 18:23:40.644 +03:00 [INF] Hosting environment: Development
2024-02-04 18:23:40.645 +03:00 [INF] Content root path: C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\
2024-02-04 18:23:40.925 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 18:23:40.953 +03:00 [WRN] Failed to determine the https port for redirect.
2024-02-04 18:23:41.022 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 18:23:41.049 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 18:23:41.052 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 130.3544ms
2024-02-04 18:23:41.076 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=5ACKOOa9bQz0Qtw66a3QQA - -
2024-02-04 18:23:41.110 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 18:23:41.272 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/index.html - -
2024-02-04 18:23:41.469 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/index.html - - - 200 - text/html;charset=utf-8 196.9633ms
2024-02-04 18:23:41.474 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - -
2024-02-04 18:23:41.477 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_vs/browserLink - -
2024-02-04 18:23:41.479 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - - - 200 12356 application/javascript;+charset=utf-8 4.5741ms
2024-02-04 18:23:41.499 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 22.1472ms
2024-02-04 18:23:41.564 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - -
2024-02-04 18:23:41.703 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 138.2495ms
2024-02-04 18:23:50.776 +03:00 [INF] Start processing HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-04 18:23:50.785 +03:00 [INF] Sending HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-04 18:23:51.431 +03:00 [INF] Received HTTP response headers after 640.0066ms - 200
2024-02-04 18:23:51.436 +03:00 [INF] End processing HTTP request after 666.472ms - 200
2024-02-04 18:23:51.441 +03:00 [INF] Successfully processed all channels via HTTP request at: {DateTime.UtcNow}
2024-02-04 18:23:53.736 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:7256/api/Auth - -
2024-02-04 18:23:53.738 +03:00 [INF] CORS policy execution successful.
2024-02-04 18:23:53.740 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:7256/api/Auth - - - 204 - - 3.8703ms
2024-02-04 18:23:53.741 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Auth - -
2024-02-04 18:23:53.742 +03:00 [INF] CORS policy execution successful.
2024-02-04 18:23:53.843 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 18:23:53.863 +03:00 [INF] Route matched with {action = "GetMe", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TgCheckerApi.Models.GetModels.UserProfileModel]] GetMe() on controller TgCheckerApi.Controllers.AuthController (TgCheckerApi).
2024-02-04 18:23:53.885 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:7256/api/Notification/UserNotifications - -
2024-02-04 18:23:53.885 +03:00 [INF] CORS policy execution successful.
2024-02-04 18:23:53.886 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:7256/api/Notification/UserNotifications - - - 204 - - 1.7506ms
2024-02-04 18:23:53.890 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification/UserNotifications - -
2024-02-04 18:23:53.891 +03:00 [INF] CORS policy execution successful.
2024-02-04 18:23:53.894 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetUserNotifications (TgCheckerApi)'
2024-02-04 18:23:53.898 +03:00 [INF] Route matched with {action = "GetUserNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetUserNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-04 18:23:56.472 +03:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2024-02-04 18:23:56.896 +03:00 [INF] Executed DbCommand (100ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.avatar, t.chat_id, t.last_update, t.notification_settings, t.telegram_id, t.unique_key, t.username, t1.id, t1.channel_id, t1.user_id, t1.id0, t1.avatar, t1.bumps, t1.description, t1.flag, t1."Hidden", t1.language, t1.last_bump, t1.members, t1.name, t1.notification_sent, t1.notifications, t1.promo_post, t1.promo_post_interval, t1.promo_post_last, t1.promo_post_sent, t1.promo_post_time, t1.telegram_id, t1."Url", t1."user", t1.id1, t1.channel, t1.tag, t1.id00, t1.text, t3.id, t3.channel_id, t3.content, t3.created_at, t3.parent_id, t3.rating, t3.user_id, t3.id0, t3.avatar, t3.bumps, t3.description, t3.flag, t3."Hidden", t3.language, t3.last_bump, t3.members, t3.name, t3.notification_sent, t3.notifications, t3.promo_post, t3.promo_post_interval, t3.promo_post_last, t3.promo_post_sent, t3.promo_post_time, t3.telegram_id, t3."Url", t3."user"
FROM (
    SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
    FROM "User" AS u
    WHERE u.unique_key = @__uniqueKeyClaim_0
    LIMIT 2
) AS t
LEFT JOIN (
    SELECT c.id, c.channel_id, c.user_id, c0.id AS id0, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."Url", c0."user", t0.id AS id1, t0.channel, t0.tag, t0.id0 AS id00, t0.text
    FROM "ChannelAccess" AS c
    LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
    LEFT JOIN (
        SELECT c1.id, c1.channel, c1.tag, t2.id AS id0, t2.text
        FROM "ChannelHasTag" AS c1
        LEFT JOIN "Tag" AS t2 ON c1.tag = t2.id
    ) AS t0 ON c0.id = t0.channel
) AS t1 ON t.id = t1.user_id
LEFT JOIN (
    SELECT c2.id, c2.channel_id, c2.content, c2.created_at, c2.parent_id, c2.rating, c2.user_id, c3.id AS id0, c3.avatar, c3.bumps, c3.description, c3.flag, c3."Hidden", c3.language, c3.last_bump, c3.members, c3.name, c3.notification_sent, c3.notifications, c3.promo_post, c3.promo_post_interval, c3.promo_post_last, c3.promo_post_sent, c3.promo_post_time, c3.telegram_id, c3."Url", c3."user"
    FROM "Comment" AS c2
    INNER JOIN "Channel" AS c3 ON c2.channel_id = c3.id
) AS t3 ON t.id = t3.user_id
ORDER BY t.id, t1.id, t1.id0, t1.id1, t1.id00, t3.id
2024-02-04 18:23:56.896 +03:00 [INF] Executed DbCommand (100ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "User" AS u
WHERE u.unique_key = @__uniqueKeyClaim_0
LIMIT 2
2024-02-04 18:23:57.124 +03:00 [INF] Executed DbCommand (14ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.user_id = @__user_Id_0
2024-02-04 18:23:57.157 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.BaseModels.Notification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-04 18:23:57.199 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetUserNotifications (TgCheckerApi) in 3293.4997ms
2024-02-04 18:23:57.201 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetUserNotifications (TgCheckerApi)'
2024-02-04 18:23:57.224 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification/UserNotifications - - - 200 524 application/json;+charset=utf-8 3334.0337ms
2024-02-04 18:23:57.262 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:23:57.290 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:23:57.299 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:23:57.307 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 18:23:57.337 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 18:23:57.440 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 18:23:57.483 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 18:23:57.525 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 18:23:57.533 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:23:57.537 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:23:57.540 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:23:57.542 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 18:23:57.546 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 18:23:57.549 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 18:23:57.575 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 18:23:57.578 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 18:23:57.581 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:23:57.584 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:23:57.587 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:23:57.590 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 18:23:57.593 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 18:23:57.597 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 18:23:57.600 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 18:23:57.603 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 18:23:57.607 +03:00 [INF] Executing OkObjectResult, writing value of type 'TgCheckerApi.Models.GetModels.UserProfileModel'.
2024-02-04 18:23:57.629 +03:00 [INF] Executed action TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi) in 3763.748ms
2024-02-04 18:23:57.630 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Auth - -
2024-02-04 18:23:57.631 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 18:23:57.631 +03:00 [INF] CORS policy execution successful.
2024-02-04 18:23:57.633 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Auth - - - 200 25324 application/json;+charset=utf-8 3892.1624ms
2024-02-04 18:23:57.634 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 18:23:57.636 +03:00 [INF] Route matched with {action = "GetMe", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TgCheckerApi.Models.GetModels.UserProfileModel]] GetMe() on controller TgCheckerApi.Controllers.AuthController (TgCheckerApi).
2024-02-04 18:23:57.695 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.avatar, t.chat_id, t.last_update, t.notification_settings, t.telegram_id, t.unique_key, t.username, t1.id, t1.channel_id, t1.user_id, t1.id0, t1.avatar, t1.bumps, t1.description, t1.flag, t1."Hidden", t1.language, t1.last_bump, t1.members, t1.name, t1.notification_sent, t1.notifications, t1.promo_post, t1.promo_post_interval, t1.promo_post_last, t1.promo_post_sent, t1.promo_post_time, t1.telegram_id, t1."Url", t1."user", t1.id1, t1.channel, t1.tag, t1.id00, t1.text, t3.id, t3.channel_id, t3.content, t3.created_at, t3.parent_id, t3.rating, t3.user_id, t3.id0, t3.avatar, t3.bumps, t3.description, t3.flag, t3."Hidden", t3.language, t3.last_bump, t3.members, t3.name, t3.notification_sent, t3.notifications, t3.promo_post, t3.promo_post_interval, t3.promo_post_last, t3.promo_post_sent, t3.promo_post_time, t3.telegram_id, t3."Url", t3."user"
FROM (
    SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
    FROM "User" AS u
    WHERE u.unique_key = @__uniqueKeyClaim_0
    LIMIT 2
) AS t
LEFT JOIN (
    SELECT c.id, c.channel_id, c.user_id, c0.id AS id0, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."Url", c0."user", t0.id AS id1, t0.channel, t0.tag, t0.id0 AS id00, t0.text
    FROM "ChannelAccess" AS c
    LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
    LEFT JOIN (
        SELECT c1.id, c1.channel, c1.tag, t2.id AS id0, t2.text
        FROM "ChannelHasTag" AS c1
        LEFT JOIN "Tag" AS t2 ON c1.tag = t2.id
    ) AS t0 ON c0.id = t0.channel
) AS t1 ON t.id = t1.user_id
LEFT JOIN (
    SELECT c2.id, c2.channel_id, c2.content, c2.created_at, c2.parent_id, c2.rating, c2.user_id, c3.id AS id0, c3.avatar, c3.bumps, c3.description, c3.flag, c3."Hidden", c3.language, c3.last_bump, c3.members, c3.name, c3.notification_sent, c3.notifications, c3.promo_post, c3.promo_post_interval, c3.promo_post_last, c3.promo_post_sent, c3.promo_post_time, c3.telegram_id, c3."Url", c3."user"
    FROM "Comment" AS c2
    INNER JOIN "Channel" AS c3 ON c2.channel_id = c3.id
) AS t3 ON t.id = t3.user_id
ORDER BY t.id, t1.id, t1.id0, t1.id1, t1.id00, t3.id
2024-02-04 18:23:57.702 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:23:57.705 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:23:57.708 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:23:57.711 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 18:23:57.712 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:7256/api/User/PaymentHistory - -
2024-02-04 18:23:57.714 +03:00 [INF] CORS policy execution successful.
2024-02-04 18:23:57.714 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 18:23:57.715 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:7256/api/User/PaymentHistory - - - 204 - - 3.3580ms
2024-02-04 18:23:57.718 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/User/PaymentHistory - -
2024-02-04 18:23:57.719 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 18:23:57.719 +03:00 [INF] CORS policy execution successful.
2024-02-04 18:23:57.722 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 18:23:57.722 +03:00 [INF] Executing endpoint 'TgCheckerApi.MapperProfiles.UserController.GetPaymentHistory (TgCheckerApi)'
2024-02-04 18:23:57.725 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 18:23:57.728 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:23:57.728 +03:00 [INF] Route matched with {action = "GetPaymentHistory", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.GetModels.PaymentHistoryModel]]] GetPaymentHistory() on controller TgCheckerApi.MapperProfiles.UserController (TgCheckerApi).
2024-02-04 18:23:57.730 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:23:57.734 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:23:57.736 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.avatar, t.chat_id, t.last_update, t.notification_settings, t.telegram_id, t.unique_key, t.username, t1.id, t1.channel_id, t1.user_id, t1.id0, t1.avatar, t1.bumps, t1.description, t1.flag, t1."Hidden", t1.language, t1.last_bump, t1.members, t1.name, t1.notification_sent, t1.notifications, t1.promo_post, t1.promo_post_interval, t1.promo_post_last, t1.promo_post_sent, t1.promo_post_time, t1.telegram_id, t1."Url", t1."user", t1.id1, t1.channel, t1.tag, t1.id00, t1.text, t3.id, t3.channel_id, t3.content, t3.created_at, t3.parent_id, t3.rating, t3.user_id, t3.id0, t3.avatar, t3.bumps, t3.description, t3.flag, t3."Hidden", t3.language, t3.last_bump, t3.members, t3.name, t3.notification_sent, t3.notifications, t3.promo_post, t3.promo_post_interval, t3.promo_post_last, t3.promo_post_sent, t3.promo_post_time, t3.telegram_id, t3."Url", t3."user"
FROM (
    SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
    FROM "User" AS u
    WHERE u.unique_key = @__uniqueKeyClaim_0
    LIMIT 2
) AS t
LEFT JOIN (
    SELECT c.id, c.channel_id, c.user_id, c0.id AS id0, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."Url", c0."user", t0.id AS id1, t0.channel, t0.tag, t0.id0 AS id00, t0.text
    FROM "ChannelAccess" AS c
    LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
    LEFT JOIN (
        SELECT c1.id, c1.channel, c1.tag, t2.id AS id0, t2.text
        FROM "ChannelHasTag" AS c1
        LEFT JOIN "Tag" AS t2 ON c1.tag = t2.id
    ) AS t0 ON c0.id = t0.channel
) AS t1 ON t.id = t1.user_id
LEFT JOIN (
    SELECT c2.id, c2.channel_id, c2.content, c2.created_at, c2.parent_id, c2.rating, c2.user_id, c3.id AS id0, c3.avatar, c3.bumps, c3.description, c3.flag, c3."Hidden", c3.language, c3.last_bump, c3.members, c3.name, c3.notification_sent, c3.notifications, c3.promo_post, c3.promo_post_interval, c3.promo_post_last, c3.promo_post_sent, c3.promo_post_time, c3.telegram_id, c3."Url", c3."user"
    FROM "Comment" AS c2
    INNER JOIN "Channel" AS c3 ON c2.channel_id = c3.id
) AS t3 ON t.id = t3.user_id
ORDER BY t.id, t1.id, t1.id0, t1.id1, t1.id00, t3.id
2024-02-04 18:23:57.737 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 18:23:57.745 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 18:23:57.748 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 18:23:57.752 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 18:23:57.755 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.channel_id AS "ChannelId", p.id AS "PaymentId", p.subtype_id AS "ChannelSubscriptionType", p.created_at AS "PurchaseDate", p.duration AS "SubscriptionDuration", p.amount_value AS "AmountValue", p.amount_currency AS "AmountCurrency"
FROM "Payments" AS p
WHERE p.user_id = @__userId_0
2024-02-04 18:23:57.756 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 18:23:57.759 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.GetModels.PaymentHistoryModel, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-04 18:23:57.761 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:23:57.765 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:23:57.767 +03:00 [INF] Executed action TgCheckerApi.MapperProfiles.UserController.GetPaymentHistory (TgCheckerApi) in 35.621ms
2024-02-04 18:23:57.768 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:23:57.768 +03:00 [INF] Executed endpoint 'TgCheckerApi.MapperProfiles.UserController.GetPaymentHistory (TgCheckerApi)'
2024-02-04 18:23:57.772 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/User/PaymentHistory - - - 200 1868 application/json;+charset=utf-8 53.3124ms
2024-02-04 18:23:57.772 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 18:23:57.776 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 18:23:57.779 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 18:23:57.782 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 18:23:57.784 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 18:23:57.787 +03:00 [INF] Executing OkObjectResult, writing value of type 'TgCheckerApi.Models.GetModels.UserProfileModel'.
2024-02-04 18:23:57.789 +03:00 [INF] Executed action TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi) in 151.6491ms
2024-02-04 18:23:57.790 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 18:23:57.791 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Auth - - - 200 25324 application/json;+charset=utf-8 160.9836ms
2024-02-04 18:24:09.016 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:7256/api/Auth - -
2024-02-04 18:24:09.017 +03:00 [INF] CORS policy execution successful.
2024-02-04 18:24:09.018 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:7256/api/Auth - - - 204 - - 1.6469ms
2024-02-04 18:24:09.019 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Auth - -
2024-02-04 18:24:09.020 +03:00 [INF] CORS policy execution successful.
2024-02-04 18:24:09.020 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 18:24:09.021 +03:00 [INF] Route matched with {action = "GetMe", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TgCheckerApi.Models.GetModels.UserProfileModel]] GetMe() on controller TgCheckerApi.Controllers.AuthController (TgCheckerApi).
2024-02-04 18:24:09.027 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.avatar, t.chat_id, t.last_update, t.notification_settings, t.telegram_id, t.unique_key, t.username, t1.id, t1.channel_id, t1.user_id, t1.id0, t1.avatar, t1.bumps, t1.description, t1.flag, t1."Hidden", t1.language, t1.last_bump, t1.members, t1.name, t1.notification_sent, t1.notifications, t1.promo_post, t1.promo_post_interval, t1.promo_post_last, t1.promo_post_sent, t1.promo_post_time, t1.telegram_id, t1."Url", t1."user", t1.id1, t1.channel, t1.tag, t1.id00, t1.text, t3.id, t3.channel_id, t3.content, t3.created_at, t3.parent_id, t3.rating, t3.user_id, t3.id0, t3.avatar, t3.bumps, t3.description, t3.flag, t3."Hidden", t3.language, t3.last_bump, t3.members, t3.name, t3.notification_sent, t3.notifications, t3.promo_post, t3.promo_post_interval, t3.promo_post_last, t3.promo_post_sent, t3.promo_post_time, t3.telegram_id, t3."Url", t3."user"
FROM (
    SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
    FROM "User" AS u
    WHERE u.unique_key = @__uniqueKeyClaim_0
    LIMIT 2
) AS t
LEFT JOIN (
    SELECT c.id, c.channel_id, c.user_id, c0.id AS id0, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."Url", c0."user", t0.id AS id1, t0.channel, t0.tag, t0.id0 AS id00, t0.text
    FROM "ChannelAccess" AS c
    LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
    LEFT JOIN (
        SELECT c1.id, c1.channel, c1.tag, t2.id AS id0, t2.text
        FROM "ChannelHasTag" AS c1
        LEFT JOIN "Tag" AS t2 ON c1.tag = t2.id
    ) AS t0 ON c0.id = t0.channel
) AS t1 ON t.id = t1.user_id
LEFT JOIN (
    SELECT c2.id, c2.channel_id, c2.content, c2.created_at, c2.parent_id, c2.rating, c2.user_id, c3.id AS id0, c3.avatar, c3.bumps, c3.description, c3.flag, c3."Hidden", c3.language, c3.last_bump, c3.members, c3.name, c3.notification_sent, c3.notifications, c3.promo_post, c3.promo_post_interval, c3.promo_post_last, c3.promo_post_sent, c3.promo_post_time, c3.telegram_id, c3."Url", c3."user"
    FROM "Comment" AS c2
    INNER JOIN "Channel" AS c3 ON c2.channel_id = c3.id
) AS t3 ON t.id = t3.user_id
ORDER BY t.id, t1.id, t1.id0, t1.id1, t1.id00, t3.id
2024-02-04 18:24:09.033 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:24:09.036 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:24:09.039 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:24:09.041 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 18:24:09.044 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 18:24:09.048 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 18:24:09.051 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 18:24:09.055 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 18:24:09.058 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:24:09.061 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:24:09.064 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:24:09.067 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 18:24:09.072 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 18:24:09.075 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 18:24:09.078 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 18:24:09.081 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 18:24:09.084 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:24:09.096 +03:00 [INF] Received request for getProfilePictureAndUsername. Request hash: 5ec5950f142bca89e2aa6cb4127bdea9391929bfdb585a0fda8bc0406276e946
2024-02-04 18:24:09.099 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:24:09.104 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:24:09.108 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 18:24:09.111 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 18:24:09.116 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 18:24:09.119 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 18:24:09.122 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 18:24:09.124 +03:00 [INF] Executing OkObjectResult, writing value of type 'TgCheckerApi.Models.GetModels.UserProfileModel'.
2024-02-04 18:24:09.125 +03:00 [INF] Executed action TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi) in 101.8535ms
2024-02-04 18:24:09.127 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 18:24:09.128 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Auth - - - 200 25324 application/json;+charset=utf-8 108.8896ms
2024-02-04 18:24:09.325 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:7256/api/User/PaymentHistory - -
2024-02-04 18:24:09.326 +03:00 [INF] CORS policy execution successful.
2024-02-04 18:24:09.326 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:7256/api/User/PaymentHistory - - - 204 - - 1.9252ms
2024-02-04 18:24:09.327 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/User/PaymentHistory - -
2024-02-04 18:24:09.328 +03:00 [INF] CORS policy execution successful.
2024-02-04 18:24:09.330 +03:00 [INF] Executing endpoint 'TgCheckerApi.MapperProfiles.UserController.GetPaymentHistory (TgCheckerApi)'
2024-02-04 18:24:09.331 +03:00 [INF] Route matched with {action = "GetPaymentHistory", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.GetModels.PaymentHistoryModel]]] GetPaymentHistory() on controller TgCheckerApi.MapperProfiles.UserController (TgCheckerApi).
2024-02-04 18:24:09.336 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.avatar, t.chat_id, t.last_update, t.notification_settings, t.telegram_id, t.unique_key, t.username, t1.id, t1.channel_id, t1.user_id, t1.id0, t1.avatar, t1.bumps, t1.description, t1.flag, t1."Hidden", t1.language, t1.last_bump, t1.members, t1.name, t1.notification_sent, t1.notifications, t1.promo_post, t1.promo_post_interval, t1.promo_post_last, t1.promo_post_sent, t1.promo_post_time, t1.telegram_id, t1."Url", t1."user", t1.id1, t1.channel, t1.tag, t1.id00, t1.text, t3.id, t3.channel_id, t3.content, t3.created_at, t3.parent_id, t3.rating, t3.user_id, t3.id0, t3.avatar, t3.bumps, t3.description, t3.flag, t3."Hidden", t3.language, t3.last_bump, t3.members, t3.name, t3.notification_sent, t3.notifications, t3.promo_post, t3.promo_post_interval, t3.promo_post_last, t3.promo_post_sent, t3.promo_post_time, t3.telegram_id, t3."Url", t3."user"
FROM (
    SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
    FROM "User" AS u
    WHERE u.unique_key = @__uniqueKeyClaim_0
    LIMIT 2
) AS t
LEFT JOIN (
    SELECT c.id, c.channel_id, c.user_id, c0.id AS id0, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."Url", c0."user", t0.id AS id1, t0.channel, t0.tag, t0.id0 AS id00, t0.text
    FROM "ChannelAccess" AS c
    LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
    LEFT JOIN (
        SELECT c1.id, c1.channel, c1.tag, t2.id AS id0, t2.text
        FROM "ChannelHasTag" AS c1
        LEFT JOIN "Tag" AS t2 ON c1.tag = t2.id
    ) AS t0 ON c0.id = t0.channel
) AS t1 ON t.id = t1.user_id
LEFT JOIN (
    SELECT c2.id, c2.channel_id, c2.content, c2.created_at, c2.parent_id, c2.rating, c2.user_id, c3.id AS id0, c3.avatar, c3.bumps, c3.description, c3.flag, c3."Hidden", c3.language, c3.last_bump, c3.members, c3.name, c3.notification_sent, c3.notifications, c3.promo_post, c3.promo_post_interval, c3.promo_post_last, c3.promo_post_sent, c3.promo_post_time, c3.telegram_id, c3."Url", c3."user"
    FROM "Comment" AS c2
    INNER JOIN "Channel" AS c3 ON c2.channel_id = c3.id
) AS t3 ON t.id = t3.user_id
ORDER BY t.id, t1.id, t1.id0, t1.id1, t1.id00, t3.id
2024-02-04 18:24:09.344 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.channel_id AS "ChannelId", p.id AS "PaymentId", p.subtype_id AS "ChannelSubscriptionType", p.created_at AS "PurchaseDate", p.duration AS "SubscriptionDuration", p.amount_value AS "AmountValue", p.amount_currency AS "AmountCurrency"
FROM "Payments" AS p
WHERE p.user_id = @__userId_0
2024-02-04 18:24:09.346 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.GetModels.PaymentHistoryModel, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-04 18:24:09.348 +03:00 [INF] Executed action TgCheckerApi.MapperProfiles.UserController.GetPaymentHistory (TgCheckerApi) in 15.4816ms
2024-02-04 18:24:09.349 +03:00 [INF] Executed endpoint 'TgCheckerApi.MapperProfiles.UserController.GetPaymentHistory (TgCheckerApi)'
2024-02-04 18:24:09.350 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/User/PaymentHistory - - - 200 1868 application/json;+charset=utf-8 22.3755ms
2024-02-04 18:24:09.426 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:7256/api/Notification/UserNotifications - -
2024-02-04 18:24:09.427 +03:00 [INF] CORS policy execution successful.
2024-02-04 18:24:09.428 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:7256/api/Notification/UserNotifications - - - 204 - - 1.8526ms
2024-02-04 18:24:09.429 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification/UserNotifications - -
2024-02-04 18:24:09.430 +03:00 [INF] CORS policy execution successful.
2024-02-04 18:24:09.433 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetUserNotifications (TgCheckerApi)'
2024-02-04 18:24:09.434 +03:00 [INF] Route matched with {action = "GetUserNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetUserNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-04 18:24:09.439 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "User" AS u
WHERE u.unique_key = @__uniqueKeyClaim_0
LIMIT 2
2024-02-04 18:24:09.447 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.user_id = @__user_Id_0
2024-02-04 18:24:09.451 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.BaseModels.Notification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-04 18:24:09.452 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetUserNotifications (TgCheckerApi) in 15.4494ms
2024-02-04 18:24:09.453 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetUserNotifications (TgCheckerApi)'
2024-02-04 18:24:09.454 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification/UserNotifications - - - 200 524 application/json;+charset=utf-8 24.6004ms
2024-02-04 18:24:09.493 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Auth - -
2024-02-04 18:24:09.494 +03:00 [INF] CORS policy execution successful.
2024-02-04 18:24:09.495 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 18:24:09.496 +03:00 [INF] Route matched with {action = "GetMe", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TgCheckerApi.Models.GetModels.UserProfileModel]] GetMe() on controller TgCheckerApi.Controllers.AuthController (TgCheckerApi).
2024-02-04 18:24:09.502 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.avatar, t.chat_id, t.last_update, t.notification_settings, t.telegram_id, t.unique_key, t.username, t1.id, t1.channel_id, t1.user_id, t1.id0, t1.avatar, t1.bumps, t1.description, t1.flag, t1."Hidden", t1.language, t1.last_bump, t1.members, t1.name, t1.notification_sent, t1.notifications, t1.promo_post, t1.promo_post_interval, t1.promo_post_last, t1.promo_post_sent, t1.promo_post_time, t1.telegram_id, t1."Url", t1."user", t1.id1, t1.channel, t1.tag, t1.id00, t1.text, t3.id, t3.channel_id, t3.content, t3.created_at, t3.parent_id, t3.rating, t3.user_id, t3.id0, t3.avatar, t3.bumps, t3.description, t3.flag, t3."Hidden", t3.language, t3.last_bump, t3.members, t3.name, t3.notification_sent, t3.notifications, t3.promo_post, t3.promo_post_interval, t3.promo_post_last, t3.promo_post_sent, t3.promo_post_time, t3.telegram_id, t3."Url", t3."user"
FROM (
    SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
    FROM "User" AS u
    WHERE u.unique_key = @__uniqueKeyClaim_0
    LIMIT 2
) AS t
LEFT JOIN (
    SELECT c.id, c.channel_id, c.user_id, c0.id AS id0, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."Url", c0."user", t0.id AS id1, t0.channel, t0.tag, t0.id0 AS id00, t0.text
    FROM "ChannelAccess" AS c
    LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
    LEFT JOIN (
        SELECT c1.id, c1.channel, c1.tag, t2.id AS id0, t2.text
        FROM "ChannelHasTag" AS c1
        LEFT JOIN "Tag" AS t2 ON c1.tag = t2.id
    ) AS t0 ON c0.id = t0.channel
) AS t1 ON t.id = t1.user_id
LEFT JOIN (
    SELECT c2.id, c2.channel_id, c2.content, c2.created_at, c2.parent_id, c2.rating, c2.user_id, c3.id AS id0, c3.avatar, c3.bumps, c3.description, c3.flag, c3."Hidden", c3.language, c3.last_bump, c3.members, c3.name, c3.notification_sent, c3.notifications, c3.promo_post, c3.promo_post_interval, c3.promo_post_last, c3.promo_post_sent, c3.promo_post_time, c3.telegram_id, c3."Url", c3."user"
    FROM "Comment" AS c2
    INNER JOIN "Channel" AS c3 ON c2.channel_id = c3.id
) AS t3 ON t.id = t3.user_id
ORDER BY t.id, t1.id, t1.id0, t1.id1, t1.id00, t3.id
2024-02-04 18:24:09.509 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:24:09.509 +03:00 [INF] Received request for getProfilePictureAndUsername. Request hash: 5ec5950f142bca89e2aa6cb4127bdea9391929bfdb585a0fda8bc0406276e946
2024-02-04 18:24:09.512 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:24:09.512 +03:00 [INF] Request found in cache. Hash: 5ec5950f142bca89e2aa6cb4127bdea9391929bfdb585a0fda8bc0406276e946
2024-02-04 18:24:09.516 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:24:09.519 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 18:24:09.523 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 18:24:09.526 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 18:24:09.530 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 18:24:09.533 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 18:24:09.537 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:24:09.541 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:24:09.545 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:24:09.548 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 18:24:09.552 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 18:24:09.555 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 18:24:09.559 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 18:24:09.561 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 18:24:09.564 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:24:09.568 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:24:09.571 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:24:09.575 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 18:24:09.579 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 18:24:09.583 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 18:24:09.587 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 18:24:09.590 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 18:24:09.593 +03:00 [INF] Executing OkObjectResult, writing value of type 'TgCheckerApi.Models.GetModels.UserProfileModel'.
2024-02-04 18:24:09.595 +03:00 [INF] Executed action TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi) in 96.4824ms
2024-02-04 18:24:09.596 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 18:24:09.597 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Auth - - - 200 25324 application/json;+charset=utf-8 104.6670ms
2024-02-04 18:24:39.144 +03:00 [WRN] New task timed out. Hash: 5ec5950f142bca89e2aa6cb4127bdea9391929bfdb585a0fda8bc0406276e946
2024-02-04 18:24:39.523 +03:00 [WRN] Cached task timed out.
2024-02-04 18:24:44.935 +03:00 [WRN] Response is not in expected 'OkObjectResult' format or does not contain a string value.
2024-02-04 18:24:44.935 +03:00 [WRN] Response is not in expected 'OkObjectResult' format or does not contain a string value.
2024-02-04 18:24:45.003 +03:00 [ERR] Invalid operation when updating user profile.
System.InvalidOperationException: Invalid response format.
   at TgCheckerApi.Services.WebSocketService.ResponseToObject[T](IActionResult response) in C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\Services\WebSocketService.cs:line 75
   at TgCheckerApi.Controllers.AuthController.UpdateUserProfileIfNeeded(User user) in C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\Controllers\AuthController.cs:line 147
2024-02-04 18:24:45.003 +03:00 [ERR] Invalid operation when updating user profile.
System.InvalidOperationException: Invalid response format.
   at TgCheckerApi.Services.WebSocketService.ResponseToObject[T](IActionResult response) in C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\Services\WebSocketService.cs:line 75
   at TgCheckerApi.Controllers.AuthController.UpdateUserProfileIfNeeded(User user) in C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\Controllers\AuthController.cs:line 147
2024-02-04 18:25:36.939 +03:00 [INF] User profile is available. Using 'C:\Users\timar\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-04 18:25:37.096 +03:00 [INF] Default Quartz.NET properties loaded from embedded resource file
2024-02-04 18:25:37.132 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-02-04 18:25:37.135 +03:00 [INF] Quartz Scheduler created
2024-02-04 18:25:37.136 +03:00 [INF] RAMJobStore initialized.
2024-02-04 18:25:37.137 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-02-04 18:25:37.138 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-02-04 18:25:37.138 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-02-04 18:25:37.139 +03:00 [INF] JobFactory set to: TgCheckerApi.Job.QuartzJobFactory
2024-02-04 18:25:37.180 +03:00 [INF] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2024-02-04 18:25:37.257 +03:00 [INF] Now listening on: http://localhost:7256
2024-02-04 18:25:37.258 +03:00 [INF] Now listening on: http://localhost:5244
2024-02-04 18:25:37.264 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-04 18:25:37.264 +03:00 [INF] Hosting environment: Development
2024-02-04 18:25:37.265 +03:00 [INF] Content root path: C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\
2024-02-04 18:25:37.434 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/index.html - -
2024-02-04 18:25:37.703 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/index.html - - - 200 - text/html;charset=utf-8 271.5348ms
2024-02-04 18:25:37.709 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_vs/browserLink - -
2024-02-04 18:25:37.710 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - -
2024-02-04 18:25:37.716 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - - - 200 12356 application/javascript;+charset=utf-8 5.2051ms
2024-02-04 18:25:37.729 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 19.8818ms
2024-02-04 18:25:37.788 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - -
2024-02-04 18:25:37.911 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 122.6428ms
2024-02-04 18:25:41.483 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 18:25:41.488 +03:00 [WRN] Failed to determine the https port for redirect.
2024-02-04 18:25:41.557 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 18:25:41.569 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 18:25:41.570 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 87.0792ms
2024-02-04 18:25:41.583 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=SYOG76XL0m6DAKhmXg9igg - -
2024-02-04 18:25:41.585 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 18:25:47.337 +03:00 [INF] Start processing HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-04 18:25:47.343 +03:00 [INF] Sending HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-04 18:25:47.731 +03:00 [INF] Received HTTP response headers after 383.3835ms - 200
2024-02-04 18:25:47.735 +03:00 [INF] End processing HTTP request after 402.5408ms - 200
2024-02-04 18:25:47.739 +03:00 [INF] Successfully processed all channels via HTTP request at: {DateTime.UtcNow}
2024-02-04 18:25:55.307 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:7256/api/Auth - -
2024-02-04 18:25:55.308 +03:00 [INF] CORS policy execution successful.
2024-02-04 18:25:55.310 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:7256/api/Auth - - - 204 - - 2.7878ms
2024-02-04 18:25:55.310 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Auth - -
2024-02-04 18:25:55.311 +03:00 [INF] CORS policy execution successful.
2024-02-04 18:25:55.368 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 18:25:55.382 +03:00 [INF] Route matched with {action = "GetMe", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TgCheckerApi.Models.GetModels.UserProfileModel]] GetMe() on controller TgCheckerApi.Controllers.AuthController (TgCheckerApi).
2024-02-04 18:25:55.468 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:7256/api/Notification/UserNotifications - -
2024-02-04 18:25:55.468 +03:00 [INF] CORS policy execution successful.
2024-02-04 18:25:55.469 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:7256/api/Notification/UserNotifications - - - 204 - - 1.0184ms
2024-02-04 18:25:55.470 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification/UserNotifications - -
2024-02-04 18:25:55.470 +03:00 [INF] CORS policy execution successful.
2024-02-04 18:25:55.474 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetUserNotifications (TgCheckerApi)'
2024-02-04 18:25:55.476 +03:00 [INF] Route matched with {action = "GetUserNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetUserNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-04 18:25:56.850 +03:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2024-02-04 18:25:57.110 +03:00 [INF] Executed DbCommand (55ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "User" AS u
WHERE u.unique_key = @__uniqueKeyClaim_0
LIMIT 2
2024-02-04 18:25:57.110 +03:00 [INF] Executed DbCommand (55ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.avatar, t.chat_id, t.last_update, t.notification_settings, t.telegram_id, t.unique_key, t.username, t1.id, t1.channel_id, t1.user_id, t1.id0, t1.avatar, t1.bumps, t1.description, t1.flag, t1."Hidden", t1.language, t1.last_bump, t1.members, t1.name, t1.notification_sent, t1.notifications, t1.promo_post, t1.promo_post_interval, t1.promo_post_last, t1.promo_post_sent, t1.promo_post_time, t1.telegram_id, t1."Url", t1."user", t1.id1, t1.channel, t1.tag, t1.id00, t1.text, t3.id, t3.channel_id, t3.content, t3.created_at, t3.parent_id, t3.rating, t3.user_id, t3.id0, t3.avatar, t3.bumps, t3.description, t3.flag, t3."Hidden", t3.language, t3.last_bump, t3.members, t3.name, t3.notification_sent, t3.notifications, t3.promo_post, t3.promo_post_interval, t3.promo_post_last, t3.promo_post_sent, t3.promo_post_time, t3.telegram_id, t3."Url", t3."user"
FROM (
    SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
    FROM "User" AS u
    WHERE u.unique_key = @__uniqueKeyClaim_0
    LIMIT 2
) AS t
LEFT JOIN (
    SELECT c.id, c.channel_id, c.user_id, c0.id AS id0, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."Url", c0."user", t0.id AS id1, t0.channel, t0.tag, t0.id0 AS id00, t0.text
    FROM "ChannelAccess" AS c
    LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
    LEFT JOIN (
        SELECT c1.id, c1.channel, c1.tag, t2.id AS id0, t2.text
        FROM "ChannelHasTag" AS c1
        LEFT JOIN "Tag" AS t2 ON c1.tag = t2.id
    ) AS t0 ON c0.id = t0.channel
) AS t1 ON t.id = t1.user_id
LEFT JOIN (
    SELECT c2.id, c2.channel_id, c2.content, c2.created_at, c2.parent_id, c2.rating, c2.user_id, c3.id AS id0, c3.avatar, c3.bumps, c3.description, c3.flag, c3."Hidden", c3.language, c3.last_bump, c3.members, c3.name, c3.notification_sent, c3.notifications, c3.promo_post, c3.promo_post_interval, c3.promo_post_last, c3.promo_post_sent, c3.promo_post_time, c3.telegram_id, c3."Url", c3."user"
    FROM "Comment" AS c2
    INNER JOIN "Channel" AS c3 ON c2.channel_id = c3.id
) AS t3 ON t.id = t3.user_id
ORDER BY t.id, t1.id, t1.id0, t1.id1, t1.id00, t3.id
2024-02-04 18:25:57.254 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.user_id = @__user_Id_0
2024-02-04 18:25:57.274 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.BaseModels.Notification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-04 18:25:57.297 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetUserNotifications (TgCheckerApi) in 1816.0208ms
2024-02-04 18:25:57.298 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetUserNotifications (TgCheckerApi)'
2024-02-04 18:25:57.312 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification/UserNotifications - - - 200 524 application/json;+charset=utf-8 1842.2878ms
2024-02-04 18:25:57.321 +03:00 [INF] Received request for getProfilePictureAndUsername. Request hash: 5ec5950f142bca89e2aa6cb4127bdea9391929bfdb585a0fda8bc0406276e946
2024-02-04 18:25:57.330 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:25:57.353 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:25:57.361 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:25:57.366 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 18:25:57.394 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 18:25:57.471 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 18:25:57.503 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 18:25:57.533 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 18:25:57.539 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:25:57.541 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:25:57.542 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:25:57.544 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 18:25:57.546 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 18:25:57.548 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 18:25:57.560 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 18:25:57.562 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 18:25:57.564 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:25:57.565 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:25:57.567 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:25:57.569 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 18:25:57.570 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 18:25:57.572 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 18:25:57.574 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 18:25:57.575 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 18:25:57.578 +03:00 [INF] Executing OkObjectResult, writing value of type 'TgCheckerApi.Models.GetModels.UserProfileModel'.
2024-02-04 18:25:57.588 +03:00 [INF] Executed action TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi) in 2204.3338ms
2024-02-04 18:25:57.589 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Auth - -
2024-02-04 18:25:57.589 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 18:25:57.590 +03:00 [INF] CORS policy execution successful.
2024-02-04 18:25:57.591 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Auth - - - 200 25324 application/json;+charset=utf-8 2280.0153ms
2024-02-04 18:25:57.591 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 18:25:57.593 +03:00 [INF] Route matched with {action = "GetMe", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TgCheckerApi.Models.GetModels.UserProfileModel]] GetMe() on controller TgCheckerApi.Controllers.AuthController (TgCheckerApi).
2024-02-04 18:25:57.602 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.avatar, t.chat_id, t.last_update, t.notification_settings, t.telegram_id, t.unique_key, t.username, t1.id, t1.channel_id, t1.user_id, t1.id0, t1.avatar, t1.bumps, t1.description, t1.flag, t1."Hidden", t1.language, t1.last_bump, t1.members, t1.name, t1.notification_sent, t1.notifications, t1.promo_post, t1.promo_post_interval, t1.promo_post_last, t1.promo_post_sent, t1.promo_post_time, t1.telegram_id, t1."Url", t1."user", t1.id1, t1.channel, t1.tag, t1.id00, t1.text, t3.id, t3.channel_id, t3.content, t3.created_at, t3.parent_id, t3.rating, t3.user_id, t3.id0, t3.avatar, t3.bumps, t3.description, t3.flag, t3."Hidden", t3.language, t3.last_bump, t3.members, t3.name, t3.notification_sent, t3.notifications, t3.promo_post, t3.promo_post_interval, t3.promo_post_last, t3.promo_post_sent, t3.promo_post_time, t3.telegram_id, t3."Url", t3."user"
FROM (
    SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
    FROM "User" AS u
    WHERE u.unique_key = @__uniqueKeyClaim_0
    LIMIT 2
) AS t
LEFT JOIN (
    SELECT c.id, c.channel_id, c.user_id, c0.id AS id0, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."Url", c0."user", t0.id AS id1, t0.channel, t0.tag, t0.id0 AS id00, t0.text
    FROM "ChannelAccess" AS c
    LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
    LEFT JOIN (
        SELECT c1.id, c1.channel, c1.tag, t2.id AS id0, t2.text
        FROM "ChannelHasTag" AS c1
        LEFT JOIN "Tag" AS t2 ON c1.tag = t2.id
    ) AS t0 ON c0.id = t0.channel
) AS t1 ON t.id = t1.user_id
LEFT JOIN (
    SELECT c2.id, c2.channel_id, c2.content, c2.created_at, c2.parent_id, c2.rating, c2.user_id, c3.id AS id0, c3.avatar, c3.bumps, c3.description, c3.flag, c3."Hidden", c3.language, c3.last_bump, c3.members, c3.name, c3.notification_sent, c3.notifications, c3.promo_post, c3.promo_post_interval, c3.promo_post_last, c3.promo_post_sent, c3.promo_post_time, c3.telegram_id, c3."Url", c3."user"
    FROM "Comment" AS c2
    INNER JOIN "Channel" AS c3 ON c2.channel_id = c3.id
) AS t3 ON t.id = t3.user_id
ORDER BY t.id, t1.id, t1.id0, t1.id1, t1.id00, t3.id
2024-02-04 18:25:57.606 +03:00 [INF] Received request for getProfilePictureAndUsername. Request hash: 5ec5950f142bca89e2aa6cb4127bdea9391929bfdb585a0fda8bc0406276e946
2024-02-04 18:25:57.606 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:25:57.607 +03:00 [INF] Request found in cache. Hash: 5ec5950f142bca89e2aa6cb4127bdea9391929bfdb585a0fda8bc0406276e946
2024-02-04 18:25:57.609 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:25:57.611 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:25:57.613 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 18:25:57.616 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 18:25:57.618 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 18:25:57.619 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 18:25:57.621 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 18:25:57.623 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:25:57.625 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:25:57.626 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:25:57.628 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 18:25:57.630 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 18:25:57.632 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 18:25:57.634 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 18:25:57.635 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 18:25:57.637 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:25:57.638 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:25:57.641 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:25:57.642 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 18:25:57.644 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 18:25:57.646 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 18:25:57.648 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 18:25:57.649 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 18:25:57.651 +03:00 [INF] Executing OkObjectResult, writing value of type 'TgCheckerApi.Models.GetModels.UserProfileModel'.
2024-02-04 18:25:57.651 +03:00 [INF] Executed action TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi) in 57.0124ms
2024-02-04 18:25:57.652 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 18:25:57.653 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Auth - - - 200 25324 application/json;+charset=utf-8 64.4095ms
2024-02-04 18:25:57.673 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:7256/api/User/PaymentHistory - -
2024-02-04 18:25:57.673 +03:00 [INF] CORS policy execution successful.
2024-02-04 18:25:57.674 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:7256/api/User/PaymentHistory - - - 204 - - 1.5142ms
2024-02-04 18:25:57.675 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/User/PaymentHistory - -
2024-02-04 18:25:57.676 +03:00 [INF] CORS policy execution successful.
2024-02-04 18:25:57.676 +03:00 [INF] Executing endpoint 'TgCheckerApi.MapperProfiles.UserController.GetPaymentHistory (TgCheckerApi)'
2024-02-04 18:25:57.679 +03:00 [INF] Route matched with {action = "GetPaymentHistory", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.GetModels.PaymentHistoryModel]]] GetPaymentHistory() on controller TgCheckerApi.MapperProfiles.UserController (TgCheckerApi).
2024-02-04 18:25:57.685 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.avatar, t.chat_id, t.last_update, t.notification_settings, t.telegram_id, t.unique_key, t.username, t1.id, t1.channel_id, t1.user_id, t1.id0, t1.avatar, t1.bumps, t1.description, t1.flag, t1."Hidden", t1.language, t1.last_bump, t1.members, t1.name, t1.notification_sent, t1.notifications, t1.promo_post, t1.promo_post_interval, t1.promo_post_last, t1.promo_post_sent, t1.promo_post_time, t1.telegram_id, t1."Url", t1."user", t1.id1, t1.channel, t1.tag, t1.id00, t1.text, t3.id, t3.channel_id, t3.content, t3.created_at, t3.parent_id, t3.rating, t3.user_id, t3.id0, t3.avatar, t3.bumps, t3.description, t3.flag, t3."Hidden", t3.language, t3.last_bump, t3.members, t3.name, t3.notification_sent, t3.notifications, t3.promo_post, t3.promo_post_interval, t3.promo_post_last, t3.promo_post_sent, t3.promo_post_time, t3.telegram_id, t3."Url", t3."user"
FROM (
    SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
    FROM "User" AS u
    WHERE u.unique_key = @__uniqueKeyClaim_0
    LIMIT 2
) AS t
LEFT JOIN (
    SELECT c.id, c.channel_id, c.user_id, c0.id AS id0, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."Url", c0."user", t0.id AS id1, t0.channel, t0.tag, t0.id0 AS id00, t0.text
    FROM "ChannelAccess" AS c
    LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
    LEFT JOIN (
        SELECT c1.id, c1.channel, c1.tag, t2.id AS id0, t2.text
        FROM "ChannelHasTag" AS c1
        LEFT JOIN "Tag" AS t2 ON c1.tag = t2.id
    ) AS t0 ON c0.id = t0.channel
) AS t1 ON t.id = t1.user_id
LEFT JOIN (
    SELECT c2.id, c2.channel_id, c2.content, c2.created_at, c2.parent_id, c2.rating, c2.user_id, c3.id AS id0, c3.avatar, c3.bumps, c3.description, c3.flag, c3."Hidden", c3.language, c3.last_bump, c3.members, c3.name, c3.notification_sent, c3.notifications, c3.promo_post, c3.promo_post_interval, c3.promo_post_last, c3.promo_post_sent, c3.promo_post_time, c3.telegram_id, c3."Url", c3."user"
    FROM "Comment" AS c2
    INNER JOIN "Channel" AS c3 ON c2.channel_id = c3.id
) AS t3 ON t.id = t3.user_id
ORDER BY t.id, t1.id, t1.id0, t1.id1, t1.id00, t3.id
2024-02-04 18:25:57.697 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.channel_id AS "ChannelId", p.id AS "PaymentId", p.subtype_id AS "ChannelSubscriptionType", p.created_at AS "PurchaseDate", p.duration AS "SubscriptionDuration", p.amount_value AS "AmountValue", p.amount_currency AS "AmountCurrency"
FROM "Payments" AS p
WHERE p.user_id = @__userId_0
2024-02-04 18:25:57.699 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.GetModels.PaymentHistoryModel, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-04 18:25:57.703 +03:00 [INF] Executed action TgCheckerApi.MapperProfiles.UserController.GetPaymentHistory (TgCheckerApi) in 23.2649ms
2024-02-04 18:25:57.704 +03:00 [INF] Executed endpoint 'TgCheckerApi.MapperProfiles.UserController.GetPaymentHistory (TgCheckerApi)'
2024-02-04 18:25:57.705 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/User/PaymentHistory - - - 200 1868 application/json;+charset=utf-8 30.1473ms
2024-02-04 18:25:57.857 +03:00 [INF] New task completed successfully. Hash: 5ec5950f142bca89e2aa6cb4127bdea9391929bfdb585a0fda8bc0406276e946
2024-02-04 18:25:57.986 +03:00 [INF] Cached task completed successfully.
2024-02-04 18:25:58.017 +03:00 [INF] Executed DbCommand (46ms) [Parameters=[@p7='?' (DbType = Int32), @p0='?' (DbType = Binary), @p1='?' (DbType = Int64), @p2='?' (DbType = DateTime), @p3='?' (DbType = Int32), @p4='?' (DbType = Int64), @p5='?', @p6='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "User" SET avatar = @p0, chat_id = @p1, last_update = @p2, notification_settings = @p3, telegram_id = @p4, unique_key = @p5, username = @p6
WHERE id = @p7;
2024-02-04 18:25:58.037 +03:00 [INF] 1 entities were saved to the database.
2024-02-04 18:25:58.043 +03:00 [INF] Executed DbCommand (56ms) [Parameters=[@p7='?' (DbType = Int32), @p0='?' (DbType = Binary), @p1='?' (DbType = Int64), @p2='?' (DbType = DateTime), @p3='?' (DbType = Int32), @p4='?' (DbType = Int64), @p5='?', @p6='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "User" SET avatar = @p0, chat_id = @p1, last_update = @p2, notification_settings = @p3, telegram_id = @p4, unique_key = @p5, username = @p6
WHERE id = @p7;
2024-02-04 18:25:58.044 +03:00 [INF] 1 entities were saved to the database.
2024-02-04 18:26:30.501 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Channel/Page/1?&sortOption=members&ascending=False&language= - -
2024-02-04 18:26:30.502 +03:00 [INF] CORS policy execution successful.
2024-02-04 18:26:30.503 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.ChannelController.GetChannels (TgCheckerApi)'
2024-02-04 18:26:30.514 +03:00 [INF] Route matched with {action = "GetChannels", controller = "Channel"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.GetModels.ChannelGetModel]]] GetChannels(Int32, System.String, System.String, System.String, System.String, System.String) on controller TgCheckerApi.Controllers.ChannelController (TgCheckerApi).
2024-02-04 18:26:30.580 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Channel" AS c
WHERE c."Hidden" <> TRUE OR c."Hidden" IS NULL
2024-02-04 18:26:30.593 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."Url", c."user"
FROM "Channel" AS c
WHERE c."Hidden" <> TRUE OR c."Hidden" IS NULL
ORDER BY c.members DESC
LIMIT @__p_1 OFFSET @__p_0
2024-02-04 18:26:30.621 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-04 18:26:30.624 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:26:30.627 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-04 18:26:30.632 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:26:30.634 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-04 18:26:30.637 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:26:30.639 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-04 18:26:30.641 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:26:30.644 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-04 18:26:30.646 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:26:30.649 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-04 18:26:30.651 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:26:30.654 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-04 18:26:30.656 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:26:30.658 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-04 18:26:30.662 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:26:30.664 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.GetModels.ChannelGetModel, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-04 18:26:30.665 +03:00 [INF] Executed action TgCheckerApi.Controllers.ChannelController.GetChannels (TgCheckerApi) in 150.3066ms
2024-02-04 18:26:30.666 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.ChannelController.GetChannels (TgCheckerApi)'
2024-02-04 18:26:30.667 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Channel/Page/1?&sortOption=members&ascending=False&language= - - - 200 18441 application/json;+charset=utf-8 165.5010ms
2024-02-04 18:26:30.678 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Channel/Page/1?&sortOption=members&ascending=False&language= - -
2024-02-04 18:26:30.679 +03:00 [INF] CORS policy execution successful.
2024-02-04 18:26:30.682 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.ChannelController.GetChannels (TgCheckerApi)'
2024-02-04 18:26:30.683 +03:00 [INF] Route matched with {action = "GetChannels", controller = "Channel"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.GetModels.ChannelGetModel]]] GetChannels(Int32, System.String, System.String, System.String, System.String, System.String) on controller TgCheckerApi.Controllers.ChannelController (TgCheckerApi).
2024-02-04 18:26:30.689 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Channel" AS c
WHERE c."Hidden" <> TRUE OR c."Hidden" IS NULL
2024-02-04 18:26:30.692 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."Url", c."user"
FROM "Channel" AS c
WHERE c."Hidden" <> TRUE OR c."Hidden" IS NULL
ORDER BY c.members DESC
LIMIT @__p_1 OFFSET @__p_0
2024-02-04 18:26:30.695 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-04 18:26:30.699 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:26:30.702 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-04 18:26:30.705 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:26:30.709 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-04 18:26:30.711 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:26:30.715 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-04 18:26:30.717 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:26:30.719 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-04 18:26:30.722 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:26:30.724 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-04 18:26:30.727 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:26:30.730 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-04 18:26:30.733 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:26:30.735 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-04 18:26:30.737 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:26:30.739 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.GetModels.ChannelGetModel, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-04 18:26:30.741 +03:00 [INF] Executed action TgCheckerApi.Controllers.ChannelController.GetChannels (TgCheckerApi) in 56.564ms
2024-02-04 18:26:30.742 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.ChannelController.GetChannels (TgCheckerApi)'
2024-02-04 18:26:30.743 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Channel/Page/1?&sortOption=members&ascending=False&language= - - - 200 18441 application/json;+charset=utf-8 65.1491ms
2024-02-04 18:26:30.754 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Channel/Page/1?&sortOption=members&ascending=False&language= - -
2024-02-04 18:26:30.755 +03:00 [INF] CORS policy execution successful.
2024-02-04 18:26:30.756 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.ChannelController.GetChannels (TgCheckerApi)'
2024-02-04 18:26:30.757 +03:00 [INF] Route matched with {action = "GetChannels", controller = "Channel"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.GetModels.ChannelGetModel]]] GetChannels(Int32, System.String, System.String, System.String, System.String, System.String) on controller TgCheckerApi.Controllers.ChannelController (TgCheckerApi).
2024-02-04 18:26:30.760 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Channel" AS c
WHERE c."Hidden" <> TRUE OR c."Hidden" IS NULL
2024-02-04 18:26:30.764 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."Url", c."user"
FROM "Channel" AS c
WHERE c."Hidden" <> TRUE OR c."Hidden" IS NULL
ORDER BY c.members DESC
LIMIT @__p_1 OFFSET @__p_0
2024-02-04 18:26:30.767 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-04 18:26:30.770 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:26:30.772 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-04 18:26:30.774 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:26:30.776 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-04 18:26:30.778 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:26:30.781 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-04 18:26:30.783 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:26:30.785 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-04 18:26:30.789 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:26:30.791 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-04 18:26:30.793 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:26:30.795 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-04 18:26:30.797 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:26:30.799 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-04 18:26:30.801 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:26:30.802 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.GetModels.ChannelGetModel, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-04 18:26:30.804 +03:00 [INF] Executed action TgCheckerApi.Controllers.ChannelController.GetChannels (TgCheckerApi) in 45.169ms
2024-02-04 18:26:30.805 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.ChannelController.GetChannels (TgCheckerApi)'
2024-02-04 18:26:30.806 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Channel/Page/1?&sortOption=members&ascending=False&language= - - - 200 18441 application/json;+charset=utf-8 51.9507ms
2024-02-04 18:26:30.815 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Tags - -
2024-02-04 18:26:30.816 +03:00 [INF] CORS policy execution successful.
2024-02-04 18:26:30.817 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.TagsController.GetTags (TgCheckerApi)'
2024-02-04 18:26:30.819 +03:00 [INF] Route matched with {action = "GetTags", controller = "Tags"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.String]] GetTags() on controller TgCheckerApi.Controllers.TagsController (TgCheckerApi).
2024-02-04 18:26:30.824 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT t.text
FROM "Tag" AS t
2024-02-04 18:26:30.827 +03:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2024-02-04 18:26:30.828 +03:00 [INF] Executed action TgCheckerApi.Controllers.TagsController.GetTags (TgCheckerApi) in 7.0392ms
2024-02-04 18:26:30.829 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.TagsController.GetTags (TgCheckerApi)'
2024-02-04 18:26:30.829 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Tags - - - 200 - text/plain;+charset=utf-8 13.9196ms
2024-02-04 18:26:33.795 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Channel/Comments/80 - -
2024-02-04 18:26:33.796 +03:00 [INF] CORS policy execution successful.
2024-02-04 18:26:33.797 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.ChannelController.GetComments (TgCheckerApi)'
2024-02-04 18:26:33.799 +03:00 [INF] Route matched with {action = "GetComments", controller = "Channel"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[TgCheckerApi.Models.GetModels.CommentGetModel]]] GetComments(Int32) on controller TgCheckerApi.Controllers.ChannelController (TgCheckerApi).
2024-02-04 18:26:33.810 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__channelId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id, u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "Comment" AS c
INNER JOIN "User" AS u ON c.user_id = u.id
WHERE c.channel_id = @__channelId_0
2024-02-04 18:26:33.813 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.GetModels.CommentGetModel, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-04 18:26:33.814 +03:00 [INF] Executed action TgCheckerApi.Controllers.ChannelController.GetComments (TgCheckerApi) in 13.7497ms
2024-02-04 18:26:33.815 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.ChannelController.GetComments (TgCheckerApi)'
2024-02-04 18:26:33.815 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Channel/Comments/80 - - - 200 2 application/json;+charset=utf-8 19.9662ms
2024-02-04 18:26:34.169 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:7256/api/Auth - -
2024-02-04 18:26:34.170 +03:00 [INF] CORS policy execution successful.
2024-02-04 18:26:34.171 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:7256/api/Auth - - - 204 - - 1.2635ms
2024-02-04 18:26:34.171 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Auth - -
2024-02-04 18:26:34.172 +03:00 [INF] CORS policy execution successful.
2024-02-04 18:26:34.173 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 18:26:34.173 +03:00 [INF] Route matched with {action = "GetMe", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TgCheckerApi.Models.GetModels.UserProfileModel]] GetMe() on controller TgCheckerApi.Controllers.AuthController (TgCheckerApi).
2024-02-04 18:26:34.183 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.avatar, t.chat_id, t.last_update, t.notification_settings, t.telegram_id, t.unique_key, t.username, t1.id, t1.channel_id, t1.user_id, t1.id0, t1.avatar, t1.bumps, t1.description, t1.flag, t1."Hidden", t1.language, t1.last_bump, t1.members, t1.name, t1.notification_sent, t1.notifications, t1.promo_post, t1.promo_post_interval, t1.promo_post_last, t1.promo_post_sent, t1.promo_post_time, t1.telegram_id, t1."Url", t1."user", t1.id1, t1.channel, t1.tag, t1.id00, t1.text, t3.id, t3.channel_id, t3.content, t3.created_at, t3.parent_id, t3.rating, t3.user_id, t3.id0, t3.avatar, t3.bumps, t3.description, t3.flag, t3."Hidden", t3.language, t3.last_bump, t3.members, t3.name, t3.notification_sent, t3.notifications, t3.promo_post, t3.promo_post_interval, t3.promo_post_last, t3.promo_post_sent, t3.promo_post_time, t3.telegram_id, t3."Url", t3."user"
FROM (
    SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
    FROM "User" AS u
    WHERE u.unique_key = @__uniqueKeyClaim_0
    LIMIT 2
) AS t
LEFT JOIN (
    SELECT c.id, c.channel_id, c.user_id, c0.id AS id0, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."Url", c0."user", t0.id AS id1, t0.channel, t0.tag, t0.id0 AS id00, t0.text
    FROM "ChannelAccess" AS c
    LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
    LEFT JOIN (
        SELECT c1.id, c1.channel, c1.tag, t2.id AS id0, t2.text
        FROM "ChannelHasTag" AS c1
        LEFT JOIN "Tag" AS t2 ON c1.tag = t2.id
    ) AS t0 ON c0.id = t0.channel
) AS t1 ON t.id = t1.user_id
LEFT JOIN (
    SELECT c2.id, c2.channel_id, c2.content, c2.created_at, c2.parent_id, c2.rating, c2.user_id, c3.id AS id0, c3.avatar, c3.bumps, c3.description, c3.flag, c3."Hidden", c3.language, c3.last_bump, c3.members, c3.name, c3.notification_sent, c3.notifications, c3.promo_post, c3.promo_post_interval, c3.promo_post_last, c3.promo_post_sent, c3.promo_post_time, c3.telegram_id, c3."Url", c3."user"
    FROM "Comment" AS c2
    INNER JOIN "Channel" AS c3 ON c2.channel_id = c3.id
) AS t3 ON t.id = t3.user_id
ORDER BY t.id, t1.id, t1.id0, t1.id1, t1.id00, t3.id
2024-02-04 18:26:34.189 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:26:34.191 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:26:34.194 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:26:34.197 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 18:26:34.199 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 18:26:34.201 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 18:26:34.204 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 18:26:34.206 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 18:26:34.208 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:26:34.210 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:26:34.212 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:26:34.215 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 18:26:34.217 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 18:26:34.219 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 18:26:34.221 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 18:26:34.223 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 18:26:34.225 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:26:34.228 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:26:34.230 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:26:34.231 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 18:26:34.234 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 18:26:34.236 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 18:26:34.238 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 18:26:34.240 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 18:26:34.242 +03:00 [INF] Executing OkObjectResult, writing value of type 'TgCheckerApi.Models.GetModels.UserProfileModel'.
2024-02-04 18:26:34.243 +03:00 [INF] Executed action TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi) in 68.2326ms
2024-02-04 18:26:34.244 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 18:26:34.244 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Auth - - - 200 25324 application/json;+charset=utf-8 73.0304ms
2024-02-04 18:26:34.288 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:7256/api/Bot/getDailyViewsByChannel - -
2024-02-04 18:26:34.288 +03:00 [INF] CORS policy execution successful.
2024-02-04 18:26:34.289 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:7256/api/Bot/getDailyViewsByChannel - - - 204 - - 1.5648ms
2024-02-04 18:26:34.290 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/api/Bot/getDailyViewsByChannel application/json;+charset=utf-8 34
2024-02-04 18:26:34.290 +03:00 [INF] CORS policy execution successful.
2024-02-04 18:26:34.292 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.BotController.CallGetDailyViewsByChannel (TgCheckerApi)'
2024-02-04 18:26:34.295 +03:00 [INF] Route matched with {action = "CallGetDailyViewsByChannel", controller = "Bot"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CallGetDailyViewsByChannel(DailyViewsRequest) on controller TgCheckerApi.Controllers.BotController (TgCheckerApi).
2024-02-04 18:26:34.318 +03:00 [INF] Starting CallGetDailyViewsByChannel method for ChannelId: 80
2024-02-04 18:26:34.328 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."Url", c."user"
FROM "Channel" AS c
WHERE c.id = @__p_0
LIMIT 1
2024-02-04 18:26:34.479 +03:00 [INF] Executed DbCommand (125ms) [Parameters=[@__dailyViewsRequest_ChannelId_0='?' (DbType = Int32), @__startDate_1='?' (DbType = DateTime), @__endDate_2='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT v.id, v.date, v.last_message_id, v.sheet, v.updated, v.views
FROM "Channel" AS c
INNER JOIN "StatisticsSheet" AS s ON c.id = s.channel_id
INNER JOIN "ViewsRecord" AS v ON s.id = v.sheet
WHERE c.id = @__dailyViewsRequest_ChannelId_0 AND v.date >= @__startDate_1 AND v.date <= @__endDate_2
ORDER BY v.date
2024-02-04 18:26:34.488 +03:00 [INF] Starting IsUpdateRequiredForChannel method.
2024-02-04 18:26:34.489 +03:00 [INF] Parameters: ChannelId=80, NumberOfDays=31
2024-02-04 18:26:34.489 +03:00 [INF] Outdated threshold set to 1 minutes.
2024-02-04 18:26:34.491 +03:00 [INF] Checking records from 1/4/2024 12:00:00 AM to 2/4/2024 12:00:00 AM.
2024-02-04 18:26:34.495 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__dailyViewsRequest_ChannelId_0='?' (DbType = Int32), @__startDate_1='?' (DbType = DateTime), @__today_2='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT v.id, v.date, v.last_message_id, v.sheet, v.updated, v.views
FROM "Channel" AS c
INNER JOIN "StatisticsSheet" AS s ON c.id = s.channel_id
INNER JOIN "ViewsRecord" AS v ON s.id = v.sheet
WHERE c.id = @__dailyViewsRequest_ChannelId_0 AND v.date >= @__startDate_1 AND v.date <= @__today_2
2024-02-04 18:26:34.497 +03:00 [INF] 26 records found in date range.
2024-02-04 18:26:34.498 +03:00 [INF] Update required: True
2024-02-04 18:26:34.498 +03:00 [INF] Data is incomplete for ChannelId: 80. Awaiting new data from WebSocket.
2024-02-04 18:26:34.501 +03:00 [INF] Received request for getDailyViewsByChannel. Request hash: c6767b8ee142f671c867e1e027dd0a6208f626fc9642fe406290e52e2784b620
2024-02-04 18:26:50.621 +03:00 [INF] New task completed successfully. Hash: c6767b8ee142f671c867e1e027dd0a6208f626fc9642fe406290e52e2784b620
2024-02-04 18:26:50.639 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__channelId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.avatar, t.bumps, t.description, t.flag, t."Hidden", t.language, t.last_bump, t.members, t.name, t.notification_sent, t.notifications, t.promo_post, t.promo_post_interval, t.promo_post_last, t.promo_post_sent, t.promo_post_time, t.telegram_id, t."Url", t."user", s.id, s.channel_id
FROM (
    SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."Url", c."user"
    FROM "Channel" AS c
    WHERE c.id = @__channelId_0
    LIMIT 1
) AS t
LEFT JOIN "StatisticsSheet" AS s ON t.id = s.channel_id
ORDER BY t.id
2024-02-04 18:26:50.650 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT v.id, v.date, v.last_message_id, v.sheet, v.updated, v.views
FROM "ViewsRecord" AS v
WHERE v.sheet = @__p_0
2024-02-04 18:26:50.832 +03:00 [INF] Executed DbCommand (145ms) [Parameters=[@p2='?' (DbType = Int32), @p0='?' (DbType = DateTime), @p1='?' (DbType = Int32), @p5='?' (DbType = Int32), @p3='?' (DbType = DateTime), @p4='?' (DbType = Int32), @p8='?' (DbType = Int32), @p6='?' (DbType = DateTime), @p7='?' (DbType = Int32), @p11='?' (DbType = Int32), @p9='?' (DbType = DateTime), @p10='?' (DbType = Int32), @p13='?' (DbType = Int32), @p12='?' (DbType = DateTime), @p15='?' (DbType = Int32), @p14='?' (DbType = DateTime), @p18='?' (DbType = Int32), @p16='?' (DbType = DateTime), @p17='?' (DbType = Int32), @p21='?' (DbType = Int32), @p19='?' (DbType = DateTime), @p20='?' (DbType = Int32), @p23='?' (DbType = Int32), @p22='?' (DbType = DateTime), @p25='?' (DbType = Int32), @p24='?' (DbType = DateTime), @p28='?' (DbType = Int32), @p26='?' (DbType = DateTime), @p27='?' (DbType = Int32), @p31='?' (DbType = Int32), @p29='?' (DbType = DateTime), @p30='?' (DbType = Int32), @p34='?' (DbType = Int32), @p32='?' (DbType = DateTime), @p33='?' (DbType = Int32), @p37='?' (DbType = Int32), @p35='?' (DbType = DateTime), @p36='?' (DbType = Int32), @p40='?' (DbType = Int32), @p38='?' (DbType = DateTime), @p39='?' (DbType = Int32), @p43='?' (DbType = Int32), @p41='?' (DbType = DateTime), @p42='?' (DbType = Int32), @p46='?' (DbType = Int32), @p44='?' (DbType = DateTime), @p45='?' (DbType = Int32), @p49='?' (DbType = Int32), @p47='?' (DbType = DateTime), @p48='?' (DbType = Int32), @p52='?' (DbType = Int32), @p50='?' (DbType = DateTime), @p51='?' (DbType = Int32), @p55='?' (DbType = Int32), @p53='?' (DbType = DateTime), @p54='?' (DbType = Int32), @p58='?' (DbType = Int32), @p56='?' (DbType = DateTime), @p57='?' (DbType = Int32), @p60='?' (DbType = Int32), @p59='?' (DbType = DateTime), @p63='?' (DbType = Int32), @p61='?' (DbType = DateTime), @p62='?' (DbType = Int32), @p66='?' (DbType = Int32), @p64='?' (DbType = DateTime), @p65='?' (DbType = Int32), @p69='?' (DbType = Int32), @p67='?' (DbType = DateTime), @p68='?' (DbType = Int32), @p70='?' (DbType = DateTime), @p71='?' (DbType = Int64), @p72='?' (DbType = Int32), @p73='?' (DbType = DateTime), @p74='?' (DbType = Int32), @p75='?' (DbType = DateTime), @p76='?' (DbType = Int64), @p77='?' (DbType = Int32), @p78='?' (DbType = DateTime), @p79='?' (DbType = Int32), @p80='?' (DbType = DateTime), @p81='?' (DbType = Int64), @p82='?' (DbType = Int32), @p83='?' (DbType = DateTime), @p84='?' (DbType = Int32), @p85='?' (DbType = DateTime), @p86='?' (DbType = Int64), @p87='?' (DbType = Int32), @p88='?' (DbType = DateTime), @p89='?' (DbType = Int32), @p90='?' (DbType = DateTime), @p91='?' (DbType = Int64), @p92='?' (DbType = Int32), @p93='?' (DbType = DateTime), @p94='?' (DbType = Int32), @p95='?' (DbType = DateTime), @p96='?' (DbType = Int64), @p97='?' (DbType = Int32), @p98='?' (DbType = DateTime), @p99='?' (DbType = Int32), @p100='?' (DbType = DateTime), @p101='?' (DbType = Int64), @p102='?' (DbType = Int32), @p103='?' (DbType = DateTime), @p104='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
UPDATE "ViewsRecord" SET updated = @p0, views = @p1
WHERE id = @p2;
UPDATE "ViewsRecord" SET updated = @p3, views = @p4
WHERE id = @p5;
UPDATE "ViewsRecord" SET updated = @p6, views = @p7
WHERE id = @p8;
UPDATE "ViewsRecord" SET updated = @p9, views = @p10
WHERE id = @p11;
UPDATE "ViewsRecord" SET updated = @p12
WHERE id = @p13;
UPDATE "ViewsRecord" SET updated = @p14
WHERE id = @p15;
UPDATE "ViewsRecord" SET updated = @p16, views = @p17
WHERE id = @p18;
UPDATE "ViewsRecord" SET updated = @p19, views = @p20
WHERE id = @p21;
UPDATE "ViewsRecord" SET updated = @p22
WHERE id = @p23;
UPDATE "ViewsRecord" SET updated = @p24
WHERE id = @p25;
UPDATE "ViewsRecord" SET updated = @p26, views = @p27
WHERE id = @p28;
UPDATE "ViewsRecord" SET updated = @p29, views = @p30
WHERE id = @p31;
UPDATE "ViewsRecord" SET updated = @p32, views = @p33
WHERE id = @p34;
UPDATE "ViewsRecord" SET updated = @p35, views = @p36
WHERE id = @p37;
UPDATE "ViewsRecord" SET updated = @p38, views = @p39
WHERE id = @p40;
UPDATE "ViewsRecord" SET updated = @p41, views = @p42
WHERE id = @p43;
UPDATE "ViewsRecord" SET updated = @p44, views = @p45
WHERE id = @p46;
UPDATE "ViewsRecord" SET updated = @p47, views = @p48
WHERE id = @p49;
UPDATE "ViewsRecord" SET updated = @p50, views = @p51
WHERE id = @p52;
UPDATE "ViewsRecord" SET updated = @p53, views = @p54
WHERE id = @p55;
UPDATE "ViewsRecord" SET updated = @p56, views = @p57
WHERE id = @p58;
UPDATE "ViewsRecord" SET updated = @p59
WHERE id = @p60;
UPDATE "ViewsRecord" SET updated = @p61, views = @p62
WHERE id = @p63;
UPDATE "ViewsRecord" SET updated = @p64, views = @p65
WHERE id = @p66;
UPDATE "ViewsRecord" SET updated = @p67, views = @p68
WHERE id = @p69;
INSERT INTO "ViewsRecord" (date, last_message_id, sheet, updated, views)
VALUES (@p70, @p71, @p72, @p73, @p74)
RETURNING id;
INSERT INTO "ViewsRecord" (date, last_message_id, sheet, updated, views)
VALUES (@p75, @p76, @p77, @p78, @p79)
RETURNING id;
INSERT INTO "ViewsRecord" (date, last_message_id, sheet, updated, views)
VALUES (@p80, @p81, @p82, @p83, @p84)
RETURNING id;
INSERT INTO "ViewsRecord" (date, last_message_id, sheet, updated, views)
VALUES (@p85, @p86, @p87, @p88, @p89)
RETURNING id;
INSERT INTO "ViewsRecord" (date, last_message_id, sheet, updated, views)
VALUES (@p90, @p91, @p92, @p93, @p94)
RETURNING id;
INSERT INTO "ViewsRecord" (date, last_message_id, sheet, updated, views)
VALUES (@p95, @p96, @p97, @p98, @p99)
RETURNING id;
INSERT INTO "ViewsRecord" (date, last_message_id, sheet, updated, views)
VALUES (@p100, @p101, @p102, @p103, @p104)
RETURNING id;
2024-02-04 18:26:50.882 +03:00 [INF] Returning data for ChannelId: 80 with 32 view counts
2024-02-04 18:26:50.884 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.Int32, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-02-04 18:26:50.885 +03:00 [INF] Executed action TgCheckerApi.Controllers.BotController.CallGetDailyViewsByChannel (TgCheckerApi) in 16589.4927ms
2024-02-04 18:26:50.888 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.BotController.CallGetDailyViewsByChannel (TgCheckerApi)'
2024-02-04 18:26:50.889 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/api/Bot/getDailyViewsByChannel application/json;+charset=utf-8 34 - 200 129 application/json;+charset=utf-8 16599.3186ms
2024-02-04 18:27:08.521 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:7256/api/Bot/getDailyViewsByChannel - -
2024-02-04 18:27:08.522 +03:00 [INF] CORS policy execution successful.
2024-02-04 18:27:08.522 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:7256/api/Bot/getDailyViewsByChannel - - - 204 - - 1.8938ms
2024-02-04 18:27:08.526 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/api/Bot/getDailyViewsByChannel application/json;+charset=utf-8 34
2024-02-04 18:27:08.527 +03:00 [INF] CORS policy execution successful.
2024-02-04 18:27:08.530 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.BotController.CallGetDailyViewsByChannel (TgCheckerApi)'
2024-02-04 18:27:08.530 +03:00 [INF] Route matched with {action = "CallGetDailyViewsByChannel", controller = "Bot"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CallGetDailyViewsByChannel(DailyViewsRequest) on controller TgCheckerApi.Controllers.BotController (TgCheckerApi).
2024-02-04 18:27:08.532 +03:00 [INF] Starting CallGetDailyViewsByChannel method for ChannelId: 80
2024-02-04 18:27:08.535 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."Url", c."user"
FROM "Channel" AS c
WHERE c.id = @__p_0
LIMIT 1
2024-02-04 18:27:08.538 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__dailyViewsRequest_ChannelId_0='?' (DbType = Int32), @__startDate_1='?' (DbType = DateTime), @__endDate_2='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT v.id, v.date, v.last_message_id, v.sheet, v.updated, v.views
FROM "Channel" AS c
INNER JOIN "StatisticsSheet" AS s ON c.id = s.channel_id
INNER JOIN "ViewsRecord" AS v ON s.id = v.sheet
WHERE c.id = @__dailyViewsRequest_ChannelId_0 AND v.date >= @__startDate_1 AND v.date <= @__endDate_2
ORDER BY v.date
2024-02-04 18:27:08.541 +03:00 [INF] Starting IsUpdateRequiredForChannel method.
2024-02-04 18:27:08.541 +03:00 [INF] Parameters: ChannelId=80, NumberOfDays=31
2024-02-04 18:27:08.542 +03:00 [INF] Outdated threshold set to 1 minutes.
2024-02-04 18:27:08.542 +03:00 [INF] Checking records from 1/4/2024 12:00:00 AM to 2/4/2024 12:00:00 AM.
2024-02-04 18:27:08.548 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__dailyViewsRequest_ChannelId_0='?' (DbType = Int32), @__startDate_1='?' (DbType = DateTime), @__today_2='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT v.id, v.date, v.last_message_id, v.sheet, v.updated, v.views
FROM "Channel" AS c
INNER JOIN "StatisticsSheet" AS s ON c.id = s.channel_id
INNER JOIN "ViewsRecord" AS v ON s.id = v.sheet
WHERE c.id = @__dailyViewsRequest_ChannelId_0 AND v.date >= @__startDate_1 AND v.date <= @__today_2
2024-02-04 18:27:08.549 +03:00 [INF] 33 records found in date range.
2024-02-04 18:27:08.550 +03:00 [INF] Update required: True
2024-02-04 18:27:08.550 +03:00 [INF] Data is complete but outdated for ChannelId: 80. Initiating background update.
2024-02-04 18:27:08.553 +03:00 [INF] Received request for getDailyViewsByChannel. Request hash: c6767b8ee142f671c867e1e027dd0a6208f626fc9642fe406290e52e2784b620
2024-02-04 18:27:08.554 +03:00 [INF] Returning data for ChannelId: 80 with 32 view counts
2024-02-04 18:27:08.555 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.Int32, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-02-04 18:27:08.555 +03:00 [INF] Executed action TgCheckerApi.Controllers.BotController.CallGetDailyViewsByChannel (TgCheckerApi) in 24.2388ms
2024-02-04 18:27:08.557 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.BotController.CallGetDailyViewsByChannel (TgCheckerApi)'
2024-02-04 18:27:08.558 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/api/Bot/getDailyViewsByChannel application/json;+charset=utf-8 34 - 200 129 application/json;+charset=utf-8 31.3194ms
2024-02-04 18:27:10.494 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/api/Bot/getDailyViewsByChannel application/json;+charset=utf-8 33
2024-02-04 18:27:10.495 +03:00 [INF] CORS policy execution successful.
2024-02-04 18:27:10.497 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.BotController.CallGetDailyViewsByChannel (TgCheckerApi)'
2024-02-04 18:27:10.497 +03:00 [INF] Route matched with {action = "CallGetDailyViewsByChannel", controller = "Bot"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CallGetDailyViewsByChannel(DailyViewsRequest) on controller TgCheckerApi.Controllers.BotController (TgCheckerApi).
2024-02-04 18:27:10.500 +03:00 [INF] Starting CallGetDailyViewsByChannel method for ChannelId: 80
2024-02-04 18:27:10.503 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."Url", c."user"
FROM "Channel" AS c
WHERE c.id = @__p_0
LIMIT 1
2024-02-04 18:27:10.506 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__dailyViewsRequest_ChannelId_0='?' (DbType = Int32), @__startDate_1='?' (DbType = DateTime), @__endDate_2='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT v.id, v.date, v.last_message_id, v.sheet, v.updated, v.views
FROM "Channel" AS c
INNER JOIN "StatisticsSheet" AS s ON c.id = s.channel_id
INNER JOIN "ViewsRecord" AS v ON s.id = v.sheet
WHERE c.id = @__dailyViewsRequest_ChannelId_0 AND v.date >= @__startDate_1 AND v.date <= @__endDate_2
ORDER BY v.date
2024-02-04 18:27:10.509 +03:00 [INF] Starting IsUpdateRequiredForChannel method.
2024-02-04 18:27:10.509 +03:00 [INF] Parameters: ChannelId=80, NumberOfDays=7
2024-02-04 18:27:10.510 +03:00 [INF] Outdated threshold set to 1 minutes.
2024-02-04 18:27:10.510 +03:00 [INF] Checking records from 1/28/2024 12:00:00 AM to 2/4/2024 12:00:00 AM.
2024-02-04 18:27:10.512 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__dailyViewsRequest_ChannelId_0='?' (DbType = Int32), @__startDate_1='?' (DbType = DateTime), @__today_2='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT v.id, v.date, v.last_message_id, v.sheet, v.updated, v.views
FROM "Channel" AS c
INNER JOIN "StatisticsSheet" AS s ON c.id = s.channel_id
INNER JOIN "ViewsRecord" AS v ON s.id = v.sheet
WHERE c.id = @__dailyViewsRequest_ChannelId_0 AND v.date >= @__startDate_1 AND v.date <= @__today_2
2024-02-04 18:27:10.513 +03:00 [INF] 9 records found in date range.
2024-02-04 18:27:10.513 +03:00 [INF] Update required: True
2024-02-04 18:27:10.514 +03:00 [INF] Data is complete but outdated for ChannelId: 80. Initiating background update.
2024-02-04 18:27:10.514 +03:00 [INF] Received request for getDailyViewsByChannel. Request hash: 83de4aa28d23b54b12801a07ba1b39661d4b8b0f0194439cfe7247b4c94b5530
2024-02-04 18:27:10.515 +03:00 [INF] Returning data for ChannelId: 80 with 7 view counts
2024-02-04 18:27:10.516 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.Int32, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-02-04 18:27:10.517 +03:00 [INF] Executed action TgCheckerApi.Controllers.BotController.CallGetDailyViewsByChannel (TgCheckerApi) in 18.3274ms
2024-02-04 18:27:10.518 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.BotController.CallGetDailyViewsByChannel (TgCheckerApi)'
2024-02-04 18:27:10.519 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/api/Bot/getDailyViewsByChannel application/json;+charset=utf-8 33 - 200 29 application/json;+charset=utf-8 24.8348ms
2024-02-04 18:27:12.666 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:7256/api/Bot/getMonthlyViews - -
2024-02-04 18:27:12.667 +03:00 [INF] CORS policy execution successful.
2024-02-04 18:27:12.667 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:7256/api/Bot/getMonthlyViews - - - 204 - - 1.4918ms
2024-02-04 18:27:12.669 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/api/Bot/getMonthlyViews application/json;+charset=utf-8 28
2024-02-04 18:27:12.670 +03:00 [INF] CORS policy execution successful.
2024-02-04 18:27:12.670 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.BotController.CallGetMonthViews (TgCheckerApi)'
2024-02-04 18:27:12.674 +03:00 [INF] Route matched with {action = "CallGetMonthViews", controller = "Bot"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CallGetMonthViews(MonthViewsRequest) on controller TgCheckerApi.Controllers.BotController (TgCheckerApi).
2024-02-04 18:27:12.679 +03:00 [INF] Starting CallGetMonthViews method for ChannelId: 80
2024-02-04 18:27:12.682 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."Url", c."user"
FROM "Channel" AS c
WHERE c.id = @__p_0
LIMIT 1
2024-02-04 18:27:12.741 +03:00 [INF] Executed DbCommand (44ms) [Parameters=[@__monthViewsRequest_ChannelId_0='?' (DbType = Int32), @__startDate_1='?' (DbType = DateTime), @__endDate_2='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT m.id, m.date, m.last_message_id, m.sheet, m.updated, m.views
FROM "Channel" AS c
INNER JOIN "StatisticsSheet" AS s ON c.id = s.channel_id
INNER JOIN "MonthViewsRecord" AS m ON s.id = m.sheet
WHERE c.id = @__monthViewsRequest_ChannelId_0 AND m.date >= @__startDate_1 AND m.date <= @__endDate_2
ORDER BY m.date
2024-02-04 18:27:12.749 +03:00 [INF] Starting IsUpdateRequiredForMonth method.
2024-02-04 18:27:12.749 +03:00 [INF] Parameters: ChannelId=80, Months=12
2024-02-04 18:27:12.750 +03:00 [INF] Outdated threshold set to 1 minutes.
2024-02-04 18:27:12.771 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__monthViewsRequest_ChannelId_0='?' (DbType = Int32), @__year_1='?' (DbType = Int32), @__month_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT m.id, m.date, m.last_message_id, m.sheet, m.updated, m.views
FROM "Channel" AS c
INNER JOIN "StatisticsSheet" AS s ON c.id = s.channel_id
INNER JOIN "MonthViewsRecord" AS m ON s.id = m.sheet
WHERE c.id = @__monthViewsRequest_ChannelId_0 AND date_part('year', m.date)::int = @__year_1 AND date_part('month', m.date)::int = @__month_2
ORDER BY m.date DESC
LIMIT 1
2024-02-04 18:27:12.773 +03:00 [INF] Update required for the latest month: True
2024-02-04 18:27:12.774 +03:00 [INF] Data is incomplete for ChannelId: 80. Awaiting new data from WebSocket.
2024-02-04 18:27:12.777 +03:00 [INF] Received request for getMonthlyViews. Request hash: 7505f5acca934e15c8f52552a8b20c1502caa7aa5f51a18c6b189e503b643116
2024-02-04 18:27:21.980 +03:00 [INF] New task completed successfully. Hash: c6767b8ee142f671c867e1e027dd0a6208f626fc9642fe406290e52e2784b620
2024-02-04 18:27:21.983 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__channelId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.avatar, t.bumps, t.description, t.flag, t."Hidden", t.language, t.last_bump, t.members, t.name, t.notification_sent, t.notifications, t.promo_post, t.promo_post_interval, t.promo_post_last, t.promo_post_sent, t.promo_post_time, t.telegram_id, t."Url", t."user", s.id, s.channel_id
FROM (
    SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."Url", c."user"
    FROM "Channel" AS c
    WHERE c.id = @__channelId_0
    LIMIT 1
) AS t
LEFT JOIN "StatisticsSheet" AS s ON t.id = s.channel_id
ORDER BY t.id
2024-02-04 18:27:21.986 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT v.id, v.date, v.last_message_id, v.sheet, v.updated, v.views
FROM "ViewsRecord" AS v
WHERE v.sheet = @__p_0
2024-02-04 18:27:21.991 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime), @p3='?' (DbType = Int32), @p2='?' (DbType = DateTime), @p5='?' (DbType = Int32), @p4='?' (DbType = DateTime), @p7='?' (DbType = Int32), @p6='?' (DbType = DateTime), @p9='?' (DbType = Int32), @p8='?' (DbType = DateTime), @p11='?' (DbType = Int32), @p10='?' (DbType = DateTime), @p13='?' (DbType = Int32), @p12='?' (DbType = DateTime), @p15='?' (DbType = Int32), @p14='?' (DbType = DateTime), @p17='?' (DbType = Int32), @p16='?' (DbType = DateTime), @p19='?' (DbType = Int32), @p18='?' (DbType = DateTime), @p21='?' (DbType = Int32), @p20='?' (DbType = DateTime), @p23='?' (DbType = Int32), @p22='?' (DbType = DateTime), @p25='?' (DbType = Int32), @p24='?' (DbType = DateTime), @p27='?' (DbType = Int32), @p26='?' (DbType = DateTime), @p29='?' (DbType = Int32), @p28='?' (DbType = DateTime), @p31='?' (DbType = Int32), @p30='?' (DbType = DateTime), @p33='?' (DbType = Int32), @p32='?' (DbType = DateTime), @p35='?' (DbType = Int32), @p34='?' (DbType = DateTime), @p37='?' (DbType = Int32), @p36='?' (DbType = DateTime), @p39='?' (DbType = Int32), @p38='?' (DbType = DateTime), @p41='?' (DbType = Int32), @p40='?' (DbType = DateTime), @p43='?' (DbType = Int32), @p42='?' (DbType = DateTime), @p45='?' (DbType = Int32), @p44='?' (DbType = DateTime), @p47='?' (DbType = Int32), @p46='?' (DbType = DateTime), @p49='?' (DbType = Int32), @p48='?' (DbType = DateTime), @p51='?' (DbType = Int32), @p50='?' (DbType = DateTime), @p53='?' (DbType = Int32), @p52='?' (DbType = DateTime), @p55='?' (DbType = Int32), @p54='?' (DbType = DateTime), @p57='?' (DbType = Int32), @p56='?' (DbType = DateTime), @p59='?' (DbType = Int32), @p58='?' (DbType = DateTime), @p61='?' (DbType = Int32), @p60='?' (DbType = DateTime), @p63='?' (DbType = Int32), @p62='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "ViewsRecord" SET updated = @p0
WHERE id = @p1;
UPDATE "ViewsRecord" SET updated = @p2
WHERE id = @p3;
UPDATE "ViewsRecord" SET updated = @p4
WHERE id = @p5;
UPDATE "ViewsRecord" SET updated = @p6
WHERE id = @p7;
UPDATE "ViewsRecord" SET updated = @p8
WHERE id = @p9;
UPDATE "ViewsRecord" SET updated = @p10
WHERE id = @p11;
UPDATE "ViewsRecord" SET updated = @p12
WHERE id = @p13;
UPDATE "ViewsRecord" SET updated = @p14
WHERE id = @p15;
UPDATE "ViewsRecord" SET updated = @p16
WHERE id = @p17;
UPDATE "ViewsRecord" SET updated = @p18
WHERE id = @p19;
UPDATE "ViewsRecord" SET updated = @p20
WHERE id = @p21;
UPDATE "ViewsRecord" SET updated = @p22
WHERE id = @p23;
UPDATE "ViewsRecord" SET updated = @p24
WHERE id = @p25;
UPDATE "ViewsRecord" SET updated = @p26
WHERE id = @p27;
UPDATE "ViewsRecord" SET updated = @p28
WHERE id = @p29;
UPDATE "ViewsRecord" SET updated = @p30
WHERE id = @p31;
UPDATE "ViewsRecord" SET updated = @p32
WHERE id = @p33;
UPDATE "ViewsRecord" SET updated = @p34
WHERE id = @p35;
UPDATE "ViewsRecord" SET updated = @p36
WHERE id = @p37;
UPDATE "ViewsRecord" SET updated = @p38
WHERE id = @p39;
UPDATE "ViewsRecord" SET updated = @p40
WHERE id = @p41;
UPDATE "ViewsRecord" SET updated = @p42
WHERE id = @p43;
UPDATE "ViewsRecord" SET updated = @p44
WHERE id = @p45;
UPDATE "ViewsRecord" SET updated = @p46
WHERE id = @p47;
UPDATE "ViewsRecord" SET updated = @p48
WHERE id = @p49;
UPDATE "ViewsRecord" SET updated = @p50
WHERE id = @p51;
UPDATE "ViewsRecord" SET updated = @p52
WHERE id = @p53;
UPDATE "ViewsRecord" SET updated = @p54
WHERE id = @p55;
UPDATE "ViewsRecord" SET updated = @p56
WHERE id = @p57;
UPDATE "ViewsRecord" SET updated = @p58
WHERE id = @p59;
UPDATE "ViewsRecord" SET updated = @p60
WHERE id = @p61;
UPDATE "ViewsRecord" SET updated = @p62
WHERE id = @p63;
2024-02-04 18:27:21.998 +03:00 [INF] Successfully updated database with new records for ChannelId: 80
2024-02-04 18:27:30.606 +03:00 [INF] New task completed successfully. Hash: 83de4aa28d23b54b12801a07ba1b39661d4b8b0f0194439cfe7247b4c94b5530
2024-02-04 18:27:30.609 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__channelId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.avatar, t.bumps, t.description, t.flag, t."Hidden", t.language, t.last_bump, t.members, t.name, t.notification_sent, t.notifications, t.promo_post, t.promo_post_interval, t.promo_post_last, t.promo_post_sent, t.promo_post_time, t.telegram_id, t."Url", t."user", s.id, s.channel_id
FROM (
    SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."Url", c."user"
    FROM "Channel" AS c
    WHERE c.id = @__channelId_0
    LIMIT 1
) AS t
LEFT JOIN "StatisticsSheet" AS s ON t.id = s.channel_id
ORDER BY t.id
2024-02-04 18:27:30.613 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT v.id, v.date, v.last_message_id, v.sheet, v.updated, v.views
FROM "ViewsRecord" AS v
WHERE v.sheet = @__p_0
2024-02-04 18:27:30.617 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime), @p3='?' (DbType = Int32), @p2='?' (DbType = DateTime), @p5='?' (DbType = Int32), @p4='?' (DbType = DateTime), @p7='?' (DbType = Int32), @p6='?' (DbType = DateTime), @p9='?' (DbType = Int32), @p8='?' (DbType = DateTime), @p11='?' (DbType = Int32), @p10='?' (DbType = DateTime), @p13='?' (DbType = Int32), @p12='?' (DbType = DateTime), @p15='?' (DbType = Int32), @p14='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "ViewsRecord" SET updated = @p0
WHERE id = @p1;
UPDATE "ViewsRecord" SET updated = @p2
WHERE id = @p3;
UPDATE "ViewsRecord" SET updated = @p4
WHERE id = @p5;
UPDATE "ViewsRecord" SET updated = @p6
WHERE id = @p7;
UPDATE "ViewsRecord" SET updated = @p8
WHERE id = @p9;
UPDATE "ViewsRecord" SET updated = @p10
WHERE id = @p11;
UPDATE "ViewsRecord" SET updated = @p12
WHERE id = @p13;
UPDATE "ViewsRecord" SET updated = @p14
WHERE id = @p15;
2024-02-04 18:27:30.619 +03:00 [INF] Successfully updated database with new records for ChannelId: 80
2024-02-04 18:28:05.468 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Channel/80 - -
2024-02-04 18:28:05.469 +03:00 [INF] CORS policy execution successful.
2024-02-04 18:28:05.470 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.ChannelController.GetChannel (TgCheckerApi)'
2024-02-04 18:28:05.474 +03:00 [INF] Route matched with {action = "GetChannel", controller = "Channel"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TgCheckerApi.Models.GetModels.ChannelGetModel]] GetChannel(Int32) on controller TgCheckerApi.Controllers.ChannelController (TgCheckerApi).
2024-02-04 18:28:05.478 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."Url", c."user"
FROM "Channel" AS c
WHERE c.id = @__p_0
LIMIT 1
2024-02-04 18:28:05.483 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-04 18:28:05.489 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:28:05.493 +03:00 [INF] Executing ObjectResult, writing value of type 'TgCheckerApi.Models.GetModels.ChannelGetModel'.
2024-02-04 18:28:05.495 +03:00 [INF] Executed action TgCheckerApi.Controllers.ChannelController.GetChannel (TgCheckerApi) in 19.5055ms
2024-02-04 18:28:05.498 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.ChannelController.GetChannel (TgCheckerApi)'
2024-02-04 18:28:05.499 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Channel/80 - - - 200 15469 application/json;+charset=utf-8 31.5890ms
2024-02-04 18:28:05.875 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Channel/Comments/80 - -
2024-02-04 18:28:05.876 +03:00 [INF] CORS policy execution successful.
2024-02-04 18:28:05.878 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.ChannelController.GetComments (TgCheckerApi)'
2024-02-04 18:28:05.879 +03:00 [INF] Route matched with {action = "GetComments", controller = "Channel"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[TgCheckerApi.Models.GetModels.CommentGetModel]]] GetComments(Int32) on controller TgCheckerApi.Controllers.ChannelController (TgCheckerApi).
2024-02-04 18:28:05.883 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__channelId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id, u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "Comment" AS c
INNER JOIN "User" AS u ON c.user_id = u.id
WHERE c.channel_id = @__channelId_0
2024-02-04 18:28:05.887 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.GetModels.CommentGetModel, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-04 18:28:05.889 +03:00 [INF] Executed action TgCheckerApi.Controllers.ChannelController.GetComments (TgCheckerApi) in 7.6892ms
2024-02-04 18:28:05.892 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.ChannelController.GetComments (TgCheckerApi)'
2024-02-04 18:28:05.893 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Channel/Comments/80 - - - 200 2 application/json;+charset=utf-8 17.7056ms
2024-02-04 18:28:05.945 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:7256/api/Auth - -
2024-02-04 18:28:05.946 +03:00 [INF] CORS policy execution successful.
2024-02-04 18:28:05.947 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:7256/api/Auth - - - 204 - - 2.1814ms
2024-02-04 18:28:05.948 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Auth - -
2024-02-04 18:28:05.949 +03:00 [INF] CORS policy execution successful.
2024-02-04 18:28:05.950 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 18:28:05.951 +03:00 [INF] Route matched with {action = "GetMe", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TgCheckerApi.Models.GetModels.UserProfileModel]] GetMe() on controller TgCheckerApi.Controllers.AuthController (TgCheckerApi).
2024-02-04 18:28:05.958 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.avatar, t.chat_id, t.last_update, t.notification_settings, t.telegram_id, t.unique_key, t.username, t1.id, t1.channel_id, t1.user_id, t1.id0, t1.avatar, t1.bumps, t1.description, t1.flag, t1."Hidden", t1.language, t1.last_bump, t1.members, t1.name, t1.notification_sent, t1.notifications, t1.promo_post, t1.promo_post_interval, t1.promo_post_last, t1.promo_post_sent, t1.promo_post_time, t1.telegram_id, t1."Url", t1."user", t1.id1, t1.channel, t1.tag, t1.id00, t1.text, t3.id, t3.channel_id, t3.content, t3.created_at, t3.parent_id, t3.rating, t3.user_id, t3.id0, t3.avatar, t3.bumps, t3.description, t3.flag, t3."Hidden", t3.language, t3.last_bump, t3.members, t3.name, t3.notification_sent, t3.notifications, t3.promo_post, t3.promo_post_interval, t3.promo_post_last, t3.promo_post_sent, t3.promo_post_time, t3.telegram_id, t3."Url", t3."user"
FROM (
    SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
    FROM "User" AS u
    WHERE u.unique_key = @__uniqueKeyClaim_0
    LIMIT 2
) AS t
LEFT JOIN (
    SELECT c.id, c.channel_id, c.user_id, c0.id AS id0, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."Url", c0."user", t0.id AS id1, t0.channel, t0.tag, t0.id0 AS id00, t0.text
    FROM "ChannelAccess" AS c
    LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
    LEFT JOIN (
        SELECT c1.id, c1.channel, c1.tag, t2.id AS id0, t2.text
        FROM "ChannelHasTag" AS c1
        LEFT JOIN "Tag" AS t2 ON c1.tag = t2.id
    ) AS t0 ON c0.id = t0.channel
) AS t1 ON t.id = t1.user_id
LEFT JOIN (
    SELECT c2.id, c2.channel_id, c2.content, c2.created_at, c2.parent_id, c2.rating, c2.user_id, c3.id AS id0, c3.avatar, c3.bumps, c3.description, c3.flag, c3."Hidden", c3.language, c3.last_bump, c3.members, c3.name, c3.notification_sent, c3.notifications, c3.promo_post, c3.promo_post_interval, c3.promo_post_last, c3.promo_post_sent, c3.promo_post_time, c3.telegram_id, c3."Url", c3."user"
    FROM "Comment" AS c2
    INNER JOIN "Channel" AS c3 ON c2.channel_id = c3.id
) AS t3 ON t.id = t3.user_id
ORDER BY t.id, t1.id, t1.id0, t1.id1, t1.id00, t3.id
2024-02-04 18:28:05.967 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:28:05.972 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:28:05.976 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:28:05.980 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 18:28:05.983 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 18:28:05.984 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:7256/api/Notification/UserNotifications - -
2024-02-04 18:28:05.989 +03:00 [INF] CORS policy execution successful.
2024-02-04 18:28:05.989 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 18:28:05.989 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:7256/api/Notification/UserNotifications - - - 204 - - 5.0088ms
2024-02-04 18:28:05.993 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 18:28:05.993 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification/UserNotifications - -
2024-02-04 18:28:05.997 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 18:28:05.997 +03:00 [INF] CORS policy execution successful.
2024-02-04 18:28:06.000 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:28:06.005 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetUserNotifications (TgCheckerApi)'
2024-02-04 18:28:06.006 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:28:06.006 +03:00 [INF] Route matched with {action = "GetUserNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetUserNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-04 18:28:06.010 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:28:06.016 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "User" AS u
WHERE u.unique_key = @__uniqueKeyClaim_0
LIMIT 2
2024-02-04 18:28:06.018 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 18:28:06.024 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.user_id = @__user_Id_0
2024-02-04 18:28:06.028 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 18:28:06.030 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.BaseModels.Notification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-04 18:28:06.036 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 18:28:06.037 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetUserNotifications (TgCheckerApi) in 25.7393ms
2024-02-04 18:28:06.040 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 18:28:06.041 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetUserNotifications (TgCheckerApi)'
2024-02-04 18:28:06.045 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 18:28:06.045 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification/UserNotifications - - - 200 524 application/json;+charset=utf-8 51.7141ms
2024-02-04 18:28:06.051 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:28:06.056 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:28:06.059 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:28:06.063 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 18:28:06.067 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 18:28:06.071 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 18:28:06.075 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 18:28:06.081 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 18:28:06.084 +03:00 [INF] Executing OkObjectResult, writing value of type 'TgCheckerApi.Models.GetModels.UserProfileModel'.
2024-02-04 18:28:06.085 +03:00 [INF] Executed action TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi) in 131.8657ms
2024-02-04 18:28:06.086 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 18:28:06.086 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Auth - -
2024-02-04 18:28:06.088 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Auth - - - 200 25324 application/json;+charset=utf-8 139.3233ms
2024-02-04 18:28:06.089 +03:00 [INF] CORS policy execution successful.
2024-02-04 18:28:06.091 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 18:28:06.092 +03:00 [INF] Route matched with {action = "GetMe", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TgCheckerApi.Models.GetModels.UserProfileModel]] GetMe() on controller TgCheckerApi.Controllers.AuthController (TgCheckerApi).
2024-02-04 18:28:06.097 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.avatar, t.chat_id, t.last_update, t.notification_settings, t.telegram_id, t.unique_key, t.username, t1.id, t1.channel_id, t1.user_id, t1.id0, t1.avatar, t1.bumps, t1.description, t1.flag, t1."Hidden", t1.language, t1.last_bump, t1.members, t1.name, t1.notification_sent, t1.notifications, t1.promo_post, t1.promo_post_interval, t1.promo_post_last, t1.promo_post_sent, t1.promo_post_time, t1.telegram_id, t1."Url", t1."user", t1.id1, t1.channel, t1.tag, t1.id00, t1.text, t3.id, t3.channel_id, t3.content, t3.created_at, t3.parent_id, t3.rating, t3.user_id, t3.id0, t3.avatar, t3.bumps, t3.description, t3.flag, t3."Hidden", t3.language, t3.last_bump, t3.members, t3.name, t3.notification_sent, t3.notifications, t3.promo_post, t3.promo_post_interval, t3.promo_post_last, t3.promo_post_sent, t3.promo_post_time, t3.telegram_id, t3."Url", t3."user"
FROM (
    SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
    FROM "User" AS u
    WHERE u.unique_key = @__uniqueKeyClaim_0
    LIMIT 2
) AS t
LEFT JOIN (
    SELECT c.id, c.channel_id, c.user_id, c0.id AS id0, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."Url", c0."user", t0.id AS id1, t0.channel, t0.tag, t0.id0 AS id00, t0.text
    FROM "ChannelAccess" AS c
    LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
    LEFT JOIN (
        SELECT c1.id, c1.channel, c1.tag, t2.id AS id0, t2.text
        FROM "ChannelHasTag" AS c1
        LEFT JOIN "Tag" AS t2 ON c1.tag = t2.id
    ) AS t0 ON c0.id = t0.channel
) AS t1 ON t.id = t1.user_id
LEFT JOIN (
    SELECT c2.id, c2.channel_id, c2.content, c2.created_at, c2.parent_id, c2.rating, c2.user_id, c3.id AS id0, c3.avatar, c3.bumps, c3.description, c3.flag, c3."Hidden", c3.language, c3.last_bump, c3.members, c3.name, c3.notification_sent, c3.notifications, c3.promo_post, c3.promo_post_interval, c3.promo_post_last, c3.promo_post_sent, c3.promo_post_time, c3.telegram_id, c3."Url", c3."user"
    FROM "Comment" AS c2
    INNER JOIN "Channel" AS c3 ON c2.channel_id = c3.id
) AS t3 ON t.id = t3.user_id
ORDER BY t.id, t1.id, t1.id0, t1.id1, t1.id00, t3.id
2024-02-04 18:28:06.108 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:28:06.116 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:28:06.122 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:28:06.129 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 18:28:06.136 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 18:28:06.140 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:7256/api/Bot/getDailyViewsByChannel - -
2024-02-04 18:28:06.142 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 18:28:06.144 +03:00 [INF] CORS policy execution successful.
2024-02-04 18:28:06.150 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 18:28:06.151 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:7256/api/Bot/getDailyViewsByChannel - - - 204 - - 11.5829ms
2024-02-04 18:28:06.156 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 18:28:06.157 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/api/Bot/getDailyViewsByChannel application/json;+charset=utf-8 34
2024-02-04 18:28:06.162 +03:00 [INF] CORS policy execution successful.
2024-02-04 18:28:06.162 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:28:06.163 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.BotController.CallGetDailyViewsByChannel (TgCheckerApi)'
2024-02-04 18:28:06.166 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:28:06.166 +03:00 [INF] Route matched with {action = "CallGetDailyViewsByChannel", controller = "Bot"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CallGetDailyViewsByChannel(DailyViewsRequest) on controller TgCheckerApi.Controllers.BotController (TgCheckerApi).
2024-02-04 18:28:06.170 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:28:06.171 +03:00 [INF] Starting CallGetDailyViewsByChannel method for ChannelId: 80
2024-02-04 18:28:06.179 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 18:28:06.188 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."Url", c."user"
FROM "Channel" AS c
WHERE c.id = @__p_0
LIMIT 1
2024-02-04 18:28:06.191 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 18:28:06.196 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__dailyViewsRequest_ChannelId_0='?' (DbType = Int32), @__startDate_1='?' (DbType = DateTime), @__endDate_2='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT v.id, v.date, v.last_message_id, v.sheet, v.updated, v.views
FROM "Channel" AS c
INNER JOIN "StatisticsSheet" AS s ON c.id = s.channel_id
INNER JOIN "ViewsRecord" AS v ON s.id = v.sheet
WHERE c.id = @__dailyViewsRequest_ChannelId_0 AND v.date >= @__startDate_1 AND v.date <= @__endDate_2
ORDER BY v.date
2024-02-04 18:28:06.199 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 18:28:06.203 +03:00 [INF] Starting IsUpdateRequiredForChannel method.
2024-02-04 18:28:06.206 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 18:28:06.209 +03:00 [INF] Parameters: ChannelId=80, NumberOfDays=31
2024-02-04 18:28:06.213 +03:00 [INF] Outdated threshold set to 1 minutes.
2024-02-04 18:28:06.213 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 18:28:06.214 +03:00 [INF] Checking records from 1/4/2024 12:00:00 AM to 2/4/2024 12:00:00 AM.
2024-02-04 18:28:06.217 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:28:06.224 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__dailyViewsRequest_ChannelId_0='?' (DbType = Int32), @__startDate_1='?' (DbType = DateTime), @__today_2='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT v.id, v.date, v.last_message_id, v.sheet, v.updated, v.views
FROM "Channel" AS c
INNER JOIN "StatisticsSheet" AS s ON c.id = s.channel_id
INNER JOIN "ViewsRecord" AS v ON s.id = v.sheet
WHERE c.id = @__dailyViewsRequest_ChannelId_0 AND v.date >= @__startDate_1 AND v.date <= @__today_2
2024-02-04 18:28:06.227 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:28:06.230 +03:00 [INF] 33 records found in date range.
2024-02-04 18:28:06.233 +03:00 [INF] Update required: True
2024-02-04 18:28:06.233 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:28:06.234 +03:00 [INF] Data is complete but outdated for ChannelId: 80. Initiating background update.
2024-02-04 18:28:06.238 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 18:28:06.241 +03:00 [INF] Received request for getDailyViewsByChannel. Request hash: c6767b8ee142f671c867e1e027dd0a6208f626fc9642fe406290e52e2784b620
2024-02-04 18:28:06.245 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 18:28:06.246 +03:00 [INF] Returning data for ChannelId: 80 with 32 view counts
2024-02-04 18:28:06.250 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.Int32, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-02-04 18:28:06.250 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 18:28:06.251 +03:00 [INF] Executed action TgCheckerApi.Controllers.BotController.CallGetDailyViewsByChannel (TgCheckerApi) in 80.4368ms
2024-02-04 18:28:06.259 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.BotController.CallGetDailyViewsByChannel (TgCheckerApi)'
2024-02-04 18:28:06.258 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 18:28:06.260 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/api/Bot/getDailyViewsByChannel application/json;+charset=utf-8 34 - 200 129 application/json;+charset=utf-8 103.0888ms
2024-02-04 18:28:06.265 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 18:28:06.269 +03:00 [INF] Executing OkObjectResult, writing value of type 'TgCheckerApi.Models.GetModels.UserProfileModel'.
2024-02-04 18:28:06.272 +03:00 [INF] Executed action TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi) in 178.8733ms
2024-02-04 18:28:06.273 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 18:28:06.275 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Auth - - - 200 25324 application/json;+charset=utf-8 188.2694ms
2024-02-04 18:28:08.402 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:7256/api/Bot/getMonthlyViews - -
2024-02-04 18:28:08.403 +03:00 [INF] CORS policy execution successful.
2024-02-04 18:28:08.404 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:7256/api/Bot/getMonthlyViews - - - 204 - - 2.7248ms
2024-02-04 18:28:08.405 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/api/Bot/getMonthlyViews application/json;+charset=utf-8 28
2024-02-04 18:28:08.407 +03:00 [INF] CORS policy execution successful.
2024-02-04 18:28:08.408 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.BotController.CallGetMonthViews (TgCheckerApi)'
2024-02-04 18:28:08.409 +03:00 [INF] Route matched with {action = "CallGetMonthViews", controller = "Bot"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CallGetMonthViews(MonthViewsRequest) on controller TgCheckerApi.Controllers.BotController (TgCheckerApi).
2024-02-04 18:28:08.411 +03:00 [INF] Starting CallGetMonthViews method for ChannelId: 80
2024-02-04 18:28:08.415 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."Url", c."user"
FROM "Channel" AS c
WHERE c.id = @__p_0
LIMIT 1
2024-02-04 18:28:08.421 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__monthViewsRequest_ChannelId_0='?' (DbType = Int32), @__startDate_1='?' (DbType = DateTime), @__endDate_2='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT m.id, m.date, m.last_message_id, m.sheet, m.updated, m.views
FROM "Channel" AS c
INNER JOIN "StatisticsSheet" AS s ON c.id = s.channel_id
INNER JOIN "MonthViewsRecord" AS m ON s.id = m.sheet
WHERE c.id = @__monthViewsRequest_ChannelId_0 AND m.date >= @__startDate_1 AND m.date <= @__endDate_2
ORDER BY m.date
2024-02-04 18:28:08.425 +03:00 [INF] Starting IsUpdateRequiredForMonth method.
2024-02-04 18:28:08.426 +03:00 [INF] Parameters: ChannelId=80, Months=12
2024-02-04 18:28:08.427 +03:00 [INF] Outdated threshold set to 1 minutes.
2024-02-04 18:28:08.429 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__monthViewsRequest_ChannelId_0='?' (DbType = Int32), @__year_1='?' (DbType = Int32), @__month_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT m.id, m.date, m.last_message_id, m.sheet, m.updated, m.views
FROM "Channel" AS c
INNER JOIN "StatisticsSheet" AS s ON c.id = s.channel_id
INNER JOIN "MonthViewsRecord" AS m ON s.id = m.sheet
WHERE c.id = @__monthViewsRequest_ChannelId_0 AND date_part('year', m.date)::int = @__year_1 AND date_part('month', m.date)::int = @__month_2
ORDER BY m.date DESC
LIMIT 1
2024-02-04 18:28:08.435 +03:00 [INF] Update required for the latest month: True
2024-02-04 18:28:08.436 +03:00 [INF] Data is incomplete for ChannelId: 80. Awaiting new data from WebSocket.
2024-02-04 18:28:08.438 +03:00 [INF] Received request for getMonthlyViews. Request hash: 7505f5acca934e15c8f52552a8b20c1502caa7aa5f51a18c6b189e503b643116
2024-02-04 18:28:08.439 +03:00 [INF] Request found in cache. Hash: 7505f5acca934e15c8f52552a8b20c1502caa7aa5f51a18c6b189e503b643116
2024-02-04 18:28:36.254 +03:00 [WRN] New task timed out. Hash: c6767b8ee142f671c867e1e027dd0a6208f626fc9642fe406290e52e2784b620
2024-02-04 18:28:36.256 +03:00 [WRN] Invalid or no response from WebSocket service for ChannelId: 80
2024-02-04 18:28:42.186 +03:00 [INF] New task completed successfully. Hash: 7505f5acca934e15c8f52552a8b20c1502caa7aa5f51a18c6b189e503b643116
2024-02-04 18:28:42.195 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__channelId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.avatar, t.bumps, t.description, t.flag, t."Hidden", t.language, t.last_bump, t.members, t.name, t.notification_sent, t.notifications, t.promo_post, t.promo_post_interval, t.promo_post_last, t.promo_post_sent, t.promo_post_time, t.telegram_id, t."Url", t."user", s.id, s.channel_id
FROM (
    SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."Url", c."user"
    FROM "Channel" AS c
    WHERE c.id = @__channelId_0
    LIMIT 1
) AS t
LEFT JOIN "StatisticsSheet" AS s ON t.id = s.channel_id
ORDER BY t.id
2024-02-04 18:28:42.195 +03:00 [INF] Cached task completed successfully.
2024-02-04 18:28:42.204 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__channelId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.avatar, t.bumps, t.description, t.flag, t."Hidden", t.language, t.last_bump, t.members, t.name, t.notification_sent, t.notifications, t.promo_post, t.promo_post_interval, t.promo_post_last, t.promo_post_sent, t.promo_post_time, t.telegram_id, t."Url", t."user", s.id, s.channel_id
FROM (
    SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."Url", c."user"
    FROM "Channel" AS c
    WHERE c.id = @__channelId_0
    LIMIT 1
) AS t
LEFT JOIN "StatisticsSheet" AS s ON t.id = s.channel_id
ORDER BY t.id
2024-02-04 18:28:42.215 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT m.id, m.date, m.last_message_id, m.sheet, m.updated, m.views
FROM "MonthViewsRecord" AS m
WHERE m.sheet = @__p_0
2024-02-04 18:28:42.215 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT m.id, m.date, m.last_message_id, m.sheet, m.updated, m.views
FROM "MonthViewsRecord" AS m
WHERE m.sheet = @__p_0
2024-02-04 18:28:42.282 +03:00 [INF] Executed DbCommand (59ms) [Parameters=[@p2='?' (DbType = Int32), @p0='?' (DbType = DateTime), @p1='?' (DbType = Int32), @p5='?' (DbType = Int32), @p3='?' (DbType = DateTime), @p4='?' (DbType = Int32), @p8='?' (DbType = Int32), @p6='?' (DbType = DateTime), @p7='?' (DbType = Int32), @p11='?' (DbType = Int32), @p9='?' (DbType = DateTime), @p10='?' (DbType = Int32), @p14='?' (DbType = Int32), @p12='?' (DbType = DateTime), @p13='?' (DbType = Int32), @p15='?' (DbType = DateTime), @p16='?' (DbType = Int64), @p17='?' (DbType = Int32), @p18='?' (DbType = DateTime), @p19='?' (DbType = Int32), @p20='?' (DbType = DateTime), @p21='?' (DbType = Int64), @p22='?' (DbType = Int32), @p23='?' (DbType = DateTime), @p24='?' (DbType = Int32), @p25='?' (DbType = DateTime), @p26='?' (DbType = Int64), @p27='?' (DbType = Int32), @p28='?' (DbType = DateTime), @p29='?' (DbType = Int32), @p30='?' (DbType = DateTime), @p31='?' (DbType = Int64), @p32='?' (DbType = Int32), @p33='?' (DbType = DateTime), @p34='?' (DbType = Int32), @p35='?' (DbType = DateTime), @p36='?' (DbType = Int64), @p37='?' (DbType = Int32), @p38='?' (DbType = DateTime), @p39='?' (DbType = Int32), @p40='?' (DbType = DateTime), @p41='?' (DbType = Int64), @p42='?' (DbType = Int32), @p43='?' (DbType = DateTime), @p44='?' (DbType = Int32), @p45='?' (DbType = DateTime), @p46='?' (DbType = Int64), @p47='?' (DbType = Int32), @p48='?' (DbType = DateTime), @p49='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
UPDATE "MonthViewsRecord" SET updated = @p0, views = @p1
WHERE id = @p2;
UPDATE "MonthViewsRecord" SET updated = @p3, views = @p4
WHERE id = @p5;
UPDATE "MonthViewsRecord" SET updated = @p6, views = @p7
WHERE id = @p8;
UPDATE "MonthViewsRecord" SET updated = @p9, views = @p10
WHERE id = @p11;
UPDATE "MonthViewsRecord" SET updated = @p12, views = @p13
WHERE id = @p14;
INSERT INTO "MonthViewsRecord" (date, last_message_id, sheet, updated, views)
VALUES (@p15, @p16, @p17, @p18, @p19)
RETURNING id;
INSERT INTO "MonthViewsRecord" (date, last_message_id, sheet, updated, views)
VALUES (@p20, @p21, @p22, @p23, @p24)
RETURNING id;
INSERT INTO "MonthViewsRecord" (date, last_message_id, sheet, updated, views)
VALUES (@p25, @p26, @p27, @p28, @p29)
RETURNING id;
INSERT INTO "MonthViewsRecord" (date, last_message_id, sheet, updated, views)
VALUES (@p30, @p31, @p32, @p33, @p34)
RETURNING id;
INSERT INTO "MonthViewsRecord" (date, last_message_id, sheet, updated, views)
VALUES (@p35, @p36, @p37, @p38, @p39)
RETURNING id;
INSERT INTO "MonthViewsRecord" (date, last_message_id, sheet, updated, views)
VALUES (@p40, @p41, @p42, @p43, @p44)
RETURNING id;
INSERT INTO "MonthViewsRecord" (date, last_message_id, sheet, updated, views)
VALUES (@p45, @p46, @p47, @p48, @p49)
RETURNING id;
2024-02-04 18:28:42.299 +03:00 [INF] Executed DbCommand (72ms) [Parameters=[@p2='?' (DbType = Int32), @p0='?' (DbType = DateTime), @p1='?' (DbType = Int32), @p5='?' (DbType = Int32), @p3='?' (DbType = DateTime), @p4='?' (DbType = Int32), @p8='?' (DbType = Int32), @p6='?' (DbType = DateTime), @p7='?' (DbType = Int32), @p11='?' (DbType = Int32), @p9='?' (DbType = DateTime), @p10='?' (DbType = Int32), @p14='?' (DbType = Int32), @p12='?' (DbType = DateTime), @p13='?' (DbType = Int32), @p15='?' (DbType = DateTime), @p16='?' (DbType = Int64), @p17='?' (DbType = Int32), @p18='?' (DbType = DateTime), @p19='?' (DbType = Int32), @p20='?' (DbType = DateTime), @p21='?' (DbType = Int64), @p22='?' (DbType = Int32), @p23='?' (DbType = DateTime), @p24='?' (DbType = Int32), @p25='?' (DbType = DateTime), @p26='?' (DbType = Int64), @p27='?' (DbType = Int32), @p28='?' (DbType = DateTime), @p29='?' (DbType = Int32), @p30='?' (DbType = DateTime), @p31='?' (DbType = Int64), @p32='?' (DbType = Int32), @p33='?' (DbType = DateTime), @p34='?' (DbType = Int32), @p35='?' (DbType = DateTime), @p36='?' (DbType = Int64), @p37='?' (DbType = Int32), @p38='?' (DbType = DateTime), @p39='?' (DbType = Int32), @p40='?' (DbType = DateTime), @p41='?' (DbType = Int64), @p42='?' (DbType = Int32), @p43='?' (DbType = DateTime), @p44='?' (DbType = Int32), @p45='?' (DbType = DateTime), @p46='?' (DbType = Int64), @p47='?' (DbType = Int32), @p48='?' (DbType = DateTime), @p49='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
UPDATE "MonthViewsRecord" SET updated = @p0, views = @p1
WHERE id = @p2;
UPDATE "MonthViewsRecord" SET updated = @p3, views = @p4
WHERE id = @p5;
UPDATE "MonthViewsRecord" SET updated = @p6, views = @p7
WHERE id = @p8;
UPDATE "MonthViewsRecord" SET updated = @p9, views = @p10
WHERE id = @p11;
UPDATE "MonthViewsRecord" SET updated = @p12, views = @p13
WHERE id = @p14;
INSERT INTO "MonthViewsRecord" (date, last_message_id, sheet, updated, views)
VALUES (@p15, @p16, @p17, @p18, @p19)
RETURNING id;
INSERT INTO "MonthViewsRecord" (date, last_message_id, sheet, updated, views)
VALUES (@p20, @p21, @p22, @p23, @p24)
RETURNING id;
INSERT INTO "MonthViewsRecord" (date, last_message_id, sheet, updated, views)
VALUES (@p25, @p26, @p27, @p28, @p29)
RETURNING id;
INSERT INTO "MonthViewsRecord" (date, last_message_id, sheet, updated, views)
VALUES (@p30, @p31, @p32, @p33, @p34)
RETURNING id;
INSERT INTO "MonthViewsRecord" (date, last_message_id, sheet, updated, views)
VALUES (@p35, @p36, @p37, @p38, @p39)
RETURNING id;
INSERT INTO "MonthViewsRecord" (date, last_message_id, sheet, updated, views)
VALUES (@p40, @p41, @p42, @p43, @p44)
RETURNING id;
INSERT INTO "MonthViewsRecord" (date, last_message_id, sheet, updated, views)
VALUES (@p45, @p46, @p47, @p48, @p49)
RETURNING id;
2024-02-04 18:28:42.302 +03:00 [INF] Returning data for ChannelId: 80 with 12 month view counts
2024-02-04 18:28:42.316 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.Double, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-02-04 18:28:42.316 +03:00 [INF] Returning data for ChannelId: 80 with 12 month view counts
2024-02-04 18:28:42.320 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.Double, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-02-04 18:28:42.322 +03:00 [INF] Executed action TgCheckerApi.Controllers.BotController.CallGetMonthViews (TgCheckerApi) in 33910.9944ms
2024-02-04 18:28:42.322 +03:00 [INF] Executed action TgCheckerApi.Controllers.BotController.CallGetMonthViews (TgCheckerApi) in 89645.7907ms
2024-02-04 18:28:42.328 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.BotController.CallGetMonthViews (TgCheckerApi)'
2024-02-04 18:28:42.326 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.BotController.CallGetMonthViews (TgCheckerApi)'
2024-02-04 18:28:42.329 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/api/Bot/getMonthlyViews application/json;+charset=utf-8 28 - 200 95 application/json;+charset=utf-8 89660.2074ms
2024-02-04 18:28:42.330 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/api/Bot/getMonthlyViews application/json;+charset=utf-8 28 - 200 95 application/json;+charset=utf-8 33924.5804ms
2024-02-04 18:28:57.829 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:7256/api/Bot/getDailyViewsByChannel - -
2024-02-04 18:28:57.830 +03:00 [INF] CORS policy execution successful.
2024-02-04 18:28:57.832 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:7256/api/Bot/getDailyViewsByChannel - - - 204 - - 2.6291ms
2024-02-04 18:28:57.837 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/api/Bot/getDailyViewsByChannel application/json;+charset=utf-8 34
2024-02-04 18:28:57.839 +03:00 [INF] CORS policy execution successful.
2024-02-04 18:28:57.840 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.BotController.CallGetDailyViewsByChannel (TgCheckerApi)'
2024-02-04 18:28:57.841 +03:00 [INF] Route matched with {action = "CallGetDailyViewsByChannel", controller = "Bot"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CallGetDailyViewsByChannel(DailyViewsRequest) on controller TgCheckerApi.Controllers.BotController (TgCheckerApi).
2024-02-04 18:28:57.843 +03:00 [INF] Starting CallGetDailyViewsByChannel method for ChannelId: 80
2024-02-04 18:28:57.845 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."Url", c."user"
FROM "Channel" AS c
WHERE c.id = @__p_0
LIMIT 1
2024-02-04 18:28:57.851 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__dailyViewsRequest_ChannelId_0='?' (DbType = Int32), @__startDate_1='?' (DbType = DateTime), @__endDate_2='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT v.id, v.date, v.last_message_id, v.sheet, v.updated, v.views
FROM "Channel" AS c
INNER JOIN "StatisticsSheet" AS s ON c.id = s.channel_id
INNER JOIN "ViewsRecord" AS v ON s.id = v.sheet
WHERE c.id = @__dailyViewsRequest_ChannelId_0 AND v.date >= @__startDate_1 AND v.date <= @__endDate_2
ORDER BY v.date
2024-02-04 18:28:57.855 +03:00 [INF] Starting IsUpdateRequiredForChannel method.
2024-02-04 18:28:57.856 +03:00 [INF] Parameters: ChannelId=80, NumberOfDays=31
2024-02-04 18:28:57.857 +03:00 [INF] Outdated threshold set to 1 minutes.
2024-02-04 18:28:57.858 +03:00 [INF] Checking records from 1/4/2024 12:00:00 AM to 2/4/2024 12:00:00 AM.
2024-02-04 18:28:57.860 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__dailyViewsRequest_ChannelId_0='?' (DbType = Int32), @__startDate_1='?' (DbType = DateTime), @__today_2='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT v.id, v.date, v.last_message_id, v.sheet, v.updated, v.views
FROM "Channel" AS c
INNER JOIN "StatisticsSheet" AS s ON c.id = s.channel_id
INNER JOIN "ViewsRecord" AS v ON s.id = v.sheet
WHERE c.id = @__dailyViewsRequest_ChannelId_0 AND v.date >= @__startDate_1 AND v.date <= @__today_2
2024-02-04 18:28:57.863 +03:00 [INF] 33 records found in date range.
2024-02-04 18:28:57.864 +03:00 [INF] Update required: True
2024-02-04 18:28:57.866 +03:00 [INF] Data is complete but outdated for ChannelId: 80. Initiating background update.
2024-02-04 18:28:57.868 +03:00 [INF] Received request for getDailyViewsByChannel. Request hash: c6767b8ee142f671c867e1e027dd0a6208f626fc9642fe406290e52e2784b620
2024-02-04 18:28:57.869 +03:00 [INF] Returning data for ChannelId: 80 with 32 view counts
2024-02-04 18:28:57.870 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.Int32, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-02-04 18:28:57.872 +03:00 [INF] Executed action TgCheckerApi.Controllers.BotController.CallGetDailyViewsByChannel (TgCheckerApi) in 28.9575ms
2024-02-04 18:28:57.873 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.BotController.CallGetDailyViewsByChannel (TgCheckerApi)'
2024-02-04 18:28:57.875 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/api/Bot/getDailyViewsByChannel application/json;+charset=utf-8 34 - 200 129 application/json;+charset=utf-8 37.4543ms
2024-02-04 18:28:59.288 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:7256/api/Bot/SubscribersHistory - -
2024-02-04 18:28:59.290 +03:00 [INF] CORS policy execution successful.
2024-02-04 18:28:59.292 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:7256/api/Bot/SubscribersHistory - - - 204 - - 3.4366ms
2024-02-04 18:28:59.293 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/api/Bot/SubscribersHistory application/json;+charset=utf-8 45
2024-02-04 18:28:59.294 +03:00 [INF] CORS policy execution successful.
2024-02-04 18:28:59.295 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.BotController.GetSubscribersHistoryAsync (TgCheckerApi)'
2024-02-04 18:28:59.300 +03:00 [INF] Route matched with {action = "GetSubscribersHistory", controller = "Bot"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[System.Double]]] GetSubscribersHistoryAsync(SubHistoryRequest) on controller TgCheckerApi.Controllers.BotController (TgCheckerApi).
2024-02-04 18:28:59.386 +03:00 [INF] Executed DbCommand (52ms) [Parameters=[@__channelId_0='?' (DbType = Int32), @__startDate_1='?' (DbType = DateTime), @__endDate_2='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.date, s.sheet, s.subscribers
FROM "SubscribersRecord" AS s
INNER JOIN "StatisticsSheet" AS s0 ON s.sheet = s0.id
WHERE s0.channel_id = @__channelId_0 AND s.date >= @__startDate_1 AND s.date <= @__endDate_2
2024-02-04 18:28:59.403 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.Double, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-02-04 18:28:59.405 +03:00 [INF] Executed action TgCheckerApi.Controllers.BotController.GetSubscribersHistoryAsync (TgCheckerApi) in 102.4955ms
2024-02-04 18:28:59.407 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.BotController.GetSubscribersHistoryAsync (TgCheckerApi)'
2024-02-04 18:28:59.409 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/api/Bot/SubscribersHistory application/json;+charset=utf-8 45 - 200 208 application/json;+charset=utf-8 116.4429ms
2024-02-04 18:29:00.393 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/api/Bot/getDailyViewsByChannel application/json;+charset=utf-8 34
2024-02-04 18:29:00.396 +03:00 [INF] CORS policy execution successful.
2024-02-04 18:29:00.397 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.BotController.CallGetDailyViewsByChannel (TgCheckerApi)'
2024-02-04 18:29:00.398 +03:00 [INF] Route matched with {action = "CallGetDailyViewsByChannel", controller = "Bot"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CallGetDailyViewsByChannel(DailyViewsRequest) on controller TgCheckerApi.Controllers.BotController (TgCheckerApi).
2024-02-04 18:29:00.401 +03:00 [INF] Starting CallGetDailyViewsByChannel method for ChannelId: 80
2024-02-04 18:29:00.403 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."Url", c."user"
FROM "Channel" AS c
WHERE c.id = @__p_0
LIMIT 1
2024-02-04 18:29:00.411 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__dailyViewsRequest_ChannelId_0='?' (DbType = Int32), @__startDate_1='?' (DbType = DateTime), @__endDate_2='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT v.id, v.date, v.last_message_id, v.sheet, v.updated, v.views
FROM "Channel" AS c
INNER JOIN "StatisticsSheet" AS s ON c.id = s.channel_id
INNER JOIN "ViewsRecord" AS v ON s.id = v.sheet
WHERE c.id = @__dailyViewsRequest_ChannelId_0 AND v.date >= @__startDate_1 AND v.date <= @__endDate_2
ORDER BY v.date
2024-02-04 18:29:00.415 +03:00 [INF] Starting IsUpdateRequiredForChannel method.
2024-02-04 18:29:00.416 +03:00 [INF] Parameters: ChannelId=80, NumberOfDays=31
2024-02-04 18:29:00.417 +03:00 [INF] Outdated threshold set to 1 minutes.
2024-02-04 18:29:00.418 +03:00 [INF] Checking records from 1/4/2024 12:00:00 AM to 2/4/2024 12:00:00 AM.
2024-02-04 18:29:00.423 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__dailyViewsRequest_ChannelId_0='?' (DbType = Int32), @__startDate_1='?' (DbType = DateTime), @__today_2='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT v.id, v.date, v.last_message_id, v.sheet, v.updated, v.views
FROM "Channel" AS c
INNER JOIN "StatisticsSheet" AS s ON c.id = s.channel_id
INNER JOIN "ViewsRecord" AS v ON s.id = v.sheet
WHERE c.id = @__dailyViewsRequest_ChannelId_0 AND v.date >= @__startDate_1 AND v.date <= @__today_2
2024-02-04 18:29:00.425 +03:00 [INF] 33 records found in date range.
2024-02-04 18:29:00.426 +03:00 [INF] Update required: True
2024-02-04 18:29:00.427 +03:00 [INF] Data is complete but outdated for ChannelId: 80. Initiating background update.
2024-02-04 18:29:00.428 +03:00 [INF] Received request for getDailyViewsByChannel. Request hash: c6767b8ee142f671c867e1e027dd0a6208f626fc9642fe406290e52e2784b620
2024-02-04 18:29:00.429 +03:00 [INF] Request found in cache. Hash: c6767b8ee142f671c867e1e027dd0a6208f626fc9642fe406290e52e2784b620
2024-02-04 18:29:00.430 +03:00 [INF] Returning data for ChannelId: 80 with 32 view counts
2024-02-04 18:29:00.431 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.Int32, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-02-04 18:29:00.433 +03:00 [INF] Executed action TgCheckerApi.Controllers.BotController.CallGetDailyViewsByChannel (TgCheckerApi) in 32.7ms
2024-02-04 18:29:00.434 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.BotController.CallGetDailyViewsByChannel (TgCheckerApi)'
2024-02-04 18:29:00.436 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/api/Bot/getDailyViewsByChannel application/json;+charset=utf-8 34 - 200 129 application/json;+charset=utf-8 42.7865ms
2024-02-04 18:29:00.879 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/api/Bot/getDailyViewsByChannel application/json;+charset=utf-8 34
2024-02-04 18:29:00.880 +03:00 [INF] CORS policy execution successful.
2024-02-04 18:29:00.882 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.BotController.CallGetDailyViewsByChannel (TgCheckerApi)'
2024-02-04 18:29:00.883 +03:00 [INF] Route matched with {action = "CallGetDailyViewsByChannel", controller = "Bot"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CallGetDailyViewsByChannel(DailyViewsRequest) on controller TgCheckerApi.Controllers.BotController (TgCheckerApi).
2024-02-04 18:29:00.886 +03:00 [INF] Starting CallGetDailyViewsByChannel method for ChannelId: 80
2024-02-04 18:29:00.890 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."Url", c."user"
FROM "Channel" AS c
WHERE c.id = @__p_0
LIMIT 1
2024-02-04 18:29:00.897 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__dailyViewsRequest_ChannelId_0='?' (DbType = Int32), @__startDate_1='?' (DbType = DateTime), @__endDate_2='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT v.id, v.date, v.last_message_id, v.sheet, v.updated, v.views
FROM "Channel" AS c
INNER JOIN "StatisticsSheet" AS s ON c.id = s.channel_id
INNER JOIN "ViewsRecord" AS v ON s.id = v.sheet
WHERE c.id = @__dailyViewsRequest_ChannelId_0 AND v.date >= @__startDate_1 AND v.date <= @__endDate_2
ORDER BY v.date
2024-02-04 18:29:00.905 +03:00 [INF] Starting IsUpdateRequiredForChannel method.
2024-02-04 18:29:00.906 +03:00 [INF] Parameters: ChannelId=80, NumberOfDays=31
2024-02-04 18:29:00.907 +03:00 [INF] Outdated threshold set to 1 minutes.
2024-02-04 18:29:00.908 +03:00 [INF] Checking records from 1/4/2024 12:00:00 AM to 2/4/2024 12:00:00 AM.
2024-02-04 18:29:00.914 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__dailyViewsRequest_ChannelId_0='?' (DbType = Int32), @__startDate_1='?' (DbType = DateTime), @__today_2='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT v.id, v.date, v.last_message_id, v.sheet, v.updated, v.views
FROM "Channel" AS c
INNER JOIN "StatisticsSheet" AS s ON c.id = s.channel_id
INNER JOIN "ViewsRecord" AS v ON s.id = v.sheet
WHERE c.id = @__dailyViewsRequest_ChannelId_0 AND v.date >= @__startDate_1 AND v.date <= @__today_2
2024-02-04 18:29:00.920 +03:00 [INF] 33 records found in date range.
2024-02-04 18:29:00.924 +03:00 [INF] Update required: True
2024-02-04 18:29:00.926 +03:00 [INF] Data is complete but outdated for ChannelId: 80. Initiating background update.
2024-02-04 18:29:00.927 +03:00 [INF] Received request for getDailyViewsByChannel. Request hash: c6767b8ee142f671c867e1e027dd0a6208f626fc9642fe406290e52e2784b620
2024-02-04 18:29:00.929 +03:00 [INF] Request found in cache. Hash: c6767b8ee142f671c867e1e027dd0a6208f626fc9642fe406290e52e2784b620
2024-02-04 18:29:00.932 +03:00 [INF] Returning data for ChannelId: 80 with 32 view counts
2024-02-04 18:29:00.934 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.Int32, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-02-04 18:29:00.937 +03:00 [INF] Executed action TgCheckerApi.Controllers.BotController.CallGetDailyViewsByChannel (TgCheckerApi) in 51.4254ms
2024-02-04 18:29:00.939 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.BotController.CallGetDailyViewsByChannel (TgCheckerApi)'
2024-02-04 18:29:00.941 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/api/Bot/getDailyViewsByChannel application/json;+charset=utf-8 34 - 200 129 application/json;+charset=utf-8 62.2857ms
2024-02-04 18:29:01.912 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:7256/api/Bot/getMonthlyViews - -
2024-02-04 18:29:01.914 +03:00 [INF] CORS policy execution successful.
2024-02-04 18:29:01.915 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:7256/api/Bot/getMonthlyViews - - - 204 - - 2.3236ms
2024-02-04 18:29:01.915 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/api/Bot/getMonthlyViews application/json;+charset=utf-8 28
2024-02-04 18:29:01.917 +03:00 [INF] CORS policy execution successful.
2024-02-04 18:29:01.918 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.BotController.CallGetMonthViews (TgCheckerApi)'
2024-02-04 18:29:01.919 +03:00 [INF] Route matched with {action = "CallGetMonthViews", controller = "Bot"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CallGetMonthViews(MonthViewsRequest) on controller TgCheckerApi.Controllers.BotController (TgCheckerApi).
2024-02-04 18:29:01.922 +03:00 [INF] Starting CallGetMonthViews method for ChannelId: 80
2024-02-04 18:29:01.925 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."Url", c."user"
FROM "Channel" AS c
WHERE c.id = @__p_0
LIMIT 1
2024-02-04 18:29:01.933 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__monthViewsRequest_ChannelId_0='?' (DbType = Int32), @__startDate_1='?' (DbType = DateTime), @__endDate_2='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT m.id, m.date, m.last_message_id, m.sheet, m.updated, m.views
FROM "Channel" AS c
INNER JOIN "StatisticsSheet" AS s ON c.id = s.channel_id
INNER JOIN "MonthViewsRecord" AS m ON s.id = m.sheet
WHERE c.id = @__monthViewsRequest_ChannelId_0 AND m.date >= @__startDate_1 AND m.date <= @__endDate_2
ORDER BY m.date
2024-02-04 18:29:01.937 +03:00 [INF] Starting IsUpdateRequiredForMonth method.
2024-02-04 18:29:01.938 +03:00 [INF] Parameters: ChannelId=80, Months=12
2024-02-04 18:29:01.939 +03:00 [INF] Outdated threshold set to 1 minutes.
2024-02-04 18:29:01.942 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__monthViewsRequest_ChannelId_0='?' (DbType = Int32), @__year_1='?' (DbType = Int32), @__month_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT m.id, m.date, m.last_message_id, m.sheet, m.updated, m.views
FROM "Channel" AS c
INNER JOIN "StatisticsSheet" AS s ON c.id = s.channel_id
INNER JOIN "MonthViewsRecord" AS m ON s.id = m.sheet
WHERE c.id = @__monthViewsRequest_ChannelId_0 AND date_part('year', m.date)::int = @__year_1 AND date_part('month', m.date)::int = @__month_2
ORDER BY m.date DESC
LIMIT 1
2024-02-04 18:29:01.947 +03:00 [INF] Update required for the latest month: False
2024-02-04 18:29:01.948 +03:00 [INF] Data is complete and up-to-date for ChannelId: 80.
2024-02-04 18:29:01.949 +03:00 [INF] Returning data for ChannelId: 80 with 19 month view counts
2024-02-04 18:29:01.951 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.Double, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-02-04 18:29:01.952 +03:00 [INF] Executed action TgCheckerApi.Controllers.BotController.CallGetMonthViews (TgCheckerApi) in 30.2752ms
2024-02-04 18:29:01.953 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.BotController.CallGetMonthViews (TgCheckerApi)'
2024-02-04 18:29:01.955 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/api/Bot/getMonthlyViews application/json;+charset=utf-8 28 - 200 150 application/json;+charset=utf-8 39.2329ms
2024-02-04 18:29:13.332 +03:00 [INF] New task completed successfully. Hash: c6767b8ee142f671c867e1e027dd0a6208f626fc9642fe406290e52e2784b620
2024-02-04 18:29:13.335 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__channelId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.avatar, t.bumps, t.description, t.flag, t."Hidden", t.language, t.last_bump, t.members, t.name, t.notification_sent, t.notifications, t.promo_post, t.promo_post_interval, t.promo_post_last, t.promo_post_sent, t.promo_post_time, t.telegram_id, t."Url", t."user", s.id, s.channel_id
FROM (
    SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."Url", c."user"
    FROM "Channel" AS c
    WHERE c.id = @__channelId_0
    LIMIT 1
) AS t
LEFT JOIN "StatisticsSheet" AS s ON t.id = s.channel_id
ORDER BY t.id
2024-02-04 18:29:13.335 +03:00 [INF] Cached task completed successfully.
2024-02-04 18:29:13.344 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT v.id, v.date, v.last_message_id, v.sheet, v.updated, v.views
FROM "ViewsRecord" AS v
WHERE v.sheet = @__p_0
2024-02-04 18:29:13.345 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__channelId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.avatar, t.bumps, t.description, t.flag, t."Hidden", t.language, t.last_bump, t.members, t.name, t.notification_sent, t.notifications, t.promo_post, t.promo_post_interval, t.promo_post_last, t.promo_post_sent, t.promo_post_time, t.telegram_id, t."Url", t."user", s.id, s.channel_id
FROM (
    SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."Url", c."user"
    FROM "Channel" AS c
    WHERE c.id = @__channelId_0
    LIMIT 1
) AS t
LEFT JOIN "StatisticsSheet" AS s ON t.id = s.channel_id
ORDER BY t.id
2024-02-04 18:29:13.345 +03:00 [INF] Cached task completed successfully.
2024-02-04 18:29:13.355 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime), @p3='?' (DbType = Int32), @p2='?' (DbType = DateTime), @p5='?' (DbType = Int32), @p4='?' (DbType = DateTime), @p7='?' (DbType = Int32), @p6='?' (DbType = DateTime), @p9='?' (DbType = Int32), @p8='?' (DbType = DateTime), @p11='?' (DbType = Int32), @p10='?' (DbType = DateTime), @p13='?' (DbType = Int32), @p12='?' (DbType = DateTime), @p15='?' (DbType = Int32), @p14='?' (DbType = DateTime), @p17='?' (DbType = Int32), @p16='?' (DbType = DateTime), @p19='?' (DbType = Int32), @p18='?' (DbType = DateTime), @p21='?' (DbType = Int32), @p20='?' (DbType = DateTime), @p23='?' (DbType = Int32), @p22='?' (DbType = DateTime), @p25='?' (DbType = Int32), @p24='?' (DbType = DateTime), @p27='?' (DbType = Int32), @p26='?' (DbType = DateTime), @p29='?' (DbType = Int32), @p28='?' (DbType = DateTime), @p31='?' (DbType = Int32), @p30='?' (DbType = DateTime), @p33='?' (DbType = Int32), @p32='?' (DbType = DateTime), @p35='?' (DbType = Int32), @p34='?' (DbType = DateTime), @p37='?' (DbType = Int32), @p36='?' (DbType = DateTime), @p39='?' (DbType = Int32), @p38='?' (DbType = DateTime), @p41='?' (DbType = Int32), @p40='?' (DbType = DateTime), @p43='?' (DbType = Int32), @p42='?' (DbType = DateTime), @p45='?' (DbType = Int32), @p44='?' (DbType = DateTime), @p47='?' (DbType = Int32), @p46='?' (DbType = DateTime), @p49='?' (DbType = Int32), @p48='?' (DbType = DateTime), @p51='?' (DbType = Int32), @p50='?' (DbType = DateTime), @p53='?' (DbType = Int32), @p52='?' (DbType = DateTime), @p55='?' (DbType = Int32), @p54='?' (DbType = DateTime), @p57='?' (DbType = Int32), @p56='?' (DbType = DateTime), @p59='?' (DbType = Int32), @p58='?' (DbType = DateTime), @p61='?' (DbType = Int32), @p60='?' (DbType = DateTime), @p63='?' (DbType = Int32), @p62='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "ViewsRecord" SET updated = @p0
WHERE id = @p1;
UPDATE "ViewsRecord" SET updated = @p2
WHERE id = @p3;
UPDATE "ViewsRecord" SET updated = @p4
WHERE id = @p5;
UPDATE "ViewsRecord" SET updated = @p6
WHERE id = @p7;
UPDATE "ViewsRecord" SET updated = @p8
WHERE id = @p9;
UPDATE "ViewsRecord" SET updated = @p10
WHERE id = @p11;
UPDATE "ViewsRecord" SET updated = @p12
WHERE id = @p13;
UPDATE "ViewsRecord" SET updated = @p14
WHERE id = @p15;
UPDATE "ViewsRecord" SET updated = @p16
WHERE id = @p17;
UPDATE "ViewsRecord" SET updated = @p18
WHERE id = @p19;
UPDATE "ViewsRecord" SET updated = @p20
WHERE id = @p21;
UPDATE "ViewsRecord" SET updated = @p22
WHERE id = @p23;
UPDATE "ViewsRecord" SET updated = @p24
WHERE id = @p25;
UPDATE "ViewsRecord" SET updated = @p26
WHERE id = @p27;
UPDATE "ViewsRecord" SET updated = @p28
WHERE id = @p29;
UPDATE "ViewsRecord" SET updated = @p30
WHERE id = @p31;
UPDATE "ViewsRecord" SET updated = @p32
WHERE id = @p33;
UPDATE "ViewsRecord" SET updated = @p34
WHERE id = @p35;
UPDATE "ViewsRecord" SET updated = @p36
WHERE id = @p37;
UPDATE "ViewsRecord" SET updated = @p38
WHERE id = @p39;
UPDATE "ViewsRecord" SET updated = @p40
WHERE id = @p41;
UPDATE "ViewsRecord" SET updated = @p42
WHERE id = @p43;
UPDATE "ViewsRecord" SET updated = @p44
WHERE id = @p45;
UPDATE "ViewsRecord" SET updated = @p46
WHERE id = @p47;
UPDATE "ViewsRecord" SET updated = @p48
WHERE id = @p49;
UPDATE "ViewsRecord" SET updated = @p50
WHERE id = @p51;
UPDATE "ViewsRecord" SET updated = @p52
WHERE id = @p53;
UPDATE "ViewsRecord" SET updated = @p54
WHERE id = @p55;
UPDATE "ViewsRecord" SET updated = @p56
WHERE id = @p57;
UPDATE "ViewsRecord" SET updated = @p58
WHERE id = @p59;
UPDATE "ViewsRecord" SET updated = @p60
WHERE id = @p61;
UPDATE "ViewsRecord" SET updated = @p62
WHERE id = @p63;
2024-02-04 18:29:13.356 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT v.id, v.date, v.last_message_id, v.sheet, v.updated, v.views
FROM "ViewsRecord" AS v
WHERE v.sheet = @__p_0
2024-02-04 18:29:13.374 +03:00 [INF] Successfully updated database with new records for ChannelId: 80
2024-02-04 18:29:13.381 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__channelId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.avatar, t.bumps, t.description, t.flag, t."Hidden", t.language, t.last_bump, t.members, t.name, t.notification_sent, t.notifications, t.promo_post, t.promo_post_interval, t.promo_post_last, t.promo_post_sent, t.promo_post_time, t.telegram_id, t."Url", t."user", s.id, s.channel_id
FROM (
    SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."Url", c."user"
    FROM "Channel" AS c
    WHERE c.id = @__channelId_0
    LIMIT 1
) AS t
LEFT JOIN "StatisticsSheet" AS s ON t.id = s.channel_id
ORDER BY t.id
2024-02-04 18:29:13.383 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime), @p3='?' (DbType = Int32), @p2='?' (DbType = DateTime), @p5='?' (DbType = Int32), @p4='?' (DbType = DateTime), @p7='?' (DbType = Int32), @p6='?' (DbType = DateTime), @p9='?' (DbType = Int32), @p8='?' (DbType = DateTime), @p11='?' (DbType = Int32), @p10='?' (DbType = DateTime), @p13='?' (DbType = Int32), @p12='?' (DbType = DateTime), @p15='?' (DbType = Int32), @p14='?' (DbType = DateTime), @p17='?' (DbType = Int32), @p16='?' (DbType = DateTime), @p19='?' (DbType = Int32), @p18='?' (DbType = DateTime), @p21='?' (DbType = Int32), @p20='?' (DbType = DateTime), @p23='?' (DbType = Int32), @p22='?' (DbType = DateTime), @p25='?' (DbType = Int32), @p24='?' (DbType = DateTime), @p27='?' (DbType = Int32), @p26='?' (DbType = DateTime), @p29='?' (DbType = Int32), @p28='?' (DbType = DateTime), @p31='?' (DbType = Int32), @p30='?' (DbType = DateTime), @p33='?' (DbType = Int32), @p32='?' (DbType = DateTime), @p35='?' (DbType = Int32), @p34='?' (DbType = DateTime), @p37='?' (DbType = Int32), @p36='?' (DbType = DateTime), @p39='?' (DbType = Int32), @p38='?' (DbType = DateTime), @p41='?' (DbType = Int32), @p40='?' (DbType = DateTime), @p43='?' (DbType = Int32), @p42='?' (DbType = DateTime), @p45='?' (DbType = Int32), @p44='?' (DbType = DateTime), @p47='?' (DbType = Int32), @p46='?' (DbType = DateTime), @p49='?' (DbType = Int32), @p48='?' (DbType = DateTime), @p51='?' (DbType = Int32), @p50='?' (DbType = DateTime), @p53='?' (DbType = Int32), @p52='?' (DbType = DateTime), @p55='?' (DbType = Int32), @p54='?' (DbType = DateTime), @p57='?' (DbType = Int32), @p56='?' (DbType = DateTime), @p59='?' (DbType = Int32), @p58='?' (DbType = DateTime), @p61='?' (DbType = Int32), @p60='?' (DbType = DateTime), @p63='?' (DbType = Int32), @p62='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "ViewsRecord" SET updated = @p0
WHERE id = @p1;
UPDATE "ViewsRecord" SET updated = @p2
WHERE id = @p3;
UPDATE "ViewsRecord" SET updated = @p4
WHERE id = @p5;
UPDATE "ViewsRecord" SET updated = @p6
WHERE id = @p7;
UPDATE "ViewsRecord" SET updated = @p8
WHERE id = @p9;
UPDATE "ViewsRecord" SET updated = @p10
WHERE id = @p11;
UPDATE "ViewsRecord" SET updated = @p12
WHERE id = @p13;
UPDATE "ViewsRecord" SET updated = @p14
WHERE id = @p15;
UPDATE "ViewsRecord" SET updated = @p16
WHERE id = @p17;
UPDATE "ViewsRecord" SET updated = @p18
WHERE id = @p19;
UPDATE "ViewsRecord" SET updated = @p20
WHERE id = @p21;
UPDATE "ViewsRecord" SET updated = @p22
WHERE id = @p23;
UPDATE "ViewsRecord" SET updated = @p24
WHERE id = @p25;
UPDATE "ViewsRecord" SET updated = @p26
WHERE id = @p27;
UPDATE "ViewsRecord" SET updated = @p28
WHERE id = @p29;
UPDATE "ViewsRecord" SET updated = @p30
WHERE id = @p31;
UPDATE "ViewsRecord" SET updated = @p32
WHERE id = @p33;
UPDATE "ViewsRecord" SET updated = @p34
WHERE id = @p35;
UPDATE "ViewsRecord" SET updated = @p36
WHERE id = @p37;
UPDATE "ViewsRecord" SET updated = @p38
WHERE id = @p39;
UPDATE "ViewsRecord" SET updated = @p40
WHERE id = @p41;
UPDATE "ViewsRecord" SET updated = @p42
WHERE id = @p43;
UPDATE "ViewsRecord" SET updated = @p44
WHERE id = @p45;
UPDATE "ViewsRecord" SET updated = @p46
WHERE id = @p47;
UPDATE "ViewsRecord" SET updated = @p48
WHERE id = @p49;
UPDATE "ViewsRecord" SET updated = @p50
WHERE id = @p51;
UPDATE "ViewsRecord" SET updated = @p52
WHERE id = @p53;
UPDATE "ViewsRecord" SET updated = @p54
WHERE id = @p55;
UPDATE "ViewsRecord" SET updated = @p56
WHERE id = @p57;
UPDATE "ViewsRecord" SET updated = @p58
WHERE id = @p59;
UPDATE "ViewsRecord" SET updated = @p60
WHERE id = @p61;
UPDATE "ViewsRecord" SET updated = @p62
WHERE id = @p63;
2024-02-04 18:29:13.390 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT v.id, v.date, v.last_message_id, v.sheet, v.updated, v.views
FROM "ViewsRecord" AS v
WHERE v.sheet = @__p_0
2024-02-04 18:29:13.407 +03:00 [INF] Successfully updated database with new records for ChannelId: 80
2024-02-04 18:29:13.419 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime), @p3='?' (DbType = Int32), @p2='?' (DbType = DateTime), @p5='?' (DbType = Int32), @p4='?' (DbType = DateTime), @p7='?' (DbType = Int32), @p6='?' (DbType = DateTime), @p9='?' (DbType = Int32), @p8='?' (DbType = DateTime), @p11='?' (DbType = Int32), @p10='?' (DbType = DateTime), @p13='?' (DbType = Int32), @p12='?' (DbType = DateTime), @p15='?' (DbType = Int32), @p14='?' (DbType = DateTime), @p17='?' (DbType = Int32), @p16='?' (DbType = DateTime), @p19='?' (DbType = Int32), @p18='?' (DbType = DateTime), @p21='?' (DbType = Int32), @p20='?' (DbType = DateTime), @p23='?' (DbType = Int32), @p22='?' (DbType = DateTime), @p25='?' (DbType = Int32), @p24='?' (DbType = DateTime), @p27='?' (DbType = Int32), @p26='?' (DbType = DateTime), @p29='?' (DbType = Int32), @p28='?' (DbType = DateTime), @p31='?' (DbType = Int32), @p30='?' (DbType = DateTime), @p33='?' (DbType = Int32), @p32='?' (DbType = DateTime), @p35='?' (DbType = Int32), @p34='?' (DbType = DateTime), @p37='?' (DbType = Int32), @p36='?' (DbType = DateTime), @p39='?' (DbType = Int32), @p38='?' (DbType = DateTime), @p41='?' (DbType = Int32), @p40='?' (DbType = DateTime), @p43='?' (DbType = Int32), @p42='?' (DbType = DateTime), @p45='?' (DbType = Int32), @p44='?' (DbType = DateTime), @p47='?' (DbType = Int32), @p46='?' (DbType = DateTime), @p49='?' (DbType = Int32), @p48='?' (DbType = DateTime), @p51='?' (DbType = Int32), @p50='?' (DbType = DateTime), @p53='?' (DbType = Int32), @p52='?' (DbType = DateTime), @p55='?' (DbType = Int32), @p54='?' (DbType = DateTime), @p57='?' (DbType = Int32), @p56='?' (DbType = DateTime), @p59='?' (DbType = Int32), @p58='?' (DbType = DateTime), @p61='?' (DbType = Int32), @p60='?' (DbType = DateTime), @p63='?' (DbType = Int32), @p62='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "ViewsRecord" SET updated = @p0
WHERE id = @p1;
UPDATE "ViewsRecord" SET updated = @p2
WHERE id = @p3;
UPDATE "ViewsRecord" SET updated = @p4
WHERE id = @p5;
UPDATE "ViewsRecord" SET updated = @p6
WHERE id = @p7;
UPDATE "ViewsRecord" SET updated = @p8
WHERE id = @p9;
UPDATE "ViewsRecord" SET updated = @p10
WHERE id = @p11;
UPDATE "ViewsRecord" SET updated = @p12
WHERE id = @p13;
UPDATE "ViewsRecord" SET updated = @p14
WHERE id = @p15;
UPDATE "ViewsRecord" SET updated = @p16
WHERE id = @p17;
UPDATE "ViewsRecord" SET updated = @p18
WHERE id = @p19;
UPDATE "ViewsRecord" SET updated = @p20
WHERE id = @p21;
UPDATE "ViewsRecord" SET updated = @p22
WHERE id = @p23;
UPDATE "ViewsRecord" SET updated = @p24
WHERE id = @p25;
UPDATE "ViewsRecord" SET updated = @p26
WHERE id = @p27;
UPDATE "ViewsRecord" SET updated = @p28
WHERE id = @p29;
UPDATE "ViewsRecord" SET updated = @p30
WHERE id = @p31;
UPDATE "ViewsRecord" SET updated = @p32
WHERE id = @p33;
UPDATE "ViewsRecord" SET updated = @p34
WHERE id = @p35;
UPDATE "ViewsRecord" SET updated = @p36
WHERE id = @p37;
UPDATE "ViewsRecord" SET updated = @p38
WHERE id = @p39;
UPDATE "ViewsRecord" SET updated = @p40
WHERE id = @p41;
UPDATE "ViewsRecord" SET updated = @p42
WHERE id = @p43;
UPDATE "ViewsRecord" SET updated = @p44
WHERE id = @p45;
UPDATE "ViewsRecord" SET updated = @p46
WHERE id = @p47;
UPDATE "ViewsRecord" SET updated = @p48
WHERE id = @p49;
UPDATE "ViewsRecord" SET updated = @p50
WHERE id = @p51;
UPDATE "ViewsRecord" SET updated = @p52
WHERE id = @p53;
UPDATE "ViewsRecord" SET updated = @p54
WHERE id = @p55;
UPDATE "ViewsRecord" SET updated = @p56
WHERE id = @p57;
UPDATE "ViewsRecord" SET updated = @p58
WHERE id = @p59;
UPDATE "ViewsRecord" SET updated = @p60
WHERE id = @p61;
UPDATE "ViewsRecord" SET updated = @p62
WHERE id = @p63;
2024-02-04 18:29:13.435 +03:00 [INF] Successfully updated database with new records for ChannelId: 80
2024-02-04 18:29:24.263 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:7256/api/Bot/getMonthlyViews - -
2024-02-04 18:29:24.265 +03:00 [INF] CORS policy execution successful.
2024-02-04 18:29:24.265 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:7256/api/Bot/getMonthlyViews - - - 204 - - 1.8034ms
2024-02-04 18:29:24.266 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/api/Bot/getMonthlyViews application/json;+charset=utf-8 28
2024-02-04 18:29:24.266 +03:00 [INF] CORS policy execution successful.
2024-02-04 18:29:24.267 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.BotController.CallGetMonthViews (TgCheckerApi)'
2024-02-04 18:29:24.268 +03:00 [INF] Route matched with {action = "CallGetMonthViews", controller = "Bot"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CallGetMonthViews(MonthViewsRequest) on controller TgCheckerApi.Controllers.BotController (TgCheckerApi).
2024-02-04 18:29:24.269 +03:00 [INF] Starting CallGetMonthViews method for ChannelId: 80
2024-02-04 18:29:24.271 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."Url", c."user"
FROM "Channel" AS c
WHERE c.id = @__p_0
LIMIT 1
2024-02-04 18:29:24.275 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__monthViewsRequest_ChannelId_0='?' (DbType = Int32), @__startDate_1='?' (DbType = DateTime), @__endDate_2='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT m.id, m.date, m.last_message_id, m.sheet, m.updated, m.views
FROM "Channel" AS c
INNER JOIN "StatisticsSheet" AS s ON c.id = s.channel_id
INNER JOIN "MonthViewsRecord" AS m ON s.id = m.sheet
WHERE c.id = @__monthViewsRequest_ChannelId_0 AND m.date >= @__startDate_1 AND m.date <= @__endDate_2
ORDER BY m.date
2024-02-04 18:29:24.278 +03:00 [INF] Starting IsUpdateRequiredForMonth method.
2024-02-04 18:29:24.278 +03:00 [INF] Parameters: ChannelId=80, Months=12
2024-02-04 18:29:24.279 +03:00 [INF] Outdated threshold set to 1 minutes.
2024-02-04 18:29:24.284 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__monthViewsRequest_ChannelId_0='?' (DbType = Int32), @__year_1='?' (DbType = Int32), @__month_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT m.id, m.date, m.last_message_id, m.sheet, m.updated, m.views
FROM "Channel" AS c
INNER JOIN "StatisticsSheet" AS s ON c.id = s.channel_id
INNER JOIN "MonthViewsRecord" AS m ON s.id = m.sheet
WHERE c.id = @__monthViewsRequest_ChannelId_0 AND date_part('year', m.date)::int = @__year_1 AND date_part('month', m.date)::int = @__month_2
ORDER BY m.date DESC
LIMIT 1
2024-02-04 18:29:24.287 +03:00 [INF] Update required for the latest month: False
2024-02-04 18:29:24.288 +03:00 [INF] Data is complete and up-to-date for ChannelId: 80.
2024-02-04 18:29:24.289 +03:00 [INF] Returning data for ChannelId: 80 with 19 month view counts
2024-02-04 18:29:24.290 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.Double, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-02-04 18:29:24.291 +03:00 [INF] Executed action TgCheckerApi.Controllers.BotController.CallGetMonthViews (TgCheckerApi) in 21.9308ms
2024-02-04 18:29:24.292 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.BotController.CallGetMonthViews (TgCheckerApi)'
2024-02-04 18:29:24.292 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/api/Bot/getMonthlyViews application/json;+charset=utf-8 28 - 200 150 application/json;+charset=utf-8 26.2383ms
2024-02-04 18:29:25.253 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:7256/api/Bot/getDailyViewsByChannel - -
2024-02-04 18:29:25.254 +03:00 [INF] CORS policy execution successful.
2024-02-04 18:29:25.255 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:7256/api/Bot/getDailyViewsByChannel - - - 204 - - 1.9607ms
2024-02-04 18:29:25.256 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/api/Bot/getDailyViewsByChannel application/json;+charset=utf-8 34
2024-02-04 18:29:25.257 +03:00 [INF] CORS policy execution successful.
2024-02-04 18:29:25.257 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.BotController.CallGetDailyViewsByChannel (TgCheckerApi)'
2024-02-04 18:29:25.258 +03:00 [INF] Route matched with {action = "CallGetDailyViewsByChannel", controller = "Bot"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CallGetDailyViewsByChannel(DailyViewsRequest) on controller TgCheckerApi.Controllers.BotController (TgCheckerApi).
2024-02-04 18:29:25.260 +03:00 [INF] Starting CallGetDailyViewsByChannel method for ChannelId: 80
2024-02-04 18:29:25.263 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."Url", c."user"
FROM "Channel" AS c
WHERE c.id = @__p_0
LIMIT 1
2024-02-04 18:29:25.269 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__dailyViewsRequest_ChannelId_0='?' (DbType = Int32), @__startDate_1='?' (DbType = DateTime), @__endDate_2='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT v.id, v.date, v.last_message_id, v.sheet, v.updated, v.views
FROM "Channel" AS c
INNER JOIN "StatisticsSheet" AS s ON c.id = s.channel_id
INNER JOIN "ViewsRecord" AS v ON s.id = v.sheet
WHERE c.id = @__dailyViewsRequest_ChannelId_0 AND v.date >= @__startDate_1 AND v.date <= @__endDate_2
ORDER BY v.date
2024-02-04 18:29:25.274 +03:00 [INF] Starting IsUpdateRequiredForChannel method.
2024-02-04 18:29:25.274 +03:00 [INF] Parameters: ChannelId=80, NumberOfDays=31
2024-02-04 18:29:25.275 +03:00 [INF] Outdated threshold set to 1 minutes.
2024-02-04 18:29:25.275 +03:00 [INF] Checking records from 1/4/2024 12:00:00 AM to 2/4/2024 12:00:00 AM.
2024-02-04 18:29:25.277 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__dailyViewsRequest_ChannelId_0='?' (DbType = Int32), @__startDate_1='?' (DbType = DateTime), @__today_2='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT v.id, v.date, v.last_message_id, v.sheet, v.updated, v.views
FROM "Channel" AS c
INNER JOIN "StatisticsSheet" AS s ON c.id = s.channel_id
INNER JOIN "ViewsRecord" AS v ON s.id = v.sheet
WHERE c.id = @__dailyViewsRequest_ChannelId_0 AND v.date >= @__startDate_1 AND v.date <= @__today_2
2024-02-04 18:29:25.279 +03:00 [INF] 33 records found in date range.
2024-02-04 18:29:25.280 +03:00 [INF] Update required: True
2024-02-04 18:29:25.281 +03:00 [INF] Data is complete but outdated for ChannelId: 80. Initiating background update.
2024-02-04 18:29:25.281 +03:00 [INF] Received request for getDailyViewsByChannel. Request hash: c6767b8ee142f671c867e1e027dd0a6208f626fc9642fe406290e52e2784b620
2024-02-04 18:29:25.282 +03:00 [INF] Returning data for ChannelId: 80 with 32 view counts
2024-02-04 18:29:25.283 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.Int32, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-02-04 18:29:25.286 +03:00 [INF] Executed action TgCheckerApi.Controllers.BotController.CallGetDailyViewsByChannel (TgCheckerApi) in 26.1072ms
2024-02-04 18:29:25.287 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.BotController.CallGetDailyViewsByChannel (TgCheckerApi)'
2024-02-04 18:29:25.288 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/api/Bot/getDailyViewsByChannel application/json;+charset=utf-8 34 - 200 129 application/json;+charset=utf-8 31.8924ms
2024-02-04 18:29:56.423 +03:00 [INF] User profile is available. Using 'C:\Users\timar\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-04 18:29:56.576 +03:00 [INF] Default Quartz.NET properties loaded from embedded resource file
2024-02-04 18:29:56.615 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-02-04 18:29:56.618 +03:00 [INF] Quartz Scheduler created
2024-02-04 18:29:56.619 +03:00 [INF] RAMJobStore initialized.
2024-02-04 18:29:56.620 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-02-04 18:29:56.621 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-02-04 18:29:56.621 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-02-04 18:29:56.622 +03:00 [INF] JobFactory set to: TgCheckerApi.Job.QuartzJobFactory
2024-02-04 18:29:56.665 +03:00 [INF] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2024-02-04 18:29:56.742 +03:00 [INF] Now listening on: http://localhost:7256
2024-02-04 18:29:56.743 +03:00 [INF] Now listening on: http://localhost:5244
2024-02-04 18:29:56.750 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-04 18:29:56.751 +03:00 [INF] Hosting environment: Development
2024-02-04 18:29:56.752 +03:00 [INF] Content root path: C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\
2024-02-04 18:29:56.932 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/index.html - -
2024-02-04 18:29:57.189 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/index.html - - - 200 - text/html;charset=utf-8 259.5201ms
2024-02-04 18:29:57.196 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - -
2024-02-04 18:29:57.199 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - - - 200 12356 application/javascript;+charset=utf-8 2.8357ms
2024-02-04 18:29:57.222 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_vs/browserLink - -
2024-02-04 18:29:57.234 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 11.9897ms
2024-02-04 18:29:57.460 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - -
2024-02-04 18:29:57.578 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 118.3965ms
2024-02-04 18:29:59.053 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 18:29:59.057 +03:00 [WRN] Failed to determine the https port for redirect.
2024-02-04 18:29:59.120 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 18:29:59.133 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 18:29:59.134 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 81.0464ms
2024-02-04 18:29:59.135 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=gP0qYVP8TUUsEFku-qFtNg - -
2024-02-04 18:29:59.137 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 18:29:59.239 +03:00 [ERR] Failed to invoke hub method 'ReceiveStream'.
System.OperationCanceledException: The underlying connection was closed.
   at System.Threading.Channels.AsyncOperation`1.GetResult(Int16 token)
   at System.Threading.Channels.ChannelReader`1.ReadAllAsync(CancellationToken cancellationToken)+MoveNext()
   at System.Threading.Channels.ChannelReader`1.ReadAllAsync(CancellationToken cancellationToken)+System.Threading.Tasks.Sources.IValueTaskSource<System.Boolean>.GetResult()
   at TgCheckerApi.Websockets.BotHub.ReceiveStream(IAsyncEnumerable`1 stream, String param) in C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\Websockets\BotHub.cs:line 39
   at TgCheckerApi.Websockets.BotHub.ReceiveStream(IAsyncEnumerable`1 stream, String param) in C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\Websockets\BotHub.cs:line 39
   at Microsoft.AspNetCore.SignalR.Internal.DefaultHubDispatcher`1.ExecuteMethod(ObjectMethodExecutor methodExecutor, Hub hub, Object[] arguments)
   at Microsoft.AspNetCore.SignalR.Internal.DefaultHubDispatcher`1.<Invoke>g__ExecuteInvocation|16_0(DefaultHubDispatcher`1 dispatcher, ObjectMethodExecutor methodExecutor, THub hub, Object[] arguments, AsyncServiceScope scope, IHubActivator`1 hubActivator, HubConnectionContext connection, HubMethodInvocationMessage hubMethodInvocationMessage, Boolean isStreamCall)
2024-02-04 18:29:59.243 +03:00 [INF] Executed endpoint '/BotHub'
2024-02-04 18:29:59.389 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/BotHub?id=gP0qYVP8TUUsEFku-qFtNg - - - 101 - - 254.6118ms
2024-02-04 18:30:04.412 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 18:30:04.527 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 18:30:04.528 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 18:30:04.530 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 117.8490ms
2024-02-04 18:30:04.531 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=DvbrN9FFo1fzB6_H-I0BVw - -
2024-02-04 18:30:04.533 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 18:30:04.547 +03:00 [INF] Executed endpoint '/BotHub'
2024-02-04 18:30:04.549 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/BotHub?id=DvbrN9FFo1fzB6_H-I0BVw - - - 101 - - 18.6489ms
2024-02-04 18:30:06.878 +03:00 [INF] Start processing HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-04 18:30:06.889 +03:00 [INF] Sending HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-04 18:30:09.564 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 18:30:09.565 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 18:30:09.567 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 18:30:09.568 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 3.5257ms
2024-02-04 18:30:09.569 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=1m0H0vFxmAkjGdjbvkWIYA - -
2024-02-04 18:30:09.570 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 18:30:09.573 +03:00 [INF] Executed endpoint '/BotHub'
2024-02-04 18:30:09.603 +03:00 [ERR] Failed to invoke hub method 'ReceiveStream'.
System.OperationCanceledException: The underlying connection was closed.
   at System.Threading.Channels.AsyncOperation`1.GetResult(Int16 token)
   at System.Threading.Channels.ChannelReader`1.ReadAllAsync(CancellationToken cancellationToken)+MoveNext()
   at System.Threading.Channels.ChannelReader`1.ReadAllAsync(CancellationToken cancellationToken)+System.Threading.Tasks.Sources.IValueTaskSource<System.Boolean>.GetResult()
   at TgCheckerApi.Websockets.BotHub.ReceiveStream(IAsyncEnumerable`1 stream, String param) in C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\Websockets\BotHub.cs:line 39
   at TgCheckerApi.Websockets.BotHub.ReceiveStream(IAsyncEnumerable`1 stream, String param) in C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\Websockets\BotHub.cs:line 39
   at Microsoft.AspNetCore.SignalR.Internal.DefaultHubDispatcher`1.ExecuteMethod(ObjectMethodExecutor methodExecutor, Hub hub, Object[] arguments)
   at Microsoft.AspNetCore.SignalR.Internal.DefaultHubDispatcher`1.<Invoke>g__ExecuteInvocation|16_0(DefaultHubDispatcher`1 dispatcher, ObjectMethodExecutor methodExecutor, THub hub, Object[] arguments, AsyncServiceScope scope, IHubActivator`1 hubActivator, HubConnectionContext connection, HubMethodInvocationMessage hubMethodInvocationMessage, Boolean isStreamCall)
2024-02-04 18:30:09.603 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/BotHub?id=1m0H0vFxmAkjGdjbvkWIYA - - - 101 - - 34.0391ms
2024-02-04 18:30:14.606 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 18:30:14.607 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 18:30:14.608 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 18:30:14.609 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 2.6448ms
2024-02-04 18:30:14.610 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=IutkanBG_-N-SdIUWNkzVg - -
2024-02-04 18:30:14.611 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 18:30:14.626 +03:00 [INF] Executed endpoint '/BotHub'
2024-02-04 18:30:14.650 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/BotHub?id=IutkanBG_-N-SdIUWNkzVg - - - 101 - - 40.2810ms
2024-02-04 18:30:14.658 +03:00 [ERR] Failed to invoke hub method 'ReceiveStream'.
System.OperationCanceledException: The underlying connection was closed.
   at System.Threading.Channels.AsyncOperation`1.GetResult(Int16 token)
   at System.Threading.Channels.ChannelReader`1.ReadAllAsync(CancellationToken cancellationToken)+MoveNext()
   at System.Threading.Channels.ChannelReader`1.ReadAllAsync(CancellationToken cancellationToken)+System.Threading.Tasks.Sources.IValueTaskSource<System.Boolean>.GetResult()
   at TgCheckerApi.Websockets.BotHub.ReceiveStream(IAsyncEnumerable`1 stream, String param) in C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\Websockets\BotHub.cs:line 39
   at TgCheckerApi.Websockets.BotHub.ReceiveStream(IAsyncEnumerable`1 stream, String param) in C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\Websockets\BotHub.cs:line 39
   at Microsoft.AspNetCore.SignalR.Internal.DefaultHubDispatcher`1.ExecuteMethod(ObjectMethodExecutor methodExecutor, Hub hub, Object[] arguments)
   at Microsoft.AspNetCore.SignalR.Internal.DefaultHubDispatcher`1.<Invoke>g__ExecuteInvocation|16_0(DefaultHubDispatcher`1 dispatcher, ObjectMethodExecutor methodExecutor, THub hub, Object[] arguments, AsyncServiceScope scope, IHubActivator`1 hubActivator, HubConnectionContext connection, HubMethodInvocationMessage hubMethodInvocationMessage, Boolean isStreamCall)
2024-02-04 18:31:47.010 +03:00 [ERR] Error occurred executing UpdateSubscribersJob via HTTP request.
System.Threading.Tasks.TaskCanceledException: The request was canceled due to the configured HttpClient.Timeout of 100 seconds elapsing.
 ---> System.TimeoutException: The operation was canceled.
 ---> System.Threading.Tasks.TaskCanceledException: The operation was canceled.
 ---> System.IO.IOException: Unable to read data from the transport connection: The I/O operation has been aborted because of either a thread exit or an application request..
 ---> System.Net.Sockets.SocketException (995): The I/O operation has been aborted because of either a thread exit or an application request.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Security.SslStream.EnsureFullTlsFrameAsync[TIOAdapter](TIOAdapter adapter)
   at System.Net.Security.SslStream.ReadAsyncInternal[TIOAdapter](TIOAdapter adapter, Memory`1 buffer)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsyncCore(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsyncCore(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   --- End of inner exception stack trace ---
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpClient.HandleFailure(Exception e, Boolean telemetryStarted, HttpResponseMessage response, CancellationTokenSource cts, CancellationToken cancellationToken, CancellationTokenSource pendingRequestsCts)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at TgCheckerApi.Job.UpdateSubscribersJob.Execute(IJobExecutionContext context) in C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\Job\UpdateSubscribersJob.cs:line 49
2024-02-04 18:34:38.414 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 18:34:38.414 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 18:34:38.415 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 18:34:38.424 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 10.3303ms
2024-02-04 18:34:38.429 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=DtdhyeppxkV4nqaAyVXr7w - -
2024-02-04 18:34:38.431 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 18:34:46.548 +03:00 [INF] User profile is available. Using 'C:\Users\timar\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-04 18:34:46.699 +03:00 [INF] Default Quartz.NET properties loaded from embedded resource file
2024-02-04 18:34:46.739 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-02-04 18:34:46.743 +03:00 [INF] Quartz Scheduler created
2024-02-04 18:34:46.744 +03:00 [INF] RAMJobStore initialized.
2024-02-04 18:34:46.745 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-02-04 18:34:46.746 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-02-04 18:34:46.746 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-02-04 18:34:46.747 +03:00 [INF] JobFactory set to: TgCheckerApi.Job.QuartzJobFactory
2024-02-04 18:34:46.791 +03:00 [INF] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2024-02-04 18:34:46.879 +03:00 [INF] Now listening on: http://localhost:7256
2024-02-04 18:34:46.880 +03:00 [INF] Now listening on: http://localhost:5244
2024-02-04 18:34:46.884 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-04 18:34:46.885 +03:00 [INF] Hosting environment: Development
2024-02-04 18:34:46.886 +03:00 [INF] Content root path: C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\
2024-02-04 18:34:47.117 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/index.html - -
2024-02-04 18:34:47.411 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/index.html - - - 200 - text/html;charset=utf-8 296.1624ms
2024-02-04 18:34:47.419 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_vs/browserLink - -
2024-02-04 18:34:47.420 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - -
2024-02-04 18:34:47.430 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - - - 200 12356 application/javascript;+charset=utf-8 9.4015ms
2024-02-04 18:34:47.442 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 22.7780ms
2024-02-04 18:34:47.510 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - -
2024-02-04 18:34:47.635 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 124.4245ms
2024-02-04 18:34:48.427 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 18:34:48.432 +03:00 [WRN] Failed to determine the https port for redirect.
2024-02-04 18:34:48.499 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 18:34:48.512 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 18:34:48.513 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 85.9355ms
2024-02-04 18:34:48.514 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=g8GdDB0s_ssyuOvR2kU6sQ - -
2024-02-04 18:34:48.517 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 18:35:10.215 +03:00 [INF] User profile is available. Using 'C:\Users\timar\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-04 18:35:10.359 +03:00 [INF] Default Quartz.NET properties loaded from embedded resource file
2024-02-04 18:35:10.397 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-02-04 18:35:10.401 +03:00 [INF] Quartz Scheduler created
2024-02-04 18:35:10.402 +03:00 [INF] RAMJobStore initialized.
2024-02-04 18:35:10.402 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-02-04 18:35:10.403 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-02-04 18:35:10.404 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-02-04 18:35:10.405 +03:00 [INF] JobFactory set to: TgCheckerApi.Job.QuartzJobFactory
2024-02-04 18:35:10.444 +03:00 [INF] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2024-02-04 18:35:10.514 +03:00 [INF] Now listening on: http://localhost:7256
2024-02-04 18:35:10.515 +03:00 [INF] Now listening on: http://localhost:5244
2024-02-04 18:35:10.518 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-04 18:35:10.519 +03:00 [INF] Hosting environment: Development
2024-02-04 18:35:10.519 +03:00 [INF] Content root path: C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\
2024-02-04 18:35:10.636 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 18:35:10.665 +03:00 [WRN] Failed to determine the https port for redirect.
2024-02-04 18:35:10.729 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/index.html - -
2024-02-04 18:35:10.744 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 18:35:10.840 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 18:35:10.845 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=w-i8rcXKLV8wJ5QDUkZDKg - -
2024-02-04 18:35:10.847 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 213.8879ms
2024-02-04 18:35:10.847 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 18:35:10.922 +03:00 [ERR] Failed to invoke hub method 'ReceiveStream'.
System.OperationCanceledException: The underlying connection was closed.
   at System.Threading.Channels.AsyncOperation`1.GetResult(Int16 token)
   at System.Threading.Channels.ChannelReader`1.ReadAllAsync(CancellationToken cancellationToken)+MoveNext()
   at System.Threading.Channels.ChannelReader`1.ReadAllAsync(CancellationToken cancellationToken)+System.Threading.Tasks.Sources.IValueTaskSource<System.Boolean>.GetResult()
   at TgCheckerApi.Websockets.BotHub.ReceiveStream(IAsyncEnumerable`1 stream, String param) in C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\Websockets\BotHub.cs:line 39
   at TgCheckerApi.Websockets.BotHub.ReceiveStream(IAsyncEnumerable`1 stream, String param) in C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\Websockets\BotHub.cs:line 39
   at Microsoft.AspNetCore.SignalR.Internal.DefaultHubDispatcher`1.ExecuteMethod(ObjectMethodExecutor methodExecutor, Hub hub, Object[] arguments)
   at Microsoft.AspNetCore.SignalR.Internal.DefaultHubDispatcher`1.<Invoke>g__ExecuteInvocation|16_0(DefaultHubDispatcher`1 dispatcher, ObjectMethodExecutor methodExecutor, THub hub, Object[] arguments, AsyncServiceScope scope, IHubActivator`1 hubActivator, HubConnectionContext connection, HubMethodInvocationMessage hubMethodInvocationMessage, Boolean isStreamCall)
2024-02-04 18:35:10.926 +03:00 [INF] Executed endpoint '/BotHub'
2024-02-04 18:35:10.953 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/BotHub?id=w-i8rcXKLV8wJ5QDUkZDKg - - - 101 - - 108.3482ms
2024-02-04 18:35:11.069 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/index.html - - - 200 - text/html;charset=utf-8 340.5661ms
2024-02-04 18:35:11.083 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_vs/browserLink - -
2024-02-04 18:35:11.088 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - -
2024-02-04 18:35:11.091 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - - - 200 12356 application/javascript;+charset=utf-8 3.2891ms
2024-02-04 18:35:11.100 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 16.7094ms
2024-02-04 18:35:11.166 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - -
2024-02-04 18:35:11.289 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 123.6065ms
2024-02-04 18:35:15.962 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 18:35:15.964 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 18:35:15.965 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 18:35:15.966 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 3.2765ms
2024-02-04 18:35:15.966 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=9El3EcgYTjJmYe4WpQ6goA - -
2024-02-04 18:35:15.967 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 18:35:15.973 +03:00 [INF] Executed endpoint '/BotHub'
2024-02-04 18:35:15.973 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/BotHub?id=9El3EcgYTjJmYe4WpQ6goA - - - 101 - - 7.0090ms
2024-02-04 18:35:20.642 +03:00 [INF] Start processing HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-04 18:35:20.652 +03:00 [INF] Sending HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-04 18:35:20.978 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 18:35:20.979 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 18:35:20.980 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 18:35:20.980 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 2.6542ms
2024-02-04 18:35:20.981 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=g4kkFSwndbUT66-08Ig60w - -
2024-02-04 18:35:20.982 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 18:35:20.986 +03:00 [INF] Executed endpoint '/BotHub'
2024-02-04 18:35:21.016 +03:00 [ERR] Failed to invoke hub method 'ReceiveStream'.
System.OperationCanceledException: The underlying connection was closed.
   at System.Threading.Channels.AsyncOperation`1.GetResult(Int16 token)
   at System.Threading.Channels.ChannelReader`1.ReadAllAsync(CancellationToken cancellationToken)+MoveNext()
   at System.Threading.Channels.ChannelReader`1.ReadAllAsync(CancellationToken cancellationToken)+System.Threading.Tasks.Sources.IValueTaskSource<System.Boolean>.GetResult()
   at TgCheckerApi.Websockets.BotHub.ReceiveStream(IAsyncEnumerable`1 stream, String param) in C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\Websockets\BotHub.cs:line 39
   at TgCheckerApi.Websockets.BotHub.ReceiveStream(IAsyncEnumerable`1 stream, String param) in C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\Websockets\BotHub.cs:line 39
   at Microsoft.AspNetCore.SignalR.Internal.DefaultHubDispatcher`1.ExecuteMethod(ObjectMethodExecutor methodExecutor, Hub hub, Object[] arguments)
   at Microsoft.AspNetCore.SignalR.Internal.DefaultHubDispatcher`1.<Invoke>g__ExecuteInvocation|16_0(DefaultHubDispatcher`1 dispatcher, ObjectMethodExecutor methodExecutor, THub hub, Object[] arguments, AsyncServiceScope scope, IHubActivator`1 hubActivator, HubConnectionContext connection, HubMethodInvocationMessage hubMethodInvocationMessage, Boolean isStreamCall)
2024-02-04 18:35:21.016 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/BotHub?id=g4kkFSwndbUT66-08Ig60w - - - 101 - - 34.5429ms
2024-02-04 18:35:26.034 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 18:35:26.035 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 18:35:26.036 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 18:35:26.037 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 2.7869ms
2024-02-04 18:35:26.038 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=YyyeeU9NdRl8dj9rTxWW-g - -
2024-02-04 18:35:26.039 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 18:35:26.042 +03:00 [INF] Executed endpoint '/BotHub'
2024-02-04 18:35:26.072 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/BotHub?id=YyyeeU9NdRl8dj9rTxWW-g - - - 101 - - 34.0024ms
2024-02-04 18:35:26.072 +03:00 [ERR] Failed to invoke hub method 'ReceiveStream'.
System.OperationCanceledException: The underlying connection was closed.
   at System.Threading.Channels.AsyncOperation`1.GetResult(Int16 token)
   at System.Threading.Channels.ChannelReader`1.ReadAllAsync(CancellationToken cancellationToken)+MoveNext()
   at System.Threading.Channels.ChannelReader`1.ReadAllAsync(CancellationToken cancellationToken)+System.Threading.Tasks.Sources.IValueTaskSource<System.Boolean>.GetResult()
   at TgCheckerApi.Websockets.BotHub.ReceiveStream(IAsyncEnumerable`1 stream, String param) in C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\Websockets\BotHub.cs:line 39
   at TgCheckerApi.Websockets.BotHub.ReceiveStream(IAsyncEnumerable`1 stream, String param) in C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\Websockets\BotHub.cs:line 39
   at Microsoft.AspNetCore.SignalR.Internal.DefaultHubDispatcher`1.ExecuteMethod(ObjectMethodExecutor methodExecutor, Hub hub, Object[] arguments)
   at Microsoft.AspNetCore.SignalR.Internal.DefaultHubDispatcher`1.<Invoke>g__ExecuteInvocation|16_0(DefaultHubDispatcher`1 dispatcher, ObjectMethodExecutor methodExecutor, THub hub, Object[] arguments, AsyncServiceScope scope, IHubActivator`1 hubActivator, HubConnectionContext connection, HubMethodInvocationMessage hubMethodInvocationMessage, Boolean isStreamCall)
2024-02-04 18:35:31.094 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 18:35:31.095 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 18:35:31.096 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 18:35:31.097 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 2.4605ms
2024-02-04 18:35:31.098 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=mWTw2_Y_kb-Wf3EAbQ_srw - -
2024-02-04 18:35:31.099 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 18:35:31.102 +03:00 [INF] Executed endpoint '/BotHub'
2024-02-04 18:35:31.130 +03:00 [ERR] Failed to invoke hub method 'ReceiveStream'.
System.OperationCanceledException: The underlying connection was closed.
   at System.Threading.Channels.AsyncOperation`1.GetResult(Int16 token)
   at System.Threading.Channels.ChannelReader`1.ReadAllAsync(CancellationToken cancellationToken)+MoveNext()
   at System.Threading.Channels.ChannelReader`1.ReadAllAsync(CancellationToken cancellationToken)+System.Threading.Tasks.Sources.IValueTaskSource<System.Boolean>.GetResult()
   at TgCheckerApi.Websockets.BotHub.ReceiveStream(IAsyncEnumerable`1 stream, String param) in C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\Websockets\BotHub.cs:line 39
   at TgCheckerApi.Websockets.BotHub.ReceiveStream(IAsyncEnumerable`1 stream, String param) in C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\Websockets\BotHub.cs:line 39
   at Microsoft.AspNetCore.SignalR.Internal.DefaultHubDispatcher`1.ExecuteMethod(ObjectMethodExecutor methodExecutor, Hub hub, Object[] arguments)
   at Microsoft.AspNetCore.SignalR.Internal.DefaultHubDispatcher`1.<Invoke>g__ExecuteInvocation|16_0(DefaultHubDispatcher`1 dispatcher, ObjectMethodExecutor methodExecutor, THub hub, Object[] arguments, AsyncServiceScope scope, IHubActivator`1 hubActivator, HubConnectionContext connection, HubMethodInvocationMessage hubMethodInvocationMessage, Boolean isStreamCall)
2024-02-04 18:35:31.130 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/BotHub?id=mWTw2_Y_kb-Wf3EAbQ_srw - - - 101 - - 31.6928ms
2024-02-04 18:35:36.148 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 18:35:36.149 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 18:35:36.150 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 18:35:36.151 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 3.2701ms
2024-02-04 18:35:36.152 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=I2jwi65kxakHE446njRXIQ - -
2024-02-04 18:35:36.153 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 18:35:36.157 +03:00 [INF] Executed endpoint '/BotHub'
2024-02-04 18:35:36.180 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/BotHub?id=I2jwi65kxakHE446njRXIQ - - - 101 - - 28.3538ms
2024-02-04 18:35:36.187 +03:00 [ERR] Failed to invoke hub method 'ReceiveStream'.
System.OperationCanceledException: The underlying connection was closed.
   at System.Threading.Channels.AsyncOperation`1.GetResult(Int16 token)
   at System.Threading.Channels.ChannelReader`1.ReadAllAsync(CancellationToken cancellationToken)+MoveNext()
   at System.Threading.Channels.ChannelReader`1.ReadAllAsync(CancellationToken cancellationToken)+System.Threading.Tasks.Sources.IValueTaskSource<System.Boolean>.GetResult()
   at TgCheckerApi.Websockets.BotHub.ReceiveStream(IAsyncEnumerable`1 stream, String param) in C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\Websockets\BotHub.cs:line 39
   at TgCheckerApi.Websockets.BotHub.ReceiveStream(IAsyncEnumerable`1 stream, String param) in C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\Websockets\BotHub.cs:line 39
   at Microsoft.AspNetCore.SignalR.Internal.DefaultHubDispatcher`1.ExecuteMethod(ObjectMethodExecutor methodExecutor, Hub hub, Object[] arguments)
   at Microsoft.AspNetCore.SignalR.Internal.DefaultHubDispatcher`1.<Invoke>g__ExecuteInvocation|16_0(DefaultHubDispatcher`1 dispatcher, ObjectMethodExecutor methodExecutor, THub hub, Object[] arguments, AsyncServiceScope scope, IHubActivator`1 hubActivator, HubConnectionContext connection, HubMethodInvocationMessage hubMethodInvocationMessage, Boolean isStreamCall)
2024-02-04 18:35:41.183 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 18:35:41.184 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 18:35:41.185 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 18:35:41.186 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 2.9317ms
2024-02-04 18:35:41.187 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=fw9AYxE19-nfRjxl5yGhwQ - -
2024-02-04 18:35:41.188 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 18:35:41.192 +03:00 [INF] Executed endpoint '/BotHub'
2024-02-04 18:35:41.223 +03:00 [ERR] Failed to invoke hub method 'ReceiveStream'.
System.OperationCanceledException: The underlying connection was closed.
   at System.Threading.Channels.AsyncOperation`1.GetResult(Int16 token)
   at System.Threading.Channels.ChannelReader`1.ReadAllAsync(CancellationToken cancellationToken)+MoveNext()
   at System.Threading.Channels.ChannelReader`1.ReadAllAsync(CancellationToken cancellationToken)+System.Threading.Tasks.Sources.IValueTaskSource<System.Boolean>.GetResult()
   at TgCheckerApi.Websockets.BotHub.ReceiveStream(IAsyncEnumerable`1 stream, String param) in C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\Websockets\BotHub.cs:line 39
   at TgCheckerApi.Websockets.BotHub.ReceiveStream(IAsyncEnumerable`1 stream, String param) in C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\Websockets\BotHub.cs:line 39
   at Microsoft.AspNetCore.SignalR.Internal.DefaultHubDispatcher`1.ExecuteMethod(ObjectMethodExecutor methodExecutor, Hub hub, Object[] arguments)
   at Microsoft.AspNetCore.SignalR.Internal.DefaultHubDispatcher`1.<Invoke>g__ExecuteInvocation|16_0(DefaultHubDispatcher`1 dispatcher, ObjectMethodExecutor methodExecutor, THub hub, Object[] arguments, AsyncServiceScope scope, IHubActivator`1 hubActivator, HubConnectionContext connection, HubMethodInvocationMessage hubMethodInvocationMessage, Boolean isStreamCall)
2024-02-04 18:35:41.223 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/BotHub?id=fw9AYxE19-nfRjxl5yGhwQ - - - 101 - - 35.9370ms
2024-02-04 18:35:46.236 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 18:35:46.237 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 18:35:46.238 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 18:35:46.239 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 2.6869ms
2024-02-04 18:35:46.239 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=P3JoYXQ5ufyCZuWQwEMRmg - -
2024-02-04 18:35:46.241 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 18:35:46.246 +03:00 [INF] Executed endpoint '/BotHub'
2024-02-04 18:35:46.276 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/BotHub?id=P3JoYXQ5ufyCZuWQwEMRmg - - - 101 - - 36.4874ms
2024-02-04 18:35:46.276 +03:00 [ERR] Failed to invoke hub method 'ReceiveStream'.
System.OperationCanceledException: The underlying connection was closed.
   at System.Threading.Channels.AsyncOperation`1.GetResult(Int16 token)
   at System.Threading.Channels.ChannelReader`1.ReadAllAsync(CancellationToken cancellationToken)+MoveNext()
   at System.Threading.Channels.ChannelReader`1.ReadAllAsync(CancellationToken cancellationToken)+System.Threading.Tasks.Sources.IValueTaskSource<System.Boolean>.GetResult()
   at TgCheckerApi.Websockets.BotHub.ReceiveStream(IAsyncEnumerable`1 stream, String param) in C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\Websockets\BotHub.cs:line 39
   at TgCheckerApi.Websockets.BotHub.ReceiveStream(IAsyncEnumerable`1 stream, String param) in C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\Websockets\BotHub.cs:line 39
   at Microsoft.AspNetCore.SignalR.Internal.DefaultHubDispatcher`1.ExecuteMethod(ObjectMethodExecutor methodExecutor, Hub hub, Object[] arguments)
   at Microsoft.AspNetCore.SignalR.Internal.DefaultHubDispatcher`1.<Invoke>g__ExecuteInvocation|16_0(DefaultHubDispatcher`1 dispatcher, ObjectMethodExecutor methodExecutor, THub hub, Object[] arguments, AsyncServiceScope scope, IHubActivator`1 hubActivator, HubConnectionContext connection, HubMethodInvocationMessage hubMethodInvocationMessage, Boolean isStreamCall)
2024-02-04 18:35:51.281 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 18:35:51.282 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 18:35:51.283 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 18:35:51.284 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 2.5104ms
2024-02-04 18:35:51.285 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=7WQ8xaQ7nWkR0JJqyCb6LQ - -
2024-02-04 18:35:51.286 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 18:35:51.289 +03:00 [INF] Executed endpoint '/BotHub'
2024-02-04 18:35:51.311 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/BotHub?id=7WQ8xaQ7nWkR0JJqyCb6LQ - - - 101 - - 26.1337ms
2024-02-04 18:35:51.318 +03:00 [ERR] Failed to invoke hub method 'ReceiveStream'.
System.OperationCanceledException: The underlying connection was closed.
   at System.Threading.Channels.AsyncOperation`1.GetResult(Int16 token)
   at System.Threading.Channels.ChannelReader`1.ReadAllAsync(CancellationToken cancellationToken)+MoveNext()
   at System.Threading.Channels.ChannelReader`1.ReadAllAsync(CancellationToken cancellationToken)+System.Threading.Tasks.Sources.IValueTaskSource<System.Boolean>.GetResult()
   at TgCheckerApi.Websockets.BotHub.ReceiveStream(IAsyncEnumerable`1 stream, String param) in C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\Websockets\BotHub.cs:line 39
   at TgCheckerApi.Websockets.BotHub.ReceiveStream(IAsyncEnumerable`1 stream, String param) in C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\Websockets\BotHub.cs:line 39
   at Microsoft.AspNetCore.SignalR.Internal.DefaultHubDispatcher`1.ExecuteMethod(ObjectMethodExecutor methodExecutor, Hub hub, Object[] arguments)
   at Microsoft.AspNetCore.SignalR.Internal.DefaultHubDispatcher`1.<Invoke>g__ExecuteInvocation|16_0(DefaultHubDispatcher`1 dispatcher, ObjectMethodExecutor methodExecutor, THub hub, Object[] arguments, AsyncServiceScope scope, IHubActivator`1 hubActivator, HubConnectionContext connection, HubMethodInvocationMessage hubMethodInvocationMessage, Boolean isStreamCall)
2024-02-04 18:35:56.328 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 18:35:56.328 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 18:35:56.329 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 18:35:56.330 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 2.5915ms
2024-02-04 18:35:56.333 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=zCkGwyCrvAarn9JynsuvmQ - -
2024-02-04 18:35:56.333 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 18:35:56.344 +03:00 [INF] Executed endpoint '/BotHub'
2024-02-04 18:35:56.373 +03:00 [ERR] Failed to invoke hub method 'ReceiveStream'.
System.OperationCanceledException: The underlying connection was closed.
   at System.Threading.Channels.AsyncOperation`1.GetResult(Int16 token)
   at System.Threading.Channels.ChannelReader`1.ReadAllAsync(CancellationToken cancellationToken)+MoveNext()
   at System.Threading.Channels.ChannelReader`1.ReadAllAsync(CancellationToken cancellationToken)+System.Threading.Tasks.Sources.IValueTaskSource<System.Boolean>.GetResult()
   at TgCheckerApi.Websockets.BotHub.ReceiveStream(IAsyncEnumerable`1 stream, String param) in C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\Websockets\BotHub.cs:line 39
   at TgCheckerApi.Websockets.BotHub.ReceiveStream(IAsyncEnumerable`1 stream, String param) in C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\Websockets\BotHub.cs:line 39
   at Microsoft.AspNetCore.SignalR.Internal.DefaultHubDispatcher`1.ExecuteMethod(ObjectMethodExecutor methodExecutor, Hub hub, Object[] arguments)
   at Microsoft.AspNetCore.SignalR.Internal.DefaultHubDispatcher`1.<Invoke>g__ExecuteInvocation|16_0(DefaultHubDispatcher`1 dispatcher, ObjectMethodExecutor methodExecutor, THub hub, Object[] arguments, AsyncServiceScope scope, IHubActivator`1 hubActivator, HubConnectionContext connection, HubMethodInvocationMessage hubMethodInvocationMessage, Boolean isStreamCall)
2024-02-04 18:35:56.374 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/BotHub?id=zCkGwyCrvAarn9JynsuvmQ - - - 101 - - 40.8808ms
2024-02-04 18:36:01.388 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 18:36:01.389 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 18:36:01.390 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 18:36:01.391 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 3.0443ms
2024-02-04 18:36:01.392 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=v_E6DLgOQvtiagWNPJ5R8Q - -
2024-02-04 18:36:01.393 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 18:36:01.396 +03:00 [INF] Executed endpoint '/BotHub'
2024-02-04 18:36:01.419 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/BotHub?id=v_E6DLgOQvtiagWNPJ5R8Q - - - 101 - - 27.0389ms
2024-02-04 18:36:01.426 +03:00 [ERR] Failed to invoke hub method 'ReceiveStream'.
System.OperationCanceledException: The underlying connection was closed.
   at System.Threading.Channels.AsyncOperation`1.GetResult(Int16 token)
   at System.Threading.Channels.ChannelReader`1.ReadAllAsync(CancellationToken cancellationToken)+MoveNext()
   at System.Threading.Channels.ChannelReader`1.ReadAllAsync(CancellationToken cancellationToken)+System.Threading.Tasks.Sources.IValueTaskSource<System.Boolean>.GetResult()
   at TgCheckerApi.Websockets.BotHub.ReceiveStream(IAsyncEnumerable`1 stream, String param) in C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\Websockets\BotHub.cs:line 39
   at TgCheckerApi.Websockets.BotHub.ReceiveStream(IAsyncEnumerable`1 stream, String param) in C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\Websockets\BotHub.cs:line 39
   at Microsoft.AspNetCore.SignalR.Internal.DefaultHubDispatcher`1.ExecuteMethod(ObjectMethodExecutor methodExecutor, Hub hub, Object[] arguments)
   at Microsoft.AspNetCore.SignalR.Internal.DefaultHubDispatcher`1.<Invoke>g__ExecuteInvocation|16_0(DefaultHubDispatcher`1 dispatcher, ObjectMethodExecutor methodExecutor, THub hub, Object[] arguments, AsyncServiceScope scope, IHubActivator`1 hubActivator, HubConnectionContext connection, HubMethodInvocationMessage hubMethodInvocationMessage, Boolean isStreamCall)
2024-02-04 18:36:06.436 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 18:36:06.437 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 18:36:06.438 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 18:36:06.438 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 2.5702ms
2024-02-04 18:36:06.439 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=DC7Off-GXnHnD8qublqSSg - -
2024-02-04 18:36:06.440 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 18:36:06.445 +03:00 [INF] Executed endpoint '/BotHub'
2024-02-04 18:36:06.469 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/BotHub?id=DC7Off-GXnHnD8qublqSSg - - - 101 - - 28.7235ms
2024-02-04 18:36:06.484 +03:00 [ERR] Failed to invoke hub method 'ReceiveStream'.
System.OperationCanceledException: The underlying connection was closed.
   at System.Threading.Channels.AsyncOperation`1.GetResult(Int16 token)
   at System.Threading.Channels.ChannelReader`1.ReadAllAsync(CancellationToken cancellationToken)+MoveNext()
   at System.Threading.Channels.ChannelReader`1.ReadAllAsync(CancellationToken cancellationToken)+System.Threading.Tasks.Sources.IValueTaskSource<System.Boolean>.GetResult()
   at TgCheckerApi.Websockets.BotHub.ReceiveStream(IAsyncEnumerable`1 stream, String param) in C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\Websockets\BotHub.cs:line 39
   at TgCheckerApi.Websockets.BotHub.ReceiveStream(IAsyncEnumerable`1 stream, String param) in C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\Websockets\BotHub.cs:line 39
   at Microsoft.AspNetCore.SignalR.Internal.DefaultHubDispatcher`1.ExecuteMethod(ObjectMethodExecutor methodExecutor, Hub hub, Object[] arguments)
   at Microsoft.AspNetCore.SignalR.Internal.DefaultHubDispatcher`1.<Invoke>g__ExecuteInvocation|16_0(DefaultHubDispatcher`1 dispatcher, ObjectMethodExecutor methodExecutor, THub hub, Object[] arguments, AsyncServiceScope scope, IHubActivator`1 hubActivator, HubConnectionContext connection, HubMethodInvocationMessage hubMethodInvocationMessage, Boolean isStreamCall)
2024-02-04 18:36:11.492 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 18:36:11.493 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 18:36:11.494 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 18:36:11.495 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 2.8205ms
2024-02-04 18:36:11.495 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=-KtWia6BmsaTYMeJy8GV6A - -
2024-02-04 18:36:11.497 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 18:36:11.500 +03:00 [INF] Executed endpoint '/BotHub'
2024-02-04 18:36:11.531 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/BotHub?id=-KtWia6BmsaTYMeJy8GV6A - - - 101 - - 35.2477ms
2024-02-04 18:36:11.531 +03:00 [ERR] Failed to invoke hub method 'ReceiveStream'.
System.OperationCanceledException: The underlying connection was closed.
   at System.Threading.Channels.AsyncOperation`1.GetResult(Int16 token)
   at System.Threading.Channels.ChannelReader`1.ReadAllAsync(CancellationToken cancellationToken)+MoveNext()
   at System.Threading.Channels.ChannelReader`1.ReadAllAsync(CancellationToken cancellationToken)+System.Threading.Tasks.Sources.IValueTaskSource<System.Boolean>.GetResult()
   at TgCheckerApi.Websockets.BotHub.ReceiveStream(IAsyncEnumerable`1 stream, String param) in C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\Websockets\BotHub.cs:line 39
   at TgCheckerApi.Websockets.BotHub.ReceiveStream(IAsyncEnumerable`1 stream, String param) in C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\Websockets\BotHub.cs:line 39
   at Microsoft.AspNetCore.SignalR.Internal.DefaultHubDispatcher`1.ExecuteMethod(ObjectMethodExecutor methodExecutor, Hub hub, Object[] arguments)
   at Microsoft.AspNetCore.SignalR.Internal.DefaultHubDispatcher`1.<Invoke>g__ExecuteInvocation|16_0(DefaultHubDispatcher`1 dispatcher, ObjectMethodExecutor methodExecutor, THub hub, Object[] arguments, AsyncServiceScope scope, IHubActivator`1 hubActivator, HubConnectionContext connection, HubMethodInvocationMessage hubMethodInvocationMessage, Boolean isStreamCall)
2024-02-04 18:36:16.387 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 18:36:16.387 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 18:36:16.388 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 18:36:16.389 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 2.8119ms
2024-02-04 18:36:16.400 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=-TPkoBLqjO1xQ61SgGxyVA - -
2024-02-04 18:36:16.401 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 18:36:23.164 +03:00 [INF] User profile is available. Using 'C:\Users\timar\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-04 18:36:23.310 +03:00 [INF] Default Quartz.NET properties loaded from embedded resource file
2024-02-04 18:36:23.345 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-02-04 18:36:23.349 +03:00 [INF] Quartz Scheduler created
2024-02-04 18:36:23.351 +03:00 [INF] RAMJobStore initialized.
2024-02-04 18:36:23.352 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-02-04 18:36:23.352 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-02-04 18:36:23.353 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-02-04 18:36:23.354 +03:00 [INF] JobFactory set to: TgCheckerApi.Job.QuartzJobFactory
2024-02-04 18:36:23.396 +03:00 [INF] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2024-02-04 18:36:23.495 +03:00 [INF] Now listening on: http://localhost:7256
2024-02-04 18:36:23.496 +03:00 [INF] Now listening on: http://localhost:5244
2024-02-04 18:36:23.499 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-04 18:36:23.500 +03:00 [INF] Hosting environment: Development
2024-02-04 18:36:23.501 +03:00 [INF] Content root path: C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\
2024-02-04 18:36:23.710 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/index.html - -
2024-02-04 18:36:23.967 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/index.html - - - 200 - text/html;charset=utf-8 259.9602ms
2024-02-04 18:36:23.980 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_vs/browserLink - -
2024-02-04 18:36:23.981 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - -
2024-02-04 18:36:23.987 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - - - 200 12356 application/javascript;+charset=utf-8 5.4746ms
2024-02-04 18:36:24.002 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 22.2916ms
2024-02-04 18:36:24.058 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - -
2024-02-04 18:36:24.178 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 119.5632ms
2024-02-04 18:36:26.417 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 18:36:26.422 +03:00 [WRN] Failed to determine the https port for redirect.
2024-02-04 18:36:26.487 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 18:36:26.501 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 18:36:26.502 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 84.9937ms
2024-02-04 18:36:26.503 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=z2vQT7gXEMsR0i9mT1M93w - -
2024-02-04 18:36:26.504 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 18:36:33.587 +03:00 [INF] Start processing HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-04 18:36:33.596 +03:00 [INF] Sending HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-04 18:37:34.877 +03:00 [INF] User profile is available. Using 'C:\Users\timar\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-04 18:37:35.031 +03:00 [INF] Default Quartz.NET properties loaded from embedded resource file
2024-02-04 18:37:35.072 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-02-04 18:37:35.076 +03:00 [INF] Quartz Scheduler created
2024-02-04 18:37:35.078 +03:00 [INF] RAMJobStore initialized.
2024-02-04 18:37:35.079 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-02-04 18:37:35.079 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-02-04 18:37:35.081 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-02-04 18:37:35.082 +03:00 [INF] JobFactory set to: TgCheckerApi.Job.QuartzJobFactory
2024-02-04 18:37:35.125 +03:00 [INF] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2024-02-04 18:37:35.203 +03:00 [INF] Now listening on: http://localhost:7256
2024-02-04 18:37:35.204 +03:00 [INF] Now listening on: http://localhost:5244
2024-02-04 18:37:35.207 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-04 18:37:35.208 +03:00 [INF] Hosting environment: Development
2024-02-04 18:37:35.209 +03:00 [INF] Content root path: C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\
2024-02-04 18:37:35.388 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 18:37:35.416 +03:00 [WRN] Failed to determine the https port for redirect.
2024-02-04 18:37:35.479 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 18:37:35.506 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 18:37:35.511 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 125.2846ms
2024-02-04 18:37:35.513 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=O6yWZ33G47l270L612UukQ - -
2024-02-04 18:37:35.520 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 18:37:35.611 +03:00 [ERR] Failed to invoke hub method 'ReceiveStream'.
System.OperationCanceledException: The underlying connection was closed.
   at System.Threading.Channels.AsyncOperation`1.GetResult(Int16 token)
   at System.Threading.Channels.ChannelReader`1.ReadAllAsync(CancellationToken cancellationToken)+MoveNext()
   at System.Threading.Channels.ChannelReader`1.ReadAllAsync(CancellationToken cancellationToken)+System.Threading.Tasks.Sources.IValueTaskSource<System.Boolean>.GetResult()
   at TgCheckerApi.Websockets.BotHub.ReceiveStream(IAsyncEnumerable`1 stream, String param) in C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\Websockets\BotHub.cs:line 39
   at TgCheckerApi.Websockets.BotHub.ReceiveStream(IAsyncEnumerable`1 stream, String param) in C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\Websockets\BotHub.cs:line 39
   at Microsoft.AspNetCore.SignalR.Internal.DefaultHubDispatcher`1.ExecuteMethod(ObjectMethodExecutor methodExecutor, Hub hub, Object[] arguments)
   at Microsoft.AspNetCore.SignalR.Internal.DefaultHubDispatcher`1.<Invoke>g__ExecuteInvocation|16_0(DefaultHubDispatcher`1 dispatcher, ObjectMethodExecutor methodExecutor, THub hub, Object[] arguments, AsyncServiceScope scope, IHubActivator`1 hubActivator, HubConnectionContext connection, HubMethodInvocationMessage hubMethodInvocationMessage, Boolean isStreamCall)
2024-02-04 18:37:35.614 +03:00 [INF] Executed endpoint '/BotHub'
2024-02-04 18:37:35.675 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/BotHub?id=O6yWZ33G47l270L612UukQ - - - 101 - - 162.3472ms
2024-02-04 18:37:35.800 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/index.html - -
2024-02-04 18:37:35.984 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/index.html - - - 200 - text/html;charset=utf-8 184.1816ms
2024-02-04 18:37:35.990 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_vs/browserLink - -
2024-02-04 18:37:35.992 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - -
2024-02-04 18:37:35.997 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - - - 200 12356 application/javascript;+charset=utf-8 4.6952ms
2024-02-04 18:37:36.003 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 13.0928ms
2024-02-04 18:37:36.154 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - -
2024-02-04 18:37:36.270 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 115.8975ms
2024-02-04 18:37:40.680 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 18:37:40.683 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 18:37:40.684 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 18:37:40.685 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 4.7855ms
2024-02-04 18:37:40.686 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=Pbp4su4zfr4pmEB14_LYBA - -
2024-02-04 18:37:40.687 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 18:37:40.695 +03:00 [INF] Executed endpoint '/BotHub'
2024-02-04 18:37:40.696 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/BotHub?id=Pbp4su4zfr4pmEB14_LYBA - - - 101 - - 10.4572ms
2024-02-04 18:38:53.118 +03:00 [INF] User profile is available. Using 'C:\Users\timar\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-04 18:38:53.266 +03:00 [INF] Default Quartz.NET properties loaded from embedded resource file
2024-02-04 18:38:53.304 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-02-04 18:38:53.307 +03:00 [INF] Quartz Scheduler created
2024-02-04 18:38:53.309 +03:00 [INF] RAMJobStore initialized.
2024-02-04 18:38:53.309 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-02-04 18:38:53.310 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-02-04 18:38:53.311 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-02-04 18:38:53.312 +03:00 [INF] JobFactory set to: TgCheckerApi.Job.QuartzJobFactory
2024-02-04 18:38:53.354 +03:00 [INF] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2024-02-04 18:38:53.455 +03:00 [INF] Now listening on: http://localhost:7256
2024-02-04 18:38:53.456 +03:00 [INF] Now listening on: http://localhost:5244
2024-02-04 18:38:53.459 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-04 18:38:53.460 +03:00 [INF] Hosting environment: Development
2024-02-04 18:38:53.460 +03:00 [INF] Content root path: C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\
2024-02-04 18:38:54.096 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/index.html - -
2024-02-04 18:38:54.334 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/index.html - - - 200 - text/html;charset=utf-8 240.4059ms
2024-02-04 18:38:54.343 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_vs/browserLink - -
2024-02-04 18:38:54.345 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - -
2024-02-04 18:38:54.350 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - - - 200 12356 application/javascript;+charset=utf-8 5.6861ms
2024-02-04 18:38:54.367 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 23.2737ms
2024-02-04 18:38:54.393 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - -
2024-02-04 18:38:54.508 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 115.6228ms
2024-02-04 18:38:56.593 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 18:38:56.598 +03:00 [WRN] Failed to determine the https port for redirect.
2024-02-04 18:38:56.663 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 18:38:56.677 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 18:38:56.678 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 84.7838ms
2024-02-04 18:38:56.688 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=5JaHW_NXM7FqqvTjGe-4rQ - -
2024-02-04 18:38:56.689 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 18:39:15.729 +03:00 [INF] User profile is available. Using 'C:\Users\timar\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-04 18:39:15.880 +03:00 [INF] Default Quartz.NET properties loaded from embedded resource file
2024-02-04 18:39:15.939 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-02-04 18:39:15.943 +03:00 [INF] Quartz Scheduler created
2024-02-04 18:39:15.944 +03:00 [INF] RAMJobStore initialized.
2024-02-04 18:39:15.945 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-02-04 18:39:15.946 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-02-04 18:39:15.946 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-02-04 18:39:15.947 +03:00 [INF] JobFactory set to: TgCheckerApi.Job.QuartzJobFactory
2024-02-04 18:39:15.991 +03:00 [INF] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2024-02-04 18:39:16.068 +03:00 [INF] Now listening on: http://localhost:7256
2024-02-04 18:39:16.069 +03:00 [INF] Now listening on: http://localhost:5244
2024-02-04 18:39:16.072 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-04 18:39:16.073 +03:00 [INF] Hosting environment: Development
2024-02-04 18:39:16.073 +03:00 [INF] Content root path: C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\
2024-02-04 18:39:16.282 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/index.html - -
2024-02-04 18:39:16.282 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 18:39:16.314 +03:00 [WRN] Failed to determine the https port for redirect.
2024-02-04 18:39:16.379 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 18:39:16.405 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 18:39:16.412 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=mAnkz22blLiwqWj8SOXxmg - -
2024-02-04 18:39:16.413 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 134.2931ms
2024-02-04 18:39:16.414 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 18:39:16.546 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/index.html - - - 200 - text/html;charset=utf-8 267.6988ms
2024-02-04 18:39:16.549 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_vs/browserLink - -
2024-02-04 18:39:16.550 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - -
2024-02-04 18:39:16.557 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - - - 200 12356 application/javascript;+charset=utf-8 6.5130ms
2024-02-04 18:39:16.566 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 16.8050ms
2024-02-04 18:39:16.603 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - -
2024-02-04 18:39:16.729 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 125.8451ms
2024-02-04 18:39:26.200 +03:00 [INF] Start processing HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-04 18:39:26.210 +03:00 [INF] Sending HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-04 18:40:54.431 +03:00 [ERR] Failed to invoke hub method 'ReceiveStream'.
System.OperationCanceledException: The underlying connection was closed.
   at System.Threading.Channels.AsyncOperation`1.GetResult(Int16 token)
   at System.Threading.Channels.ChannelReader`1.ReadAllAsync(CancellationToken cancellationToken)+MoveNext()
   at System.Threading.Channels.ChannelReader`1.ReadAllAsync(CancellationToken cancellationToken)+System.Threading.Tasks.Sources.IValueTaskSource<System.Boolean>.GetResult()
   at TgCheckerApi.Websockets.BotHub.ReceiveStream(IAsyncEnumerable`1 stream, String param) in C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\Websockets\BotHub.cs:line 39
   at TgCheckerApi.Websockets.BotHub.ReceiveStream(IAsyncEnumerable`1 stream, String param) in C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\Websockets\BotHub.cs:line 39
   at Microsoft.AspNetCore.SignalR.Internal.DefaultHubDispatcher`1.ExecuteMethod(ObjectMethodExecutor methodExecutor, Hub hub, Object[] arguments)
   at Microsoft.AspNetCore.SignalR.Internal.DefaultHubDispatcher`1.<Invoke>g__ExecuteInvocation|16_0(DefaultHubDispatcher`1 dispatcher, ObjectMethodExecutor methodExecutor, THub hub, Object[] arguments, AsyncServiceScope scope, IHubActivator`1 hubActivator, HubConnectionContext connection, HubMethodInvocationMessage hubMethodInvocationMessage, Boolean isStreamCall)
2024-02-04 18:40:54.438 +03:00 [INF] Executed endpoint '/BotHub'
2024-02-04 18:40:54.472 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/BotHub?id=mAnkz22blLiwqWj8SOXxmg - - - 101 - - 98059.6088ms
2024-02-04 18:41:06.293 +03:00 [ERR] Error occurred executing UpdateSubscribersJob via HTTP request.
System.Threading.Tasks.TaskCanceledException: The request was canceled due to the configured HttpClient.Timeout of 100 seconds elapsing.
 ---> System.TimeoutException: The operation was canceled.
 ---> System.Threading.Tasks.TaskCanceledException: The operation was canceled.
 ---> System.IO.IOException: Unable to read data from the transport connection: The I/O operation has been aborted because of either a thread exit or an application request..
 ---> System.Net.Sockets.SocketException (995): The I/O operation has been aborted because of either a thread exit or an application request.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Security.SslStream.EnsureFullTlsFrameAsync[TIOAdapter](TIOAdapter adapter)
   at System.Net.Security.SslStream.ReadAsyncInternal[TIOAdapter](TIOAdapter adapter, Memory`1 buffer)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsyncCore(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsyncCore(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   --- End of inner exception stack trace ---
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpClient.HandleFailure(Exception e, Boolean telemetryStarted, HttpResponseMessage response, CancellationTokenSource cts, CancellationToken cancellationToken, CancellationTokenSource pendingRequestsCts)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at TgCheckerApi.Job.UpdateSubscribersJob.Execute(IJobExecutionContext context) in C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\Job\UpdateSubscribersJob.cs:line 49
2024-02-04 18:43:18.036 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 18:43:18.039 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 18:43:18.040 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 18:43:18.058 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 20.1904ms
2024-02-04 18:43:18.059 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=y0TVOCMOvbY0URIIg36jow - -
2024-02-04 18:43:18.061 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 18:43:36.387 +03:00 [INF] User profile is available. Using 'C:\Users\timar\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-04 18:43:36.536 +03:00 [INF] Default Quartz.NET properties loaded from embedded resource file
2024-02-04 18:43:36.574 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-02-04 18:43:36.578 +03:00 [INF] Quartz Scheduler created
2024-02-04 18:43:36.579 +03:00 [INF] RAMJobStore initialized.
2024-02-04 18:43:36.579 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-02-04 18:43:36.580 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-02-04 18:43:36.581 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-02-04 18:43:36.582 +03:00 [INF] JobFactory set to: TgCheckerApi.Job.QuartzJobFactory
2024-02-04 18:43:36.630 +03:00 [INF] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2024-02-04 18:43:36.734 +03:00 [INF] Now listening on: http://localhost:7256
2024-02-04 18:43:36.734 +03:00 [INF] Now listening on: http://localhost:5244
2024-02-04 18:43:36.738 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-04 18:43:36.739 +03:00 [INF] Hosting environment: Development
2024-02-04 18:43:36.739 +03:00 [INF] Content root path: C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\
2024-02-04 18:43:37.188 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 18:43:37.216 +03:00 [WRN] Failed to determine the https port for redirect.
2024-02-04 18:43:37.282 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 18:43:37.310 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 18:43:37.317 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 131.8611ms
2024-02-04 18:43:37.320 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=BMA1qLpKqWyEIiWSzZ6upw - -
2024-02-04 18:43:37.331 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 18:43:37.357 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/index.html - -
2024-02-04 18:43:37.377 +03:00 [INF] Executed endpoint '/BotHub'
2024-02-04 18:43:37.380 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/BotHub?id=BMA1qLpKqWyEIiWSzZ6upw - - - 101 - - 59.9844ms
2024-02-04 18:43:37.569 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/index.html - - - 200 - text/html;charset=utf-8 212.5194ms
2024-02-04 18:43:37.576 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_vs/browserLink - -
2024-02-04 18:43:37.577 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - -
2024-02-04 18:43:37.582 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - - - 200 12356 application/javascript;+charset=utf-8 5.4454ms
2024-02-04 18:43:37.594 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 18.5990ms
2024-02-04 18:43:37.662 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - -
2024-02-04 18:43:37.792 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 130.6549ms
2024-02-04 18:43:42.395 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 18:43:42.397 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 18:43:42.397 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 18:43:42.398 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 3.5497ms
2024-02-04 18:43:42.403 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=ILsGdPoUBhl25uqANumAJw - -
2024-02-04 18:43:42.403 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 18:43:42.406 +03:00 [INF] Executed endpoint '/BotHub'
2024-02-04 18:43:42.407 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/BotHub?id=ILsGdPoUBhl25uqANumAJw - - - 101 - - 4.5530ms
2024-02-04 18:43:46.852 +03:00 [INF] Start processing HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-04 18:43:46.861 +03:00 [INF] Sending HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-04 18:43:47.421 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 18:43:47.422 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 18:43:47.423 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 18:43:47.424 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 2.8478ms
2024-02-04 18:43:47.426 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=QVLiGxVR382aXZViBVweiQ - -
2024-02-04 18:43:47.427 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 18:43:47.432 +03:00 [INF] Executed endpoint '/BotHub'
2024-02-04 18:43:47.433 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/BotHub?id=QVLiGxVR382aXZViBVweiQ - - - 101 - - 7.2927ms
2024-02-04 18:43:52.436 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 18:43:52.437 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 18:43:52.438 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 18:43:52.439 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 2.8593ms
2024-02-04 18:43:52.440 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=NIqYGKhzQiS712RIOEkG0Q - -
2024-02-04 18:43:52.441 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 18:43:52.456 +03:00 [INF] Executed endpoint '/BotHub'
2024-02-04 18:43:52.463 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/BotHub?id=NIqYGKhzQiS712RIOEkG0Q - - - 101 - - 23.6274ms
2024-02-04 18:43:57.482 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 18:43:57.483 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 18:43:57.484 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 18:43:57.485 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 3.0861ms
2024-02-04 18:43:57.486 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=0zQwXwXc9msFSbOafUaUiA - -
2024-02-04 18:43:57.487 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 18:43:57.490 +03:00 [INF] Executed endpoint '/BotHub'
2024-02-04 18:43:57.491 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/BotHub?id=0zQwXwXc9msFSbOafUaUiA - - - 101 - - 5.0630ms
2024-02-04 18:44:02.513 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 18:44:02.514 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 18:44:02.515 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 18:44:02.516 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 2.9404ms
2024-02-04 18:44:02.517 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=9kZNycDbbaGRYLh9yr798w - -
2024-02-04 18:44:02.518 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 18:44:02.521 +03:00 [INF] Executed endpoint '/BotHub'
2024-02-04 18:44:02.522 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/BotHub?id=9kZNycDbbaGRYLh9yr798w - - - 101 - - 5.6440ms
2024-02-04 18:45:26.929 +03:00 [ERR] Error occurred executing UpdateSubscribersJob via HTTP request.
System.Threading.Tasks.TaskCanceledException: The request was canceled due to the configured HttpClient.Timeout of 100 seconds elapsing.
 ---> System.TimeoutException: The operation was canceled.
 ---> System.Threading.Tasks.TaskCanceledException: The operation was canceled.
 ---> System.IO.IOException: Unable to read data from the transport connection: The I/O operation has been aborted because of either a thread exit or an application request..
 ---> System.Net.Sockets.SocketException (995): The I/O operation has been aborted because of either a thread exit or an application request.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Security.SslStream.EnsureFullTlsFrameAsync[TIOAdapter](TIOAdapter adapter)
   at System.Net.Security.SslStream.ReadAsyncInternal[TIOAdapter](TIOAdapter adapter, Memory`1 buffer)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsyncCore(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsyncCore(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   --- End of inner exception stack trace ---
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpClient.HandleFailure(Exception e, Boolean telemetryStarted, HttpResponseMessage response, CancellationTokenSource cts, CancellationToken cancellationToken, CancellationTokenSource pendingRequestsCts)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at TgCheckerApi.Job.UpdateSubscribersJob.Execute(IJobExecutionContext context) in C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\Job\UpdateSubscribersJob.cs:line 49
2024-02-04 18:47:21.444 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 18:47:21.445 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 18:47:21.446 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 18:47:21.469 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 22.4916ms
2024-02-04 18:47:21.470 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=P4IRCLme-Hu9HiT_ZUyxzw - -
2024-02-04 18:47:21.471 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 18:48:59.335 +03:00 [INF] User profile is available. Using 'C:\Users\timar\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-04 18:48:59.495 +03:00 [INF] Default Quartz.NET properties loaded from embedded resource file
2024-02-04 18:48:59.559 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-02-04 18:48:59.564 +03:00 [INF] Quartz Scheduler created
2024-02-04 18:48:59.565 +03:00 [INF] RAMJobStore initialized.
2024-02-04 18:48:59.566 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-02-04 18:48:59.567 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-02-04 18:48:59.567 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-02-04 18:48:59.569 +03:00 [INF] JobFactory set to: TgCheckerApi.Job.QuartzJobFactory
2024-02-04 18:48:59.616 +03:00 [INF] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2024-02-04 18:48:59.691 +03:00 [INF] Now listening on: http://localhost:7256
2024-02-04 18:48:59.692 +03:00 [INF] Now listening on: http://localhost:5244
2024-02-04 18:48:59.695 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-04 18:48:59.695 +03:00 [INF] Hosting environment: Development
2024-02-04 18:48:59.696 +03:00 [INF] Content root path: C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\
2024-02-04 18:48:59.934 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 18:48:59.965 +03:00 [WRN] Failed to determine the https port for redirect.
2024-02-04 18:49:00.036 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 18:49:00.068 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 18:49:00.071 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 139.8521ms
2024-02-04 18:49:00.087 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=IzPUvqC4mqzcZLPcx6PLmg - -
2024-02-04 18:49:00.094 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 18:49:00.308 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/index.html - -
2024-02-04 18:49:00.514 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/index.html - - - 200 - text/html;charset=utf-8 205.3901ms
2024-02-04 18:49:00.518 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_vs/browserLink - -
2024-02-04 18:49:00.520 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - -
2024-02-04 18:49:00.526 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - - - 200 12356 application/javascript;+charset=utf-8 6.5500ms
2024-02-04 18:49:00.535 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 17.0597ms
2024-02-04 18:49:00.606 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - -
2024-02-04 18:49:00.737 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 130.6603ms
2024-02-04 18:50:08.706 +03:00 [INF] User profile is available. Using 'C:\Users\timar\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-04 18:50:08.874 +03:00 [INF] Default Quartz.NET properties loaded from embedded resource file
2024-02-04 18:50:08.910 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-02-04 18:50:08.914 +03:00 [INF] Quartz Scheduler created
2024-02-04 18:50:08.915 +03:00 [INF] RAMJobStore initialized.
2024-02-04 18:50:08.916 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-02-04 18:50:08.917 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-02-04 18:50:08.917 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-02-04 18:50:08.918 +03:00 [INF] JobFactory set to: TgCheckerApi.Job.QuartzJobFactory
2024-02-04 18:50:08.957 +03:00 [INF] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2024-02-04 18:50:09.028 +03:00 [INF] Now listening on: http://localhost:7256
2024-02-04 18:50:09.029 +03:00 [INF] Now listening on: http://localhost:5244
2024-02-04 18:50:09.032 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-04 18:50:09.033 +03:00 [INF] Hosting environment: Development
2024-02-04 18:50:09.034 +03:00 [INF] Content root path: C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\
2024-02-04 18:50:09.389 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/index.html - -
2024-02-04 18:50:09.655 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - -
2024-02-04 18:50:09.659 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - - - 200 12356 application/javascript;+charset=utf-8 3.3021ms
2024-02-04 18:50:09.661 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/index.html - - - 200 - text/html;charset=utf-8 275.7987ms
2024-02-04 18:50:09.668 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_vs/browserLink - -
2024-02-04 18:50:09.685 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 17.5936ms
2024-02-04 18:50:09.743 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - -
2024-02-04 18:50:09.864 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 120.7873ms
2024-02-04 18:50:12.008 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 18:50:12.012 +03:00 [WRN] Failed to determine the https port for redirect.
2024-02-04 18:50:12.075 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 18:50:12.088 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 18:50:12.089 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 80.6565ms
2024-02-04 18:50:12.107 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=brnM35bwulgOGKjdR9S8ng - -
2024-02-04 18:50:12.109 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 18:50:19.177 +03:00 [INF] Start processing HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-04 18:50:19.187 +03:00 [INF] Sending HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-04 18:50:30.804 +03:00 [INF] User profile is available. Using 'C:\Users\timar\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-04 18:50:30.956 +03:00 [INF] Default Quartz.NET properties loaded from embedded resource file
2024-02-04 18:50:30.993 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-02-04 18:50:31.006 +03:00 [INF] Quartz Scheduler created
2024-02-04 18:50:31.007 +03:00 [INF] RAMJobStore initialized.
2024-02-04 18:50:31.008 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-02-04 18:50:31.009 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-02-04 18:50:31.010 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-02-04 18:50:31.011 +03:00 [INF] JobFactory set to: TgCheckerApi.Job.QuartzJobFactory
2024-02-04 18:50:31.050 +03:00 [INF] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2024-02-04 18:50:31.125 +03:00 [INF] Now listening on: http://localhost:7256
2024-02-04 18:50:31.126 +03:00 [INF] Now listening on: http://localhost:5244
2024-02-04 18:50:31.129 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-04 18:50:31.130 +03:00 [INF] Hosting environment: Development
2024-02-04 18:50:31.130 +03:00 [INF] Content root path: C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\
2024-02-04 18:50:31.305 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/index.html - -
2024-02-04 18:50:31.428 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 18:50:31.432 +03:00 [WRN] Failed to determine the https port for redirect.
2024-02-04 18:50:31.505 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 18:50:31.529 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 18:50:31.531 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=a_tRqmPsS8XHQr3ufLT9Zw - -
2024-02-04 18:50:31.533 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 18:50:31.533 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 104.3191ms
2024-02-04 18:50:31.582 +03:00 [INF] Executed endpoint '/BotHub'
2024-02-04 18:50:31.587 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/BotHub?id=a_tRqmPsS8XHQr3ufLT9Zw - - - 101 - - 56.1310ms
2024-02-04 18:50:31.589 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/index.html - - - 200 - text/html;charset=utf-8 287.2093ms
2024-02-04 18:50:31.595 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_vs/browserLink - -
2024-02-04 18:50:31.596 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - -
2024-02-04 18:50:31.604 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - - - 200 12356 application/javascript;+charset=utf-8 7.5981ms
2024-02-04 18:50:31.616 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 21.0153ms
2024-02-04 18:50:31.646 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - -
2024-02-04 18:50:31.762 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 116.4540ms
2024-02-04 18:50:36.690 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 18:50:36.692 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 18:50:36.693 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 18:50:36.694 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 4.2147ms
2024-02-04 18:50:36.695 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=Qa9n480pwIjZb3AjsXiUjQ - -
2024-02-04 18:50:36.695 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 18:50:36.699 +03:00 [INF] Executed endpoint '/BotHub'
2024-02-04 18:50:36.699 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/BotHub?id=Qa9n480pwIjZb3AjsXiUjQ - - - 101 - - 4.5996ms
2024-02-04 18:50:41.255 +03:00 [INF] Start processing HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-04 18:50:41.264 +03:00 [INF] Sending HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-04 18:50:41.828 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 18:50:41.829 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 18:50:41.830 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 18:50:41.831 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 2.9897ms
2024-02-04 18:50:41.832 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=cPU6kFRB7ItZ9-tys8JT7A - -
2024-02-04 18:50:41.833 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 18:50:41.839 +03:00 [INF] Executed endpoint '/BotHub'
2024-02-04 18:50:41.840 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/BotHub?id=cPU6kFRB7ItZ9-tys8JT7A - - - 101 - - 7.7898ms
2024-02-04 18:50:46.958 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 18:50:46.959 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 18:50:46.960 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 18:50:46.961 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 2.7810ms
2024-02-04 18:50:46.962 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=KjETZTuG10IFgwU3VXZzRQ - -
2024-02-04 18:50:46.963 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 18:50:46.967 +03:00 [INF] Executed endpoint '/BotHub'
2024-02-04 18:50:46.967 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/BotHub?id=KjETZTuG10IFgwU3VXZzRQ - - - 101 - - 5.8933ms
2024-02-04 18:50:52.084 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 18:50:52.085 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 18:50:52.087 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 18:50:52.088 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 3.6425ms
2024-02-04 18:50:52.089 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=3H0dt1J-_a22wYLEE2g41A - -
2024-02-04 18:50:52.091 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 18:50:52.095 +03:00 [INF] Executed endpoint '/BotHub'
2024-02-04 18:50:52.096 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/BotHub?id=3H0dt1J-_a22wYLEE2g41A - - - 101 - - 7.3203ms
2024-02-04 18:50:57.217 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 18:50:57.218 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 18:50:57.218 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 18:50:57.220 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 3.0739ms
2024-02-04 18:50:57.220 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=w9nUqqghp8SOI05RSJZAAg - -
2024-02-04 18:50:57.222 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 18:50:57.226 +03:00 [INF] Executed endpoint '/BotHub'
2024-02-04 18:50:57.244 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/BotHub?id=w9nUqqghp8SOI05RSJZAAg - - - 101 - - 23.9744ms
2024-02-04 18:51:02.356 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 18:51:02.357 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 18:51:02.358 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 18:51:02.359 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=hrEgu7EqaeJ67SF0upgYCQ - -
2024-02-04 18:51:02.359 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 3.8624ms
2024-02-04 18:51:02.360 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 18:51:02.365 +03:00 [INF] Executed endpoint '/BotHub'
2024-02-04 18:51:02.369 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/BotHub?id=hrEgu7EqaeJ67SF0upgYCQ - - - 101 - - 9.9825ms
2024-02-04 18:51:08.924 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 18:51:08.925 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 18:51:08.926 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 18:51:08.928 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 4.2533ms
2024-02-04 18:51:08.938 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=NKYxWjXX74cMx0owHKe42w - -
2024-02-04 18:51:08.939 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 18:51:20.401 +03:00 [INF] User profile is available. Using 'C:\Users\timar\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-04 18:51:20.538 +03:00 [INF] Default Quartz.NET properties loaded from embedded resource file
2024-02-04 18:51:20.576 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-02-04 18:51:20.579 +03:00 [INF] Quartz Scheduler created
2024-02-04 18:51:20.580 +03:00 [INF] RAMJobStore initialized.
2024-02-04 18:51:20.581 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-02-04 18:51:20.581 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-02-04 18:51:20.582 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-02-04 18:51:20.583 +03:00 [INF] JobFactory set to: TgCheckerApi.Job.QuartzJobFactory
2024-02-04 18:51:20.627 +03:00 [INF] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2024-02-04 18:51:20.706 +03:00 [INF] Now listening on: http://localhost:7256
2024-02-04 18:51:20.706 +03:00 [INF] Now listening on: http://localhost:5244
2024-02-04 18:51:20.710 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-04 18:51:20.710 +03:00 [INF] Hosting environment: Development
2024-02-04 18:51:20.711 +03:00 [INF] Content root path: C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\
2024-02-04 18:51:21.000 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 18:51:21.030 +03:00 [WRN] Failed to determine the https port for redirect.
2024-02-04 18:51:21.093 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 18:51:21.121 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 18:51:21.124 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 126.4639ms
2024-02-04 18:51:21.125 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=c_LPyzIu1l0-o2qyAnAgew - -
2024-02-04 18:51:21.131 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 18:51:21.711 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/index.html - -
2024-02-04 18:51:21.943 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/index.html - - - 200 - text/html;charset=utf-8 231.1660ms
2024-02-04 18:51:21.947 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_vs/browserLink - -
2024-02-04 18:51:21.948 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - -
2024-02-04 18:51:21.953 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - - - 200 12356 application/javascript;+charset=utf-8 5.3563ms
2024-02-04 18:51:21.963 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 15.6682ms
2024-02-04 18:51:22.000 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - -
2024-02-04 18:51:22.120 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 120.7491ms
2024-02-04 18:51:40.931 +03:00 [INF] User profile is available. Using 'C:\Users\timar\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-04 18:51:41.092 +03:00 [INF] Default Quartz.NET properties loaded from embedded resource file
2024-02-04 18:51:41.129 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-02-04 18:51:41.132 +03:00 [INF] Quartz Scheduler created
2024-02-04 18:51:41.133 +03:00 [INF] RAMJobStore initialized.
2024-02-04 18:51:41.134 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-02-04 18:51:41.134 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-02-04 18:51:41.135 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-02-04 18:51:41.136 +03:00 [INF] JobFactory set to: TgCheckerApi.Job.QuartzJobFactory
2024-02-04 18:51:41.176 +03:00 [INF] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2024-02-04 18:51:41.250 +03:00 [INF] Now listening on: http://localhost:7256
2024-02-04 18:51:41.251 +03:00 [INF] Now listening on: http://localhost:5244
2024-02-04 18:51:41.255 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-04 18:51:41.255 +03:00 [INF] Hosting environment: Development
2024-02-04 18:51:41.256 +03:00 [INF] Content root path: C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\
2024-02-04 18:51:41.762 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 18:51:41.793 +03:00 [WRN] Failed to determine the https port for redirect.
2024-02-04 18:51:41.852 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/index.html - -
2024-02-04 18:51:41.874 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 18:51:41.901 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 18:51:41.903 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=hljtS81DZyGlImQN93krYg - -
2024-02-04 18:51:41.904 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 145.5559ms
2024-02-04 18:51:41.905 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 18:51:42.080 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/index.html - - - 200 - text/html;charset=utf-8 228.4356ms
2024-02-04 18:51:42.085 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_vs/browserLink - -
2024-02-04 18:51:42.087 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - -
2024-02-04 18:51:42.093 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - - - 200 12356 application/javascript;+charset=utf-8 6.5418ms
2024-02-04 18:51:42.104 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 19.0831ms
2024-02-04 18:51:42.136 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - -
2024-02-04 18:51:42.262 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 125.3949ms
2024-02-04 18:51:51.390 +03:00 [INF] Start processing HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-04 18:51:51.400 +03:00 [INF] Sending HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-04 18:52:21.251 +03:00 [INF] User profile is available. Using 'C:\Users\timar\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-04 18:52:21.455 +03:00 [INF] Default Quartz.NET properties loaded from embedded resource file
2024-02-04 18:52:21.492 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-02-04 18:52:21.495 +03:00 [INF] Quartz Scheduler created
2024-02-04 18:52:21.496 +03:00 [INF] RAMJobStore initialized.
2024-02-04 18:52:21.498 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-02-04 18:52:21.498 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-02-04 18:52:21.499 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-02-04 18:52:21.500 +03:00 [INF] JobFactory set to: TgCheckerApi.Job.QuartzJobFactory
2024-02-04 18:52:21.539 +03:00 [INF] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2024-02-04 18:52:21.618 +03:00 [INF] Now listening on: http://localhost:7256
2024-02-04 18:52:21.619 +03:00 [INF] Now listening on: http://localhost:5244
2024-02-04 18:52:21.623 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-04 18:52:21.623 +03:00 [INF] Hosting environment: Development
2024-02-04 18:52:21.624 +03:00 [INF] Content root path: C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\
2024-02-04 18:52:22.065 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 18:52:22.096 +03:00 [WRN] Failed to determine the https port for redirect.
2024-02-04 18:52:22.154 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/index.html - -
2024-02-04 18:52:22.177 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 18:52:22.206 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 18:52:22.208 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=UeAANbBExKGHTFBpi_i-ow - -
2024-02-04 18:52:22.209 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 146.8592ms
2024-02-04 18:52:22.210 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 18:52:22.392 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/index.html - - - 200 - text/html;charset=utf-8 238.0831ms
2024-02-04 18:52:22.396 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_vs/browserLink - -
2024-02-04 18:52:22.397 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - -
2024-02-04 18:52:22.400 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - - - 200 12356 application/javascript;+charset=utf-8 3.3396ms
2024-02-04 18:52:22.411 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 15.7772ms
2024-02-04 18:52:22.447 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - -
2024-02-04 18:52:22.563 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 116.4694ms
2024-02-04 18:52:31.726 +03:00 [INF] Start processing HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-04 18:52:31.736 +03:00 [INF] Sending HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-04 18:52:39.695 +03:00 [INF] User profile is available. Using 'C:\Users\timar\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-04 18:52:39.844 +03:00 [INF] Default Quartz.NET properties loaded from embedded resource file
2024-02-04 18:52:39.885 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-02-04 18:52:39.889 +03:00 [INF] Quartz Scheduler created
2024-02-04 18:52:39.890 +03:00 [INF] RAMJobStore initialized.
2024-02-04 18:52:39.891 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-02-04 18:52:39.892 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-02-04 18:52:39.892 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-02-04 18:52:39.893 +03:00 [INF] JobFactory set to: TgCheckerApi.Job.QuartzJobFactory
2024-02-04 18:52:39.934 +03:00 [INF] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2024-02-04 18:52:40.059 +03:00 [INF] Now listening on: http://localhost:7256
2024-02-04 18:52:40.061 +03:00 [INF] Now listening on: http://localhost:5244
2024-02-04 18:52:40.064 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-04 18:52:40.064 +03:00 [INF] Hosting environment: Development
2024-02-04 18:52:40.065 +03:00 [INF] Content root path: C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\
2024-02-04 18:52:40.734 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/index.html - -
2024-02-04 18:52:40.983 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/index.html - - - 200 - text/html;charset=utf-8 251.6670ms
2024-02-04 18:52:40.986 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_vs/browserLink - -
2024-02-04 18:52:40.991 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - -
2024-02-04 18:52:40.997 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - - - 200 12356 application/javascript;+charset=utf-8 5.9470ms
2024-02-04 18:52:41.006 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 20.6679ms
2024-02-04 18:52:41.036 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - -
2024-02-04 18:52:41.153 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 116.6671ms
2024-02-04 18:52:41.289 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 18:52:41.294 +03:00 [WRN] Failed to determine the https port for redirect.
2024-02-04 18:52:41.368 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 18:52:41.382 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 18:52:41.383 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 94.6663ms
2024-02-04 18:52:41.387 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=RZABmNtR2SPvsKwHPwNCKQ - -
2024-02-04 18:52:41.391 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 18:52:50.213 +03:00 [INF] Start processing HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-04 18:52:50.224 +03:00 [INF] Sending HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-04 18:53:20.061 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Channel/80 - -
2024-02-04 18:53:20.062 +03:00 [INF] CORS policy execution successful.
2024-02-04 18:53:20.067 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.ChannelController.GetChannel (TgCheckerApi)'
2024-02-04 18:53:20.102 +03:00 [INF] Route matched with {action = "GetChannel", controller = "Channel"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TgCheckerApi.Models.GetModels.ChannelGetModel]] GetChannel(Int32) on controller TgCheckerApi.Controllers.ChannelController (TgCheckerApi).
2024-02-04 18:53:20.374 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:7256/api/Notification/UserNotifications - -
2024-02-04 18:53:20.374 +03:00 [INF] CORS policy execution successful.
2024-02-04 18:53:20.376 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:7256/api/Notification/UserNotifications - - - 204 - - 2.2510ms
2024-02-04 18:53:20.377 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification/UserNotifications - -
2024-02-04 18:53:20.377 +03:00 [INF] CORS policy execution successful.
2024-02-04 18:53:20.464 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetUserNotifications (TgCheckerApi)'
2024-02-04 18:53:20.468 +03:00 [INF] Route matched with {action = "GetUserNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetUserNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-04 18:53:23.164 +03:00 [INF] Executed DbCommand (99ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."Url", c."user"
FROM "Channel" AS c
WHERE c.id = @__p_0
LIMIT 1
2024-02-04 18:53:23.164 +03:00 [INF] Executed DbCommand (99ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "User" AS u
WHERE u.unique_key = @__uniqueKeyClaim_0
LIMIT 2
2024-02-04 18:53:23.408 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.user_id = @__user_Id_0
2024-02-04 18:53:23.455 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-04 18:53:23.482 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.BaseModels.Notification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-04 18:53:23.539 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:53:23.541 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetUserNotifications (TgCheckerApi) in 3065.3205ms
2024-02-04 18:53:23.544 +03:00 [INF] Executing ObjectResult, writing value of type 'TgCheckerApi.Models.GetModels.ChannelGetModel'.
2024-02-04 18:53:23.545 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetUserNotifications (TgCheckerApi)'
2024-02-04 18:53:23.558 +03:00 [INF] Executed action TgCheckerApi.Controllers.ChannelController.GetChannel (TgCheckerApi) in 3451.4681ms
2024-02-04 18:53:23.559 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.ChannelController.GetChannel (TgCheckerApi)'
2024-02-04 18:53:23.569 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Channel/80 - - - 200 15469 application/json;+charset=utf-8 3508.3353ms
2024-02-04 18:53:23.569 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification/UserNotifications - - - 200 524 application/json;+charset=utf-8 3192.2193ms
2024-02-04 18:53:23.659 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:7256/api/Auth - -
2024-02-04 18:53:23.661 +03:00 [INF] CORS policy execution successful.
2024-02-04 18:53:23.661 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:7256/api/Auth - - - 204 - - 2.2922ms
2024-02-04 18:53:23.663 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Auth - -
2024-02-04 18:53:23.663 +03:00 [INF] CORS policy execution successful.
2024-02-04 18:53:23.664 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 18:53:23.669 +03:00 [INF] Route matched with {action = "GetMe", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TgCheckerApi.Models.GetModels.UserProfileModel]] GetMe() on controller TgCheckerApi.Controllers.AuthController (TgCheckerApi).
2024-02-04 18:53:23.705 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Channel/Comments/80 - -
2024-02-04 18:53:23.706 +03:00 [INF] CORS policy execution successful.
2024-02-04 18:53:23.710 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.ChannelController.GetComments (TgCheckerApi)'
2024-02-04 18:53:23.714 +03:00 [INF] Route matched with {action = "GetComments", controller = "Channel"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[TgCheckerApi.Models.GetModels.CommentGetModel]]] GetComments(Int32) on controller TgCheckerApi.Controllers.ChannelController (TgCheckerApi).
2024-02-04 18:53:23.870 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__channelId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id, u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "Comment" AS c
INNER JOIN "User" AS u ON c.user_id = u.id
WHERE c.channel_id = @__channelId_0
2024-02-04 18:53:23.874 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.GetModels.CommentGetModel, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-04 18:53:23.878 +03:00 [INF] Executed action TgCheckerApi.Controllers.ChannelController.GetComments (TgCheckerApi) in 159.5286ms
2024-02-04 18:53:23.879 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.ChannelController.GetComments (TgCheckerApi)'
2024-02-04 18:53:23.880 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Channel/Comments/80 - - - 200 2 application/json;+charset=utf-8 174.4146ms
2024-02-04 18:53:23.950 +03:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2024-02-04 18:53:23.961 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.avatar, t.chat_id, t.last_update, t.notification_settings, t.telegram_id, t.unique_key, t.username, t1.id, t1.channel_id, t1.user_id, t1.id0, t1.avatar, t1.bumps, t1.description, t1.flag, t1."Hidden", t1.language, t1.last_bump, t1.members, t1.name, t1.notification_sent, t1.notifications, t1.promo_post, t1.promo_post_interval, t1.promo_post_last, t1.promo_post_sent, t1.promo_post_time, t1.telegram_id, t1."Url", t1."user", t1.id1, t1.channel, t1.tag, t1.id00, t1.text, t3.id, t3.channel_id, t3.content, t3.created_at, t3.parent_id, t3.rating, t3.user_id, t3.id0, t3.avatar, t3.bumps, t3.description, t3.flag, t3."Hidden", t3.language, t3.last_bump, t3.members, t3.name, t3.notification_sent, t3.notifications, t3.promo_post, t3.promo_post_interval, t3.promo_post_last, t3.promo_post_sent, t3.promo_post_time, t3.telegram_id, t3."Url", t3."user"
FROM (
    SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
    FROM "User" AS u
    WHERE u.unique_key = @__uniqueKeyClaim_0
    LIMIT 2
) AS t
LEFT JOIN (
    SELECT c.id, c.channel_id, c.user_id, c0.id AS id0, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."Url", c0."user", t0.id AS id1, t0.channel, t0.tag, t0.id0 AS id00, t0.text
    FROM "ChannelAccess" AS c
    LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
    LEFT JOIN (
        SELECT c1.id, c1.channel, c1.tag, t2.id AS id0, t2.text
        FROM "ChannelHasTag" AS c1
        LEFT JOIN "Tag" AS t2 ON c1.tag = t2.id
    ) AS t0 ON c0.id = t0.channel
) AS t1 ON t.id = t1.user_id
LEFT JOIN (
    SELECT c2.id, c2.channel_id, c2.content, c2.created_at, c2.parent_id, c2.rating, c2.user_id, c3.id AS id0, c3.avatar, c3.bumps, c3.description, c3.flag, c3."Hidden", c3.language, c3.last_bump, c3.members, c3.name, c3.notification_sent, c3.notifications, c3.promo_post, c3.promo_post_interval, c3.promo_post_last, c3.promo_post_sent, c3.promo_post_time, c3.telegram_id, c3."Url", c3."user"
    FROM "Comment" AS c2
    INNER JOIN "Channel" AS c3 ON c2.channel_id = c3.id
) AS t3 ON t.id = t3.user_id
ORDER BY t.id, t1.id, t1.id0, t1.id1, t1.id00, t3.id
2024-02-04 18:53:24.045 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:53:24.052 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:53:24.060 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:53:24.067 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 18:53:24.100 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 18:53:24.221 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 18:53:24.264 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 18:53:24.304 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 18:53:24.311 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:53:24.313 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:53:24.317 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:53:24.322 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 18:53:24.327 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 18:53:24.331 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 18:53:24.358 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 18:53:24.362 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 18:53:24.365 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:53:24.370 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:53:24.373 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:53:24.376 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 18:53:24.379 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 18:53:24.385 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 18:53:24.388 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 18:53:24.392 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 18:53:24.394 +03:00 [INF] Executing OkObjectResult, writing value of type 'TgCheckerApi.Models.GetModels.UserProfileModel'.
2024-02-04 18:53:24.402 +03:00 [INF] Executed action TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi) in 731.8709ms
2024-02-04 18:53:24.403 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Auth - -
2024-02-04 18:53:24.403 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 18:53:24.404 +03:00 [INF] CORS policy execution successful.
2024-02-04 18:53:24.406 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Auth - - - 200 25324 application/json;+charset=utf-8 742.7959ms
2024-02-04 18:53:24.407 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 18:53:24.409 +03:00 [INF] Route matched with {action = "GetMe", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TgCheckerApi.Models.GetModels.UserProfileModel]] GetMe() on controller TgCheckerApi.Controllers.AuthController (TgCheckerApi).
2024-02-04 18:53:24.417 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.avatar, t.chat_id, t.last_update, t.notification_settings, t.telegram_id, t.unique_key, t.username, t1.id, t1.channel_id, t1.user_id, t1.id0, t1.avatar, t1.bumps, t1.description, t1.flag, t1."Hidden", t1.language, t1.last_bump, t1.members, t1.name, t1.notification_sent, t1.notifications, t1.promo_post, t1.promo_post_interval, t1.promo_post_last, t1.promo_post_sent, t1.promo_post_time, t1.telegram_id, t1."Url", t1."user", t1.id1, t1.channel, t1.tag, t1.id00, t1.text, t3.id, t3.channel_id, t3.content, t3.created_at, t3.parent_id, t3.rating, t3.user_id, t3.id0, t3.avatar, t3.bumps, t3.description, t3.flag, t3."Hidden", t3.language, t3.last_bump, t3.members, t3.name, t3.notification_sent, t3.notifications, t3.promo_post, t3.promo_post_interval, t3.promo_post_last, t3.promo_post_sent, t3.promo_post_time, t3.telegram_id, t3."Url", t3."user"
FROM (
    SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
    FROM "User" AS u
    WHERE u.unique_key = @__uniqueKeyClaim_0
    LIMIT 2
) AS t
LEFT JOIN (
    SELECT c.id, c.channel_id, c.user_id, c0.id AS id0, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."Url", c0."user", t0.id AS id1, t0.channel, t0.tag, t0.id0 AS id00, t0.text
    FROM "ChannelAccess" AS c
    LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
    LEFT JOIN (
        SELECT c1.id, c1.channel, c1.tag, t2.id AS id0, t2.text
        FROM "ChannelHasTag" AS c1
        LEFT JOIN "Tag" AS t2 ON c1.tag = t2.id
    ) AS t0 ON c0.id = t0.channel
) AS t1 ON t.id = t1.user_id
LEFT JOIN (
    SELECT c2.id, c2.channel_id, c2.content, c2.created_at, c2.parent_id, c2.rating, c2.user_id, c3.id AS id0, c3.avatar, c3.bumps, c3.description, c3.flag, c3."Hidden", c3.language, c3.last_bump, c3.members, c3.name, c3.notification_sent, c3.notifications, c3.promo_post, c3.promo_post_interval, c3.promo_post_last, c3.promo_post_sent, c3.promo_post_time, c3.telegram_id, c3."Url", c3."user"
    FROM "Comment" AS c2
    INNER JOIN "Channel" AS c3 ON c2.channel_id = c3.id
) AS t3 ON t.id = t3.user_id
ORDER BY t.id, t1.id, t1.id0, t1.id1, t1.id00, t3.id
2024-02-04 18:53:24.425 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:53:24.432 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:53:24.436 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:53:24.439 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 18:53:24.442 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 18:53:24.447 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 18:53:24.450 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 18:53:24.454 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 18:53:24.457 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:53:24.462 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:53:24.465 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:53:24.468 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 18:53:24.471 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 18:53:24.475 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 18:53:24.480 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 18:53:24.483 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 18:53:24.485 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:53:24.489 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:53:24.493 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:53:24.496 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 18:53:24.499 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 18:53:24.503 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 18:53:24.505 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 18:53:24.509 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 18:53:24.511 +03:00 [INF] Executing OkObjectResult, writing value of type 'TgCheckerApi.Models.GetModels.UserProfileModel'.
2024-02-04 18:53:24.513 +03:00 [INF] Executed action TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi) in 101.8493ms
2024-02-04 18:53:24.514 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 18:53:24.514 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Auth - - - 200 25324 application/json;+charset=utf-8 111.2447ms
2024-02-04 18:53:24.548 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:7256/api/Bot/getDailyViewsByChannel - -
2024-02-04 18:53:24.549 +03:00 [INF] CORS policy execution successful.
2024-02-04 18:53:24.551 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:7256/api/Bot/getDailyViewsByChannel - - - 204 - - 2.3071ms
2024-02-04 18:53:24.552 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/api/Bot/getDailyViewsByChannel application/json;+charset=utf-8 34
2024-02-04 18:53:24.553 +03:00 [INF] CORS policy execution successful.
2024-02-04 18:53:24.554 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.BotController.CallGetDailyViewsByChannel (TgCheckerApi)'
2024-02-04 18:53:24.558 +03:00 [INF] Route matched with {action = "CallGetDailyViewsByChannel", controller = "Bot"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CallGetDailyViewsByChannel(DailyViewsRequest) on controller TgCheckerApi.Controllers.BotController (TgCheckerApi).
2024-02-04 18:53:24.626 +03:00 [INF] Starting CallGetDailyViewsByChannel method for ChannelId: 80
2024-02-04 18:53:24.630 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."Url", c."user"
FROM "Channel" AS c
WHERE c.id = @__p_0
LIMIT 1
2024-02-04 18:53:24.684 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__dailyViewsRequest_ChannelId_0='?' (DbType = Int32), @__startDate_1='?' (DbType = DateTime), @__endDate_2='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT v.id, v.date, v.last_message_id, v.sheet, v.updated, v.views
FROM "Channel" AS c
INNER JOIN "StatisticsSheet" AS s ON c.id = s.channel_id
INNER JOIN "ViewsRecord" AS v ON s.id = v.sheet
WHERE c.id = @__dailyViewsRequest_ChannelId_0 AND v.date >= @__startDate_1 AND v.date <= @__endDate_2
ORDER BY v.date
2024-02-04 18:53:24.699 +03:00 [INF] Starting IsUpdateRequiredForChannel method.
2024-02-04 18:53:24.700 +03:00 [INF] Parameters: ChannelId=80, NumberOfDays=31
2024-02-04 18:53:24.700 +03:00 [INF] Outdated threshold set to 1 minutes.
2024-02-04 18:53:24.701 +03:00 [INF] Checking records from 1/4/2024 12:00:00 AM to 2/4/2024 12:00:00 AM.
2024-02-04 18:53:24.708 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__dailyViewsRequest_ChannelId_0='?' (DbType = Int32), @__startDate_1='?' (DbType = DateTime), @__today_2='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT v.id, v.date, v.last_message_id, v.sheet, v.updated, v.views
FROM "Channel" AS c
INNER JOIN "StatisticsSheet" AS s ON c.id = s.channel_id
INNER JOIN "ViewsRecord" AS v ON s.id = v.sheet
WHERE c.id = @__dailyViewsRequest_ChannelId_0 AND v.date >= @__startDate_1 AND v.date <= @__today_2
2024-02-04 18:53:24.711 +03:00 [INF] 33 records found in date range.
2024-02-04 18:53:24.712 +03:00 [INF] Update required: True
2024-02-04 18:53:24.713 +03:00 [INF] Data is complete but outdated for ChannelId: 80. Initiating background update.
2024-02-04 18:53:24.724 +03:00 [INF] Received request for getDailyViewsByChannel. Request hash: c6767b8ee142f671c867e1e027dd0a6208f626fc9642fe406290e52e2784b620
2024-02-04 18:53:24.753 +03:00 [INF] Returning data for ChannelId: 80 with 32 view counts
2024-02-04 18:53:24.755 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.Int32, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-02-04 18:53:24.757 +03:00 [INF] Executed action TgCheckerApi.Controllers.BotController.CallGetDailyViewsByChannel (TgCheckerApi) in 195.6778ms
2024-02-04 18:53:24.758 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.BotController.CallGetDailyViewsByChannel (TgCheckerApi)'
2024-02-04 18:53:24.760 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/api/Bot/getDailyViewsByChannel application/json;+charset=utf-8 34 - 200 129 application/json;+charset=utf-8 208.5201ms
2024-02-04 18:53:54.761 +03:00 [WRN] New task timed out. Hash: c6767b8ee142f671c867e1e027dd0a6208f626fc9642fe406290e52e2784b620
2024-02-04 18:53:54.762 +03:00 [WRN] Invalid or no response from WebSocket service for ChannelId: 80
2024-02-04 18:54:30.306 +03:00 [ERR] Error occurred executing UpdateSubscribersJob via HTTP request.
System.Threading.Tasks.TaskCanceledException: The request was canceled due to the configured HttpClient.Timeout of 100 seconds elapsing.
 ---> System.TimeoutException: The operation was canceled.
 ---> System.Threading.Tasks.TaskCanceledException: The operation was canceled.
 ---> System.IO.IOException: Unable to read data from the transport connection: The I/O operation has been aborted because of either a thread exit or an application request..
 ---> System.Net.Sockets.SocketException (995): The I/O operation has been aborted because of either a thread exit or an application request.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Security.SslStream.EnsureFullTlsFrameAsync[TIOAdapter](TIOAdapter adapter)
   at System.Net.Security.SslStream.ReadAsyncInternal[TIOAdapter](TIOAdapter adapter, Memory`1 buffer)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsyncCore(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsyncCore(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   --- End of inner exception stack trace ---
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpClient.HandleFailure(Exception e, Boolean telemetryStarted, HttpResponseMessage response, CancellationTokenSource cts, CancellationToken cancellationToken, CancellationTokenSource pendingRequestsCts)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at TgCheckerApi.Job.UpdateSubscribersJob.Execute(IJobExecutionContext context) in C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\Job\UpdateSubscribersJob.cs:line 49
2024-02-04 18:55:20.648 +03:00 [INF] Executed endpoint '/BotHub'
2024-02-04 18:55:20.650 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/BotHub?id=RZABmNtR2SPvsKwHPwNCKQ - - - 101 - - 159263.3979ms
2024-02-04 18:55:24.107 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 18:55:24.107 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 18:55:24.108 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 18:55:24.109 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 2.0704ms
2024-02-04 18:55:24.123 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=8NdBpeuEgSZVCVl4uf6OQw - -
2024-02-04 18:55:24.123 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 18:55:31.950 +03:00 [INF] User profile is available. Using 'C:\Users\timar\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-04 18:55:32.098 +03:00 [INF] Default Quartz.NET properties loaded from embedded resource file
2024-02-04 18:55:32.134 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-02-04 18:55:32.138 +03:00 [INF] Quartz Scheduler created
2024-02-04 18:55:32.139 +03:00 [INF] RAMJobStore initialized.
2024-02-04 18:55:32.140 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-02-04 18:55:32.141 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-02-04 18:55:32.142 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-02-04 18:55:32.143 +03:00 [INF] JobFactory set to: TgCheckerApi.Job.QuartzJobFactory
2024-02-04 18:55:32.183 +03:00 [INF] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2024-02-04 18:55:32.262 +03:00 [INF] Now listening on: http://localhost:7256
2024-02-04 18:55:32.264 +03:00 [INF] Now listening on: http://localhost:5244
2024-02-04 18:55:32.274 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-04 18:55:32.276 +03:00 [INF] Hosting environment: Development
2024-02-04 18:55:32.277 +03:00 [INF] Content root path: C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\
2024-02-04 18:55:35.676 +03:00 [INF] User profile is available. Using 'C:\Users\timar\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-04 18:55:35.833 +03:00 [INF] Default Quartz.NET properties loaded from embedded resource file
2024-02-04 18:55:35.877 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-02-04 18:55:35.884 +03:00 [INF] Quartz Scheduler created
2024-02-04 18:55:35.885 +03:00 [INF] RAMJobStore initialized.
2024-02-04 18:55:35.886 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-02-04 18:55:35.888 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-02-04 18:55:35.889 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-02-04 18:55:35.890 +03:00 [INF] JobFactory set to: TgCheckerApi.Job.QuartzJobFactory
2024-02-04 18:55:35.934 +03:00 [INF] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2024-02-04 18:55:36.018 +03:00 [INF] Now listening on: http://localhost:7256
2024-02-04 18:55:36.019 +03:00 [INF] Now listening on: http://localhost:5244
2024-02-04 18:55:36.023 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-04 18:55:36.024 +03:00 [INF] Hosting environment: Development
2024-02-04 18:55:36.025 +03:00 [INF] Content root path: C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\
2024-02-04 18:55:36.198 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 18:55:36.241 +03:00 [WRN] Failed to determine the https port for redirect.
2024-02-04 18:55:36.289 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/index.html - -
2024-02-04 18:55:36.317 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 18:55:36.343 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 18:55:36.345 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=NaBSk2bGd6W3FE57DT9Heg - -
2024-02-04 18:55:36.347 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 151.5681ms
2024-02-04 18:55:36.347 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 18:55:36.530 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/index.html - - - 200 - text/html;charset=utf-8 241.3062ms
2024-02-04 18:55:36.533 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_vs/browserLink - -
2024-02-04 18:55:36.535 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - -
2024-02-04 18:55:36.542 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - - - 200 12356 application/javascript;+charset=utf-8 6.9101ms
2024-02-04 18:55:36.557 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 23.1806ms
2024-02-04 18:55:36.623 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - -
2024-02-04 18:55:36.742 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 118.7818ms
2024-02-04 18:55:55.188 +03:00 [INF] User profile is available. Using 'C:\Users\timar\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-04 18:55:55.356 +03:00 [INF] Default Quartz.NET properties loaded from embedded resource file
2024-02-04 18:55:55.393 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-02-04 18:55:55.397 +03:00 [INF] Quartz Scheduler created
2024-02-04 18:55:55.398 +03:00 [INF] RAMJobStore initialized.
2024-02-04 18:55:55.399 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-02-04 18:55:55.400 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-02-04 18:55:55.401 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-02-04 18:55:55.403 +03:00 [INF] JobFactory set to: TgCheckerApi.Job.QuartzJobFactory
2024-02-04 18:55:55.447 +03:00 [INF] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2024-02-04 18:55:55.525 +03:00 [INF] Now listening on: http://localhost:7256
2024-02-04 18:55:55.527 +03:00 [INF] Now listening on: http://localhost:5244
2024-02-04 18:55:55.531 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-04 18:55:55.532 +03:00 [INF] Hosting environment: Development
2024-02-04 18:55:55.533 +03:00 [INF] Content root path: C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\
2024-02-04 18:55:55.983 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 18:55:56.015 +03:00 [WRN] Failed to determine the https port for redirect.
2024-02-04 18:55:56.087 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/index.html - -
2024-02-04 18:55:56.100 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 18:55:56.134 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 18:55:56.136 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=LtR8IiS5B5sIMVF-_0gRCA - -
2024-02-04 18:55:56.137 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 157.5500ms
2024-02-04 18:55:56.138 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 18:55:56.325 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/index.html - - - 200 - text/html;charset=utf-8 237.2540ms
2024-02-04 18:55:56.328 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_vs/browserLink - -
2024-02-04 18:55:56.329 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - -
2024-02-04 18:55:56.334 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - - - 200 12356 application/javascript;+charset=utf-8 5.2749ms
2024-02-04 18:55:56.346 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 18.4151ms
2024-02-04 18:55:56.416 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - -
2024-02-04 18:55:56.525 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 109.5293ms
2024-02-04 18:56:05.047 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Channel/80 - -
2024-02-04 18:56:05.050 +03:00 [INF] CORS policy execution successful.
2024-02-04 18:56:05.054 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.ChannelController.GetChannel (TgCheckerApi)'
2024-02-04 18:56:05.089 +03:00 [INF] Route matched with {action = "GetChannel", controller = "Channel"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TgCheckerApi.Models.GetModels.ChannelGetModel]] GetChannel(Int32) on controller TgCheckerApi.Controllers.ChannelController (TgCheckerApi).
2024-02-04 18:56:05.345 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:7256/api/Notification/UserNotifications - -
2024-02-04 18:56:05.346 +03:00 [INF] CORS policy execution successful.
2024-02-04 18:56:05.348 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:7256/api/Notification/UserNotifications - - - 204 - - 3.6406ms
2024-02-04 18:56:05.350 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification/UserNotifications - -
2024-02-04 18:56:05.351 +03:00 [INF] CORS policy execution successful.
2024-02-04 18:56:05.444 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetUserNotifications (TgCheckerApi)'
2024-02-04 18:56:05.448 +03:00 [INF] Route matched with {action = "GetUserNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetUserNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-04 18:56:05.691 +03:00 [INF] Start processing HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-04 18:56:05.702 +03:00 [INF] Sending HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-04 18:56:08.208 +03:00 [INF] Executed DbCommand (111ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "User" AS u
WHERE u.unique_key = @__uniqueKeyClaim_0
LIMIT 2
2024-02-04 18:56:08.208 +03:00 [INF] Executed DbCommand (112ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."Url", c."user"
FROM "Channel" AS c
WHERE c.id = @__p_0
LIMIT 1
2024-02-04 18:56:08.459 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.user_id = @__user_Id_0
2024-02-04 18:56:08.504 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-04 18:56:08.533 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.BaseModels.Notification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-04 18:56:08.585 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:56:08.590 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetUserNotifications (TgCheckerApi) in 3132.5194ms
2024-02-04 18:56:08.591 +03:00 [INF] Executing ObjectResult, writing value of type 'TgCheckerApi.Models.GetModels.ChannelGetModel'.
2024-02-04 18:56:08.593 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetUserNotifications (TgCheckerApi)'
2024-02-04 18:56:08.608 +03:00 [INF] Executed action TgCheckerApi.Controllers.ChannelController.GetChannel (TgCheckerApi) in 3510.6931ms
2024-02-04 18:56:08.609 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.ChannelController.GetChannel (TgCheckerApi)'
2024-02-04 18:56:08.618 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification/UserNotifications - - - 200 524 application/json;+charset=utf-8 3268.7579ms
2024-02-04 18:56:08.619 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Channel/80 - - - 200 15469 application/json;+charset=utf-8 3571.1051ms
2024-02-04 18:56:08.726 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:7256/api/Auth - -
2024-02-04 18:56:08.730 +03:00 [INF] CORS policy execution successful.
2024-02-04 18:56:08.731 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:7256/api/Auth - - - 204 - - 4.7443ms
2024-02-04 18:56:08.732 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Auth - -
2024-02-04 18:56:08.733 +03:00 [INF] CORS policy execution successful.
2024-02-04 18:56:08.734 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 18:56:08.738 +03:00 [INF] Route matched with {action = "GetMe", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TgCheckerApi.Models.GetModels.UserProfileModel]] GetMe() on controller TgCheckerApi.Controllers.AuthController (TgCheckerApi).
2024-02-04 18:56:08.781 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Channel/Comments/80 - -
2024-02-04 18:56:08.782 +03:00 [INF] CORS policy execution successful.
2024-02-04 18:56:08.786 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.ChannelController.GetComments (TgCheckerApi)'
2024-02-04 18:56:08.793 +03:00 [INF] Route matched with {action = "GetComments", controller = "Channel"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[TgCheckerApi.Models.GetModels.CommentGetModel]]] GetComments(Int32) on controller TgCheckerApi.Controllers.ChannelController (TgCheckerApi).
2024-02-04 18:56:08.978 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__channelId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id, u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "Comment" AS c
INNER JOIN "User" AS u ON c.user_id = u.id
WHERE c.channel_id = @__channelId_0
2024-02-04 18:56:08.983 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.GetModels.CommentGetModel, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-04 18:56:08.988 +03:00 [INF] Executed action TgCheckerApi.Controllers.ChannelController.GetComments (TgCheckerApi) in 190.9683ms
2024-02-04 18:56:08.989 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.ChannelController.GetComments (TgCheckerApi)'
2024-02-04 18:56:08.991 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Channel/Comments/80 - - - 200 2 application/json;+charset=utf-8 209.5580ms
2024-02-04 18:56:09.075 +03:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2024-02-04 18:56:09.088 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.avatar, t.chat_id, t.last_update, t.notification_settings, t.telegram_id, t.unique_key, t.username, t1.id, t1.channel_id, t1.user_id, t1.id0, t1.avatar, t1.bumps, t1.description, t1.flag, t1."Hidden", t1.language, t1.last_bump, t1.members, t1.name, t1.notification_sent, t1.notifications, t1.promo_post, t1.promo_post_interval, t1.promo_post_last, t1.promo_post_sent, t1.promo_post_time, t1.telegram_id, t1."Url", t1."user", t1.id1, t1.channel, t1.tag, t1.id00, t1.text, t3.id, t3.channel_id, t3.content, t3.created_at, t3.parent_id, t3.rating, t3.user_id, t3.id0, t3.avatar, t3.bumps, t3.description, t3.flag, t3."Hidden", t3.language, t3.last_bump, t3.members, t3.name, t3.notification_sent, t3.notifications, t3.promo_post, t3.promo_post_interval, t3.promo_post_last, t3.promo_post_sent, t3.promo_post_time, t3.telegram_id, t3."Url", t3."user"
FROM (
    SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
    FROM "User" AS u
    WHERE u.unique_key = @__uniqueKeyClaim_0
    LIMIT 2
) AS t
LEFT JOIN (
    SELECT c.id, c.channel_id, c.user_id, c0.id AS id0, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."Url", c0."user", t0.id AS id1, t0.channel, t0.tag, t0.id0 AS id00, t0.text
    FROM "ChannelAccess" AS c
    LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
    LEFT JOIN (
        SELECT c1.id, c1.channel, c1.tag, t2.id AS id0, t2.text
        FROM "ChannelHasTag" AS c1
        LEFT JOIN "Tag" AS t2 ON c1.tag = t2.id
    ) AS t0 ON c0.id = t0.channel
) AS t1 ON t.id = t1.user_id
LEFT JOIN (
    SELECT c2.id, c2.channel_id, c2.content, c2.created_at, c2.parent_id, c2.rating, c2.user_id, c3.id AS id0, c3.avatar, c3.bumps, c3.description, c3.flag, c3."Hidden", c3.language, c3.last_bump, c3.members, c3.name, c3.notification_sent, c3.notifications, c3.promo_post, c3.promo_post_interval, c3.promo_post_last, c3.promo_post_sent, c3.promo_post_time, c3.telegram_id, c3."Url", c3."user"
    FROM "Comment" AS c2
    INNER JOIN "Channel" AS c3 ON c2.channel_id = c3.id
) AS t3 ON t.id = t3.user_id
ORDER BY t.id, t1.id, t1.id0, t1.id1, t1.id00, t3.id
2024-02-04 18:56:09.183 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:56:09.191 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:56:09.202 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:56:09.212 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 18:56:09.254 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 18:56:09.384 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 18:56:09.427 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 18:56:09.479 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 18:56:09.486 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:56:09.491 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:56:09.494 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:56:09.497 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 18:56:09.504 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 18:56:09.508 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 18:56:09.534 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 18:56:09.539 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 18:56:09.543 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:56:09.549 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:56:09.553 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:56:09.557 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 18:56:09.561 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 18:56:09.567 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 18:56:09.571 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 18:56:09.574 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 18:56:09.577 +03:00 [INF] Executing OkObjectResult, writing value of type 'TgCheckerApi.Models.GetModels.UserProfileModel'.
2024-02-04 18:56:09.587 +03:00 [INF] Executed action TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi) in 846.0578ms
2024-02-04 18:56:09.588 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Auth - -
2024-02-04 18:56:09.588 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 18:56:09.589 +03:00 [INF] CORS policy execution successful.
2024-02-04 18:56:09.590 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Auth - - - 200 25324 application/json;+charset=utf-8 858.3679ms
2024-02-04 18:56:09.591 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 18:56:09.595 +03:00 [INF] Route matched with {action = "GetMe", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TgCheckerApi.Models.GetModels.UserProfileModel]] GetMe() on controller TgCheckerApi.Controllers.AuthController (TgCheckerApi).
2024-02-04 18:56:09.601 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.avatar, t.chat_id, t.last_update, t.notification_settings, t.telegram_id, t.unique_key, t.username, t1.id, t1.channel_id, t1.user_id, t1.id0, t1.avatar, t1.bumps, t1.description, t1.flag, t1."Hidden", t1.language, t1.last_bump, t1.members, t1.name, t1.notification_sent, t1.notifications, t1.promo_post, t1.promo_post_interval, t1.promo_post_last, t1.promo_post_sent, t1.promo_post_time, t1.telegram_id, t1."Url", t1."user", t1.id1, t1.channel, t1.tag, t1.id00, t1.text, t3.id, t3.channel_id, t3.content, t3.created_at, t3.parent_id, t3.rating, t3.user_id, t3.id0, t3.avatar, t3.bumps, t3.description, t3.flag, t3."Hidden", t3.language, t3.last_bump, t3.members, t3.name, t3.notification_sent, t3.notifications, t3.promo_post, t3.promo_post_interval, t3.promo_post_last, t3.promo_post_sent, t3.promo_post_time, t3.telegram_id, t3."Url", t3."user"
FROM (
    SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
    FROM "User" AS u
    WHERE u.unique_key = @__uniqueKeyClaim_0
    LIMIT 2
) AS t
LEFT JOIN (
    SELECT c.id, c.channel_id, c.user_id, c0.id AS id0, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."Url", c0."user", t0.id AS id1, t0.channel, t0.tag, t0.id0 AS id00, t0.text
    FROM "ChannelAccess" AS c
    LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
    LEFT JOIN (
        SELECT c1.id, c1.channel, c1.tag, t2.id AS id0, t2.text
        FROM "ChannelHasTag" AS c1
        LEFT JOIN "Tag" AS t2 ON c1.tag = t2.id
    ) AS t0 ON c0.id = t0.channel
) AS t1 ON t.id = t1.user_id
LEFT JOIN (
    SELECT c2.id, c2.channel_id, c2.content, c2.created_at, c2.parent_id, c2.rating, c2.user_id, c3.id AS id0, c3.avatar, c3.bumps, c3.description, c3.flag, c3."Hidden", c3.language, c3.last_bump, c3.members, c3.name, c3.notification_sent, c3.notifications, c3.promo_post, c3.promo_post_interval, c3.promo_post_last, c3.promo_post_sent, c3.promo_post_time, c3.telegram_id, c3."Url", c3."user"
    FROM "Comment" AS c2
    INNER JOIN "Channel" AS c3 ON c2.channel_id = c3.id
) AS t3 ON t.id = t3.user_id
ORDER BY t.id, t1.id, t1.id0, t1.id1, t1.id00, t3.id
2024-02-04 18:56:09.609 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:56:09.619 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:56:09.623 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:56:09.627 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 18:56:09.631 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 18:56:09.635 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 18:56:09.638 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 18:56:09.643 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 18:56:09.646 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:56:09.649 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:56:09.652 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:56:09.657 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 18:56:09.660 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 18:56:09.664 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 18:56:09.667 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 18:56:09.670 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 18:56:09.681 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:56:09.685 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:56:09.690 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:56:09.700 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 18:56:09.711 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 18:56:09.716 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 18:56:09.724 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 18:56:09.728 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 18:56:09.730 +03:00 [INF] Executing OkObjectResult, writing value of type 'TgCheckerApi.Models.GetModels.UserProfileModel'.
2024-02-04 18:56:09.732 +03:00 [INF] Executed action TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi) in 134.5457ms
2024-02-04 18:56:09.733 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 18:56:09.736 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Auth - - - 200 25324 application/json;+charset=utf-8 148.0390ms
2024-02-04 18:56:09.767 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:7256/api/Bot/getDailyViewsByChannel - -
2024-02-04 18:56:09.768 +03:00 [INF] CORS policy execution successful.
2024-02-04 18:56:09.770 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:7256/api/Bot/getDailyViewsByChannel - - - 204 - - 2.4036ms
2024-02-04 18:56:09.772 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/api/Bot/getDailyViewsByChannel application/json;+charset=utf-8 34
2024-02-04 18:56:09.773 +03:00 [INF] CORS policy execution successful.
2024-02-04 18:56:09.774 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.BotController.CallGetDailyViewsByChannel (TgCheckerApi)'
2024-02-04 18:56:09.778 +03:00 [INF] Route matched with {action = "CallGetDailyViewsByChannel", controller = "Bot"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CallGetDailyViewsByChannel(DailyViewsRequest) on controller TgCheckerApi.Controllers.BotController (TgCheckerApi).
2024-02-04 18:56:09.844 +03:00 [INF] Starting CallGetDailyViewsByChannel method for ChannelId: 80
2024-02-04 18:56:09.847 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."Url", c."user"
FROM "Channel" AS c
WHERE c.id = @__p_0
LIMIT 1
2024-02-04 18:56:09.895 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__dailyViewsRequest_ChannelId_0='?' (DbType = Int32), @__startDate_1='?' (DbType = DateTime), @__endDate_2='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT v.id, v.date, v.last_message_id, v.sheet, v.updated, v.views
FROM "Channel" AS c
INNER JOIN "StatisticsSheet" AS s ON c.id = s.channel_id
INNER JOIN "ViewsRecord" AS v ON s.id = v.sheet
WHERE c.id = @__dailyViewsRequest_ChannelId_0 AND v.date >= @__startDate_1 AND v.date <= @__endDate_2
ORDER BY v.date
2024-02-04 18:56:09.913 +03:00 [INF] Starting IsUpdateRequiredForChannel method.
2024-02-04 18:56:09.914 +03:00 [INF] Parameters: ChannelId=80, NumberOfDays=31
2024-02-04 18:56:09.915 +03:00 [INF] Outdated threshold set to 1 minutes.
2024-02-04 18:56:09.916 +03:00 [INF] Checking records from 1/4/2024 12:00:00 AM to 2/4/2024 12:00:00 AM.
2024-02-04 18:56:09.923 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__dailyViewsRequest_ChannelId_0='?' (DbType = Int32), @__startDate_1='?' (DbType = DateTime), @__today_2='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT v.id, v.date, v.last_message_id, v.sheet, v.updated, v.views
FROM "Channel" AS c
INNER JOIN "StatisticsSheet" AS s ON c.id = s.channel_id
INNER JOIN "ViewsRecord" AS v ON s.id = v.sheet
WHERE c.id = @__dailyViewsRequest_ChannelId_0 AND v.date >= @__startDate_1 AND v.date <= @__today_2
2024-02-04 18:56:09.930 +03:00 [INF] 33 records found in date range.
2024-02-04 18:56:09.931 +03:00 [INF] Update required: True
2024-02-04 18:56:09.931 +03:00 [INF] Data is complete but outdated for ChannelId: 80. Initiating background update.
2024-02-04 18:56:09.942 +03:00 [INF] Received request for getDailyViewsByChannel. Request hash: c6767b8ee142f671c867e1e027dd0a6208f626fc9642fe406290e52e2784b620
2024-02-04 18:56:09.971 +03:00 [INF] Returning data for ChannelId: 80 with 32 view counts
2024-02-04 18:56:09.973 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.Int32, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-02-04 18:56:09.975 +03:00 [INF] Executed action TgCheckerApi.Controllers.BotController.CallGetDailyViewsByChannel (TgCheckerApi) in 194.4763ms
2024-02-04 18:56:09.976 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.BotController.CallGetDailyViewsByChannel (TgCheckerApi)'
2024-02-04 18:56:09.978 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/api/Bot/getDailyViewsByChannel application/json;+charset=utf-8 34 - 200 129 application/json;+charset=utf-8 206.7159ms
2024-02-04 18:56:39.986 +03:00 [WRN] New task timed out. Hash: c6767b8ee142f671c867e1e027dd0a6208f626fc9642fe406290e52e2784b620
2024-02-04 18:56:39.987 +03:00 [WRN] Invalid or no response from WebSocket service for ChannelId: 80
2024-02-04 18:57:03.429 +03:00 [ERR] Failed to invoke hub method 'ReceiveStream'.
System.OperationCanceledException: The underlying connection was closed.
   at System.Threading.Channels.AsyncOperation`1.GetResult(Int16 token)
   at System.Threading.Channels.ChannelReader`1.ReadAllAsync(CancellationToken cancellationToken)+MoveNext()
   at System.Threading.Channels.ChannelReader`1.ReadAllAsync(CancellationToken cancellationToken)+System.Threading.Tasks.Sources.IValueTaskSource<System.Boolean>.GetResult()
   at TgCheckerApi.Websockets.BotHub.ReceiveStream(IAsyncEnumerable`1 stream, String param) in C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\Websockets\BotHub.cs:line 39
   at TgCheckerApi.Websockets.BotHub.ReceiveStream(IAsyncEnumerable`1 stream, String param) in C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\Websockets\BotHub.cs:line 39
   at Microsoft.AspNetCore.SignalR.Internal.DefaultHubDispatcher`1.ExecuteMethod(ObjectMethodExecutor methodExecutor, Hub hub, Object[] arguments)
   at Microsoft.AspNetCore.SignalR.Internal.DefaultHubDispatcher`1.<Invoke>g__ExecuteInvocation|16_0(DefaultHubDispatcher`1 dispatcher, ObjectMethodExecutor methodExecutor, THub hub, Object[] arguments, AsyncServiceScope scope, IHubActivator`1 hubActivator, HubConnectionContext connection, HubMethodInvocationMessage hubMethodInvocationMessage, Boolean isStreamCall)
2024-02-04 18:57:03.432 +03:00 [INF] Executed endpoint '/BotHub'
2024-02-04 18:57:03.467 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/BotHub?id=LtR8IiS5B5sIMVF-_0gRCA - - - 101 - - 67331.0673ms
2024-02-04 18:57:06.269 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 18:57:06.270 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 18:57:06.272 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 18:57:06.273 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 4.5131ms
2024-02-04 18:57:06.285 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=MUwdn5148T1YJikP9jJJNA - -
2024-02-04 18:57:06.286 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 18:57:12.711 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Channel/80 - -
2024-02-04 18:57:12.712 +03:00 [INF] CORS policy execution successful.
2024-02-04 18:57:12.713 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.ChannelController.GetChannel (TgCheckerApi)'
2024-02-04 18:57:12.714 +03:00 [INF] Route matched with {action = "GetChannel", controller = "Channel"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TgCheckerApi.Models.GetModels.ChannelGetModel]] GetChannel(Int32) on controller TgCheckerApi.Controllers.ChannelController (TgCheckerApi).
2024-02-04 18:57:12.719 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."Url", c."user"
FROM "Channel" AS c
WHERE c.id = @__p_0
LIMIT 1
2024-02-04 18:57:12.725 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-04 18:57:12.728 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:57:12.730 +03:00 [INF] Executing ObjectResult, writing value of type 'TgCheckerApi.Models.GetModels.ChannelGetModel'.
2024-02-04 18:57:12.734 +03:00 [INF] Executed action TgCheckerApi.Controllers.ChannelController.GetChannel (TgCheckerApi) in 18.5791ms
2024-02-04 18:57:12.735 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.ChannelController.GetChannel (TgCheckerApi)'
2024-02-04 18:57:12.739 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Channel/80 - - - 200 15469 application/json;+charset=utf-8 27.2641ms
2024-02-04 18:57:13.126 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Channel/Comments/80 - -
2024-02-04 18:57:13.128 +03:00 [INF] CORS policy execution successful.
2024-02-04 18:57:13.130 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.ChannelController.GetComments (TgCheckerApi)'
2024-02-04 18:57:13.131 +03:00 [INF] Route matched with {action = "GetComments", controller = "Channel"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[TgCheckerApi.Models.GetModels.CommentGetModel]]] GetComments(Int32) on controller TgCheckerApi.Controllers.ChannelController (TgCheckerApi).
2024-02-04 18:57:13.135 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__channelId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id, u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "Comment" AS c
INNER JOIN "User" AS u ON c.user_id = u.id
WHERE c.channel_id = @__channelId_0
2024-02-04 18:57:13.141 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.GetModels.CommentGetModel, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-04 18:57:13.142 +03:00 [INF] Executed action TgCheckerApi.Controllers.ChannelController.GetComments (TgCheckerApi) in 8.4537ms
2024-02-04 18:57:13.143 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.ChannelController.GetComments (TgCheckerApi)'
2024-02-04 18:57:13.144 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Channel/Comments/80 - - - 200 2 application/json;+charset=utf-8 17.9718ms
2024-02-04 18:57:13.173 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:7256/api/Auth - -
2024-02-04 18:57:13.174 +03:00 [INF] CORS policy execution successful.
2024-02-04 18:57:13.176 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:7256/api/Auth - - - 204 - - 2.9387ms
2024-02-04 18:57:13.177 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Auth - -
2024-02-04 18:57:13.178 +03:00 [INF] CORS policy execution successful.
2024-02-04 18:57:13.179 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 18:57:13.180 +03:00 [INF] Route matched with {action = "GetMe", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TgCheckerApi.Models.GetModels.UserProfileModel]] GetMe() on controller TgCheckerApi.Controllers.AuthController (TgCheckerApi).
2024-02-04 18:57:13.189 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.avatar, t.chat_id, t.last_update, t.notification_settings, t.telegram_id, t.unique_key, t.username, t1.id, t1.channel_id, t1.user_id, t1.id0, t1.avatar, t1.bumps, t1.description, t1.flag, t1."Hidden", t1.language, t1.last_bump, t1.members, t1.name, t1.notification_sent, t1.notifications, t1.promo_post, t1.promo_post_interval, t1.promo_post_last, t1.promo_post_sent, t1.promo_post_time, t1.telegram_id, t1."Url", t1."user", t1.id1, t1.channel, t1.tag, t1.id00, t1.text, t3.id, t3.channel_id, t3.content, t3.created_at, t3.parent_id, t3.rating, t3.user_id, t3.id0, t3.avatar, t3.bumps, t3.description, t3.flag, t3."Hidden", t3.language, t3.last_bump, t3.members, t3.name, t3.notification_sent, t3.notifications, t3.promo_post, t3.promo_post_interval, t3.promo_post_last, t3.promo_post_sent, t3.promo_post_time, t3.telegram_id, t3."Url", t3."user"
FROM (
    SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
    FROM "User" AS u
    WHERE u.unique_key = @__uniqueKeyClaim_0
    LIMIT 2
) AS t
LEFT JOIN (
    SELECT c.id, c.channel_id, c.user_id, c0.id AS id0, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."Url", c0."user", t0.id AS id1, t0.channel, t0.tag, t0.id0 AS id00, t0.text
    FROM "ChannelAccess" AS c
    LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
    LEFT JOIN (
        SELECT c1.id, c1.channel, c1.tag, t2.id AS id0, t2.text
        FROM "ChannelHasTag" AS c1
        LEFT JOIN "Tag" AS t2 ON c1.tag = t2.id
    ) AS t0 ON c0.id = t0.channel
) AS t1 ON t.id = t1.user_id
LEFT JOIN (
    SELECT c2.id, c2.channel_id, c2.content, c2.created_at, c2.parent_id, c2.rating, c2.user_id, c3.id AS id0, c3.avatar, c3.bumps, c3.description, c3.flag, c3."Hidden", c3.language, c3.last_bump, c3.members, c3.name, c3.notification_sent, c3.notifications, c3.promo_post, c3.promo_post_interval, c3.promo_post_last, c3.promo_post_sent, c3.promo_post_time, c3.telegram_id, c3."Url", c3."user"
    FROM "Comment" AS c2
    INNER JOIN "Channel" AS c3 ON c2.channel_id = c3.id
) AS t3 ON t.id = t3.user_id
ORDER BY t.id, t1.id, t1.id0, t1.id1, t1.id00, t3.id
2024-02-04 18:57:13.198 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:57:13.208 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:57:13.211 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:7256/api/Notification/UserNotifications - -
2024-02-04 18:57:13.211 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:57:13.212 +03:00 [INF] CORS policy execution successful.
2024-02-04 18:57:13.220 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 18:57:13.220 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:7256/api/Notification/UserNotifications - - - 204 - - 8.4195ms
2024-02-04 18:57:13.224 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 18:57:13.225 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification/UserNotifications - -
2024-02-04 18:57:13.232 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 18:57:13.233 +03:00 [INF] CORS policy execution successful.
2024-02-04 18:57:13.238 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 18:57:13.240 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetUserNotifications (TgCheckerApi)'
2024-02-04 18:57:13.242 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 18:57:13.242 +03:00 [INF] Route matched with {action = "GetUserNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetUserNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-04 18:57:13.249 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:57:13.253 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "User" AS u
WHERE u.unique_key = @__uniqueKeyClaim_0
LIMIT 2
2024-02-04 18:57:13.255 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:57:13.258 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.user_id = @__user_Id_0
2024-02-04 18:57:13.265 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:57:13.267 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.BaseModels.Notification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-04 18:57:13.270 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 18:57:13.270 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetUserNotifications (TgCheckerApi) in 19.7426ms
2024-02-04 18:57:13.279 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 18:57:13.279 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetUserNotifications (TgCheckerApi)'
2024-02-04 18:57:13.284 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 18:57:13.284 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification/UserNotifications - - - 200 524 application/json;+charset=utf-8 59.6760ms
2024-02-04 18:57:13.289 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 18:57:13.298 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 18:57:13.301 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:57:13.305 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:57:13.312 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:57:13.316 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 18:57:13.319 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 18:57:13.329 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 18:57:13.332 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 18:57:13.337 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 18:57:13.342 +03:00 [INF] Executing OkObjectResult, writing value of type 'TgCheckerApi.Models.GetModels.UserProfileModel'.
2024-02-04 18:57:13.343 +03:00 [INF] Executed action TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi) in 161.6212ms
2024-02-04 18:57:13.344 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 18:57:13.345 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Auth - -
2024-02-04 18:57:13.346 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Auth - - - 200 25324 application/json;+charset=utf-8 168.6123ms
2024-02-04 18:57:13.346 +03:00 [INF] CORS policy execution successful.
2024-02-04 18:57:13.348 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 18:57:13.350 +03:00 [INF] Route matched with {action = "GetMe", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TgCheckerApi.Models.GetModels.UserProfileModel]] GetMe() on controller TgCheckerApi.Controllers.AuthController (TgCheckerApi).
2024-02-04 18:57:13.356 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.avatar, t.chat_id, t.last_update, t.notification_settings, t.telegram_id, t.unique_key, t.username, t1.id, t1.channel_id, t1.user_id, t1.id0, t1.avatar, t1.bumps, t1.description, t1.flag, t1."Hidden", t1.language, t1.last_bump, t1.members, t1.name, t1.notification_sent, t1.notifications, t1.promo_post, t1.promo_post_interval, t1.promo_post_last, t1.promo_post_sent, t1.promo_post_time, t1.telegram_id, t1."Url", t1."user", t1.id1, t1.channel, t1.tag, t1.id00, t1.text, t3.id, t3.channel_id, t3.content, t3.created_at, t3.parent_id, t3.rating, t3.user_id, t3.id0, t3.avatar, t3.bumps, t3.description, t3.flag, t3."Hidden", t3.language, t3.last_bump, t3.members, t3.name, t3.notification_sent, t3.notifications, t3.promo_post, t3.promo_post_interval, t3.promo_post_last, t3.promo_post_sent, t3.promo_post_time, t3.telegram_id, t3."Url", t3."user"
FROM (
    SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
    FROM "User" AS u
    WHERE u.unique_key = @__uniqueKeyClaim_0
    LIMIT 2
) AS t
LEFT JOIN (
    SELECT c.id, c.channel_id, c.user_id, c0.id AS id0, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."Url", c0."user", t0.id AS id1, t0.channel, t0.tag, t0.id0 AS id00, t0.text
    FROM "ChannelAccess" AS c
    LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
    LEFT JOIN (
        SELECT c1.id, c1.channel, c1.tag, t2.id AS id0, t2.text
        FROM "ChannelHasTag" AS c1
        LEFT JOIN "Tag" AS t2 ON c1.tag = t2.id
    ) AS t0 ON c0.id = t0.channel
) AS t1 ON t.id = t1.user_id
LEFT JOIN (
    SELECT c2.id, c2.channel_id, c2.content, c2.created_at, c2.parent_id, c2.rating, c2.user_id, c3.id AS id0, c3.avatar, c3.bumps, c3.description, c3.flag, c3."Hidden", c3.language, c3.last_bump, c3.members, c3.name, c3.notification_sent, c3.notifications, c3.promo_post, c3.promo_post_interval, c3.promo_post_last, c3.promo_post_sent, c3.promo_post_time, c3.telegram_id, c3."Url", c3."user"
    FROM "Comment" AS c2
    INNER JOIN "Channel" AS c3 ON c2.channel_id = c3.id
) AS t3 ON t.id = t3.user_id
ORDER BY t.id, t1.id, t1.id0, t1.id1, t1.id00, t3.id
2024-02-04 18:57:13.367 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:57:13.376 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:57:13.379 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:57:13.382 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 18:57:13.388 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 18:57:13.392 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 18:57:13.393 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:7256/api/Bot/getDailyViewsByChannel - -
2024-02-04 18:57:13.395 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 18:57:13.395 +03:00 [INF] CORS policy execution successful.
2024-02-04 18:57:13.402 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:7256/api/Bot/getDailyViewsByChannel - - - 204 - - 8.8902ms
2024-02-04 18:57:13.402 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 18:57:13.403 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/api/Bot/getDailyViewsByChannel application/json;+charset=utf-8 34
2024-02-04 18:57:13.406 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:57:13.407 +03:00 [INF] CORS policy execution successful.
2024-02-04 18:57:13.410 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:57:13.412 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.BotController.CallGetDailyViewsByChannel (TgCheckerApi)'
2024-02-04 18:57:13.418 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:57:13.418 +03:00 [INF] Route matched with {action = "CallGetDailyViewsByChannel", controller = "Bot"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CallGetDailyViewsByChannel(DailyViewsRequest) on controller TgCheckerApi.Controllers.BotController (TgCheckerApi).
2024-02-04 18:57:13.421 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 18:57:13.423 +03:00 [INF] Starting CallGetDailyViewsByChannel method for ChannelId: 80
2024-02-04 18:57:13.426 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 18:57:13.429 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."Url", c."user"
FROM "Channel" AS c
WHERE c.id = @__p_0
LIMIT 1
2024-02-04 18:57:13.436 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 18:57:13.441 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__dailyViewsRequest_ChannelId_0='?' (DbType = Int32), @__startDate_1='?' (DbType = DateTime), @__endDate_2='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT v.id, v.date, v.last_message_id, v.sheet, v.updated, v.views
FROM "Channel" AS c
INNER JOIN "StatisticsSheet" AS s ON c.id = s.channel_id
INNER JOIN "ViewsRecord" AS v ON s.id = v.sheet
WHERE c.id = @__dailyViewsRequest_ChannelId_0 AND v.date >= @__startDate_1 AND v.date <= @__endDate_2
ORDER BY v.date
2024-02-04 18:57:13.444 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 18:57:13.450 +03:00 [INF] Starting IsUpdateRequiredForChannel method.
2024-02-04 18:57:13.453 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 18:57:13.453 +03:00 [INF] Parameters: ChannelId=80, NumberOfDays=31
2024-02-04 18:57:13.457 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:57:13.457 +03:00 [INF] Outdated threshold set to 1 minutes.
2024-02-04 18:57:13.463 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:57:13.464 +03:00 [INF] Checking records from 1/4/2024 12:00:00 AM to 2/4/2024 12:00:00 AM.
2024-02-04 18:57:13.467 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 18:57:13.468 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__dailyViewsRequest_ChannelId_0='?' (DbType = Int32), @__startDate_1='?' (DbType = DateTime), @__today_2='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT v.id, v.date, v.last_message_id, v.sheet, v.updated, v.views
FROM "Channel" AS c
INNER JOIN "StatisticsSheet" AS s ON c.id = s.channel_id
INNER JOIN "ViewsRecord" AS v ON s.id = v.sheet
WHERE c.id = @__dailyViewsRequest_ChannelId_0 AND v.date >= @__startDate_1 AND v.date <= @__today_2
2024-02-04 18:57:13.471 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 18:57:13.478 +03:00 [INF] 33 records found in date range.
2024-02-04 18:57:13.481 +03:00 [INF] Update required: True
2024-02-04 18:57:13.481 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 18:57:13.482 +03:00 [INF] Data is complete but outdated for ChannelId: 80. Initiating background update.
2024-02-04 18:57:13.486 +03:00 [INF] Received request for getDailyViewsByChannel. Request hash: c6767b8ee142f671c867e1e027dd0a6208f626fc9642fe406290e52e2784b620
2024-02-04 18:57:13.486 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 18:57:13.488 +03:00 [INF] Returning data for ChannelId: 80 with 32 view counts
2024-02-04 18:57:13.490 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 18:57:13.494 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.Int32, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-02-04 18:57:13.498 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 18:57:13.498 +03:00 [INF] Executed action TgCheckerApi.Controllers.BotController.CallGetDailyViewsByChannel (TgCheckerApi) in 75.1734ms
2024-02-04 18:57:13.502 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.BotController.CallGetDailyViewsByChannel (TgCheckerApi)'
2024-02-04 18:57:13.501 +03:00 [INF] Executing OkObjectResult, writing value of type 'TgCheckerApi.Models.GetModels.UserProfileModel'.
2024-02-04 18:57:13.505 +03:00 [INF] Executed action TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi) in 153.5434ms
2024-02-04 18:57:13.506 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 18:57:13.504 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/api/Bot/getDailyViewsByChannel application/json;+charset=utf-8 34 - 200 129 application/json;+charset=utf-8 100.3747ms
2024-02-04 18:57:13.510 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Auth - - - 200 25324 application/json;+charset=utf-8 165.3118ms
2024-02-04 18:57:27.492 +03:00 [INF] New task completed successfully. Hash: c6767b8ee142f671c867e1e027dd0a6208f626fc9642fe406290e52e2784b620
2024-02-04 18:57:27.525 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__channelId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.avatar, t.bumps, t.description, t.flag, t."Hidden", t.language, t.last_bump, t.members, t.name, t.notification_sent, t.notifications, t.promo_post, t.promo_post_interval, t.promo_post_last, t.promo_post_sent, t.promo_post_time, t.telegram_id, t."Url", t."user", s.id, s.channel_id
FROM (
    SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."Url", c."user"
    FROM "Channel" AS c
    WHERE c.id = @__channelId_0
    LIMIT 1
) AS t
LEFT JOIN "StatisticsSheet" AS s ON t.id = s.channel_id
ORDER BY t.id
2024-02-04 18:57:27.538 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT v.id, v.date, v.last_message_id, v.sheet, v.updated, v.views
FROM "ViewsRecord" AS v
WHERE v.sheet = @__p_0
2024-02-04 18:57:27.681 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime), @p3='?' (DbType = Int32), @p2='?' (DbType = DateTime), @p5='?' (DbType = Int32), @p4='?' (DbType = DateTime), @p7='?' (DbType = Int32), @p6='?' (DbType = DateTime), @p9='?' (DbType = Int32), @p8='?' (DbType = DateTime), @p11='?' (DbType = Int32), @p10='?' (DbType = DateTime), @p13='?' (DbType = Int32), @p12='?' (DbType = DateTime), @p15='?' (DbType = Int32), @p14='?' (DbType = DateTime), @p17='?' (DbType = Int32), @p16='?' (DbType = DateTime), @p19='?' (DbType = Int32), @p18='?' (DbType = DateTime), @p21='?' (DbType = Int32), @p20='?' (DbType = DateTime), @p23='?' (DbType = Int32), @p22='?' (DbType = DateTime), @p25='?' (DbType = Int32), @p24='?' (DbType = DateTime), @p27='?' (DbType = Int32), @p26='?' (DbType = DateTime), @p29='?' (DbType = Int32), @p28='?' (DbType = DateTime), @p31='?' (DbType = Int32), @p30='?' (DbType = DateTime), @p33='?' (DbType = Int32), @p32='?' (DbType = DateTime), @p35='?' (DbType = Int32), @p34='?' (DbType = DateTime), @p37='?' (DbType = Int32), @p36='?' (DbType = DateTime), @p39='?' (DbType = Int32), @p38='?' (DbType = DateTime), @p41='?' (DbType = Int32), @p40='?' (DbType = DateTime), @p43='?' (DbType = Int32), @p42='?' (DbType = DateTime), @p45='?' (DbType = Int32), @p44='?' (DbType = DateTime), @p47='?' (DbType = Int32), @p46='?' (DbType = DateTime), @p49='?' (DbType = Int32), @p48='?' (DbType = DateTime), @p51='?' (DbType = Int32), @p50='?' (DbType = DateTime), @p53='?' (DbType = Int32), @p52='?' (DbType = DateTime), @p55='?' (DbType = Int32), @p54='?' (DbType = DateTime), @p57='?' (DbType = Int32), @p56='?' (DbType = DateTime), @p59='?' (DbType = Int32), @p58='?' (DbType = DateTime), @p61='?' (DbType = Int32), @p60='?' (DbType = DateTime), @p63='?' (DbType = Int32), @p62='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "ViewsRecord" SET updated = @p0
WHERE id = @p1;
UPDATE "ViewsRecord" SET updated = @p2
WHERE id = @p3;
UPDATE "ViewsRecord" SET updated = @p4
WHERE id = @p5;
UPDATE "ViewsRecord" SET updated = @p6
WHERE id = @p7;
UPDATE "ViewsRecord" SET updated = @p8
WHERE id = @p9;
UPDATE "ViewsRecord" SET updated = @p10
WHERE id = @p11;
UPDATE "ViewsRecord" SET updated = @p12
WHERE id = @p13;
UPDATE "ViewsRecord" SET updated = @p14
WHERE id = @p15;
UPDATE "ViewsRecord" SET updated = @p16
WHERE id = @p17;
UPDATE "ViewsRecord" SET updated = @p18
WHERE id = @p19;
UPDATE "ViewsRecord" SET updated = @p20
WHERE id = @p21;
UPDATE "ViewsRecord" SET updated = @p22
WHERE id = @p23;
UPDATE "ViewsRecord" SET updated = @p24
WHERE id = @p25;
UPDATE "ViewsRecord" SET updated = @p26
WHERE id = @p27;
UPDATE "ViewsRecord" SET updated = @p28
WHERE id = @p29;
UPDATE "ViewsRecord" SET updated = @p30
WHERE id = @p31;
UPDATE "ViewsRecord" SET updated = @p32
WHERE id = @p33;
UPDATE "ViewsRecord" SET updated = @p34
WHERE id = @p35;
UPDATE "ViewsRecord" SET updated = @p36
WHERE id = @p37;
UPDATE "ViewsRecord" SET updated = @p38
WHERE id = @p39;
UPDATE "ViewsRecord" SET updated = @p40
WHERE id = @p41;
UPDATE "ViewsRecord" SET updated = @p42
WHERE id = @p43;
UPDATE "ViewsRecord" SET updated = @p44
WHERE id = @p45;
UPDATE "ViewsRecord" SET updated = @p46
WHERE id = @p47;
UPDATE "ViewsRecord" SET updated = @p48
WHERE id = @p49;
UPDATE "ViewsRecord" SET updated = @p50
WHERE id = @p51;
UPDATE "ViewsRecord" SET updated = @p52
WHERE id = @p53;
UPDATE "ViewsRecord" SET updated = @p54
WHERE id = @p55;
UPDATE "ViewsRecord" SET updated = @p56
WHERE id = @p57;
UPDATE "ViewsRecord" SET updated = @p58
WHERE id = @p59;
UPDATE "ViewsRecord" SET updated = @p60
WHERE id = @p61;
UPDATE "ViewsRecord" SET updated = @p62
WHERE id = @p63;
2024-02-04 18:57:27.742 +03:00 [INF] Successfully updated database with new records for ChannelId: 80
2024-02-04 18:57:45.761 +03:00 [ERR] Error occurred executing UpdateSubscribersJob via HTTP request.
System.Threading.Tasks.TaskCanceledException: The request was canceled due to the configured HttpClient.Timeout of 100 seconds elapsing.
 ---> System.TimeoutException: The operation was canceled.
 ---> System.Threading.Tasks.TaskCanceledException: The operation was canceled.
 ---> System.IO.IOException: Unable to read data from the transport connection: The I/O operation has been aborted because of either a thread exit or an application request..
 ---> System.Net.Sockets.SocketException (995): The I/O operation has been aborted because of either a thread exit or an application request.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Security.SslStream.EnsureFullTlsFrameAsync[TIOAdapter](TIOAdapter adapter)
   at System.Net.Security.SslStream.ReadAsyncInternal[TIOAdapter](TIOAdapter adapter, Memory`1 buffer)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsyncCore(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsyncCore(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   --- End of inner exception stack trace ---
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpClient.HandleFailure(Exception e, Boolean telemetryStarted, HttpResponseMessage response, CancellationTokenSource cts, CancellationToken cancellationToken, CancellationTokenSource pendingRequestsCts)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at TgCheckerApi.Job.UpdateSubscribersJob.Execute(IJobExecutionContext context) in C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\Job\UpdateSubscribersJob.cs:line 49
2024-02-04 19:07:55.194 +03:00 [INF] User profile is available. Using 'C:\Users\timar\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-04 19:07:55.381 +03:00 [INF] Default Quartz.NET properties loaded from embedded resource file
2024-02-04 19:07:55.423 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-02-04 19:07:55.427 +03:00 [INF] Quartz Scheduler created
2024-02-04 19:07:55.428 +03:00 [INF] RAMJobStore initialized.
2024-02-04 19:07:55.430 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-02-04 19:07:55.431 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-02-04 19:07:55.432 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-02-04 19:07:55.433 +03:00 [INF] JobFactory set to: TgCheckerApi.Job.QuartzJobFactory
2024-02-04 19:07:55.477 +03:00 [INF] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2024-02-04 19:07:55.556 +03:00 [INF] Now listening on: http://localhost:7256
2024-02-04 19:07:55.557 +03:00 [INF] Now listening on: http://localhost:5244
2024-02-04 19:07:55.561 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-04 19:07:55.561 +03:00 [INF] Hosting environment: Development
2024-02-04 19:07:55.562 +03:00 [INF] Content root path: C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\
2024-02-04 19:07:55.763 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/index.html - -
2024-02-04 19:07:56.050 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/index.html - - - 200 - text/html;charset=utf-8 288.9918ms
2024-02-04 19:07:56.060 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_vs/browserLink - -
2024-02-04 19:07:56.062 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - -
2024-02-04 19:07:56.069 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - - - 200 12356 application/javascript;+charset=utf-8 7.3792ms
2024-02-04 19:07:56.082 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 21.6842ms
2024-02-04 19:07:56.181 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - -
2024-02-04 19:07:56.310 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 129.2317ms
2024-02-04 19:07:59.486 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 19:07:59.490 +03:00 [WRN] Failed to determine the https port for redirect.
2024-02-04 19:07:59.549 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 19:07:59.562 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 19:07:59.563 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 77.2182ms
2024-02-04 19:07:59.567 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=L5AL-sjx9exwdX5Y4yN7YQ - -
2024-02-04 19:07:59.568 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 19:08:05.697 +03:00 [INF] Start processing HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-04 19:08:05.707 +03:00 [INF] Sending HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-04 19:08:06.986 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Channel/80 - -
2024-02-04 19:08:06.988 +03:00 [INF] CORS policy execution successful.
2024-02-04 19:08:06.991 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.ChannelController.GetChannel (TgCheckerApi)'
2024-02-04 19:08:07.024 +03:00 [INF] Route matched with {action = "GetChannel", controller = "Channel"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TgCheckerApi.Models.GetModels.ChannelGetModel]] GetChannel(Int32) on controller TgCheckerApi.Controllers.ChannelController (TgCheckerApi).
2024-02-04 19:08:07.286 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:7256/api/Notification/UserNotifications - -
2024-02-04 19:08:07.287 +03:00 [INF] CORS policy execution successful.
2024-02-04 19:08:07.289 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:7256/api/Notification/UserNotifications - - - 204 - - 3.1080ms
2024-02-04 19:08:07.290 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification/UserNotifications - -
2024-02-04 19:08:07.291 +03:00 [INF] CORS policy execution successful.
2024-02-04 19:08:07.387 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetUserNotifications (TgCheckerApi)'
2024-02-04 19:08:07.391 +03:00 [INF] Route matched with {action = "GetUserNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetUserNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-04 19:08:09.979 +03:00 [INF] Executed DbCommand (106ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "User" AS u
WHERE u.unique_key = @__uniqueKeyClaim_0
LIMIT 2
2024-02-04 19:08:09.979 +03:00 [INF] Executed DbCommand (113ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."Url", c."user"
FROM "Channel" AS c
WHERE c.id = @__p_0
LIMIT 1
2024-02-04 19:08:10.220 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.user_id = @__user_Id_0
2024-02-04 19:08:10.273 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-04 19:08:10.302 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.BaseModels.Notification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-04 19:08:10.356 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetUserNotifications (TgCheckerApi) in 2946.4563ms
2024-02-04 19:08:10.359 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:08:10.359 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetUserNotifications (TgCheckerApi)'
2024-02-04 19:08:10.363 +03:00 [INF] Executing ObjectResult, writing value of type 'TgCheckerApi.Models.GetModels.ChannelGetModel'.
2024-02-04 19:08:10.378 +03:00 [INF] Executed action TgCheckerApi.Controllers.ChannelController.GetChannel (TgCheckerApi) in 3351.2376ms
2024-02-04 19:08:10.379 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.ChannelController.GetChannel (TgCheckerApi)'
2024-02-04 19:08:10.386 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification/UserNotifications - - - 200 524 application/json;+charset=utf-8 3095.9590ms
2024-02-04 19:08:10.386 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Channel/80 - - - 200 15469 application/json;+charset=utf-8 3400.2522ms
2024-02-04 19:08:10.649 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:7256/api/Auth - -
2024-02-04 19:08:10.650 +03:00 [INF] CORS policy execution successful.
2024-02-04 19:08:10.651 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:7256/api/Auth - - - 204 - - 1.9137ms
2024-02-04 19:08:10.652 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Auth - -
2024-02-04 19:08:10.653 +03:00 [INF] CORS policy execution successful.
2024-02-04 19:08:10.654 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 19:08:10.658 +03:00 [INF] Route matched with {action = "GetMe", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TgCheckerApi.Models.GetModels.UserProfileModel]] GetMe() on controller TgCheckerApi.Controllers.AuthController (TgCheckerApi).
2024-02-04 19:08:10.727 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Channel/Comments/80 - -
2024-02-04 19:08:10.729 +03:00 [INF] CORS policy execution successful.
2024-02-04 19:08:10.733 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.ChannelController.GetComments (TgCheckerApi)'
2024-02-04 19:08:10.737 +03:00 [INF] Route matched with {action = "GetComments", controller = "Channel"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[TgCheckerApi.Models.GetModels.CommentGetModel]]] GetComments(Int32) on controller TgCheckerApi.Controllers.ChannelController (TgCheckerApi).
2024-02-04 19:08:10.882 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__channelId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id, u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "Comment" AS c
INNER JOIN "User" AS u ON c.user_id = u.id
WHERE c.channel_id = @__channelId_0
2024-02-04 19:08:10.887 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.GetModels.CommentGetModel, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-04 19:08:10.891 +03:00 [INF] Executed action TgCheckerApi.Controllers.ChannelController.GetComments (TgCheckerApi) in 152.2285ms
2024-02-04 19:08:10.893 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.ChannelController.GetComments (TgCheckerApi)'
2024-02-04 19:08:10.894 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Channel/Comments/80 - - - 200 2 application/json;+charset=utf-8 167.1808ms
2024-02-04 19:08:10.975 +03:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2024-02-04 19:08:11.016 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.avatar, t.chat_id, t.last_update, t.notification_settings, t.telegram_id, t.unique_key, t.username, t1.id, t1.channel_id, t1.user_id, t1.id0, t1.avatar, t1.bumps, t1.description, t1.flag, t1."Hidden", t1.language, t1.last_bump, t1.members, t1.name, t1.notification_sent, t1.notifications, t1.promo_post, t1.promo_post_interval, t1.promo_post_last, t1.promo_post_sent, t1.promo_post_time, t1.telegram_id, t1."Url", t1."user", t1.id1, t1.channel, t1.tag, t1.id00, t1.text, t3.id, t3.channel_id, t3.content, t3.created_at, t3.parent_id, t3.rating, t3.user_id, t3.id0, t3.avatar, t3.bumps, t3.description, t3.flag, t3."Hidden", t3.language, t3.last_bump, t3.members, t3.name, t3.notification_sent, t3.notifications, t3.promo_post, t3.promo_post_interval, t3.promo_post_last, t3.promo_post_sent, t3.promo_post_time, t3.telegram_id, t3."Url", t3."user"
FROM (
    SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
    FROM "User" AS u
    WHERE u.unique_key = @__uniqueKeyClaim_0
    LIMIT 2
) AS t
LEFT JOIN (
    SELECT c.id, c.channel_id, c.user_id, c0.id AS id0, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."Url", c0."user", t0.id AS id1, t0.channel, t0.tag, t0.id0 AS id00, t0.text
    FROM "ChannelAccess" AS c
    LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
    LEFT JOIN (
        SELECT c1.id, c1.channel, c1.tag, t2.id AS id0, t2.text
        FROM "ChannelHasTag" AS c1
        LEFT JOIN "Tag" AS t2 ON c1.tag = t2.id
    ) AS t0 ON c0.id = t0.channel
) AS t1 ON t.id = t1.user_id
LEFT JOIN (
    SELECT c2.id, c2.channel_id, c2.content, c2.created_at, c2.parent_id, c2.rating, c2.user_id, c3.id AS id0, c3.avatar, c3.bumps, c3.description, c3.flag, c3."Hidden", c3.language, c3.last_bump, c3.members, c3.name, c3.notification_sent, c3.notifications, c3.promo_post, c3.promo_post_interval, c3.promo_post_last, c3.promo_post_sent, c3.promo_post_time, c3.telegram_id, c3."Url", c3."user"
    FROM "Comment" AS c2
    INNER JOIN "Channel" AS c3 ON c2.channel_id = c3.id
) AS t3 ON t.id = t3.user_id
ORDER BY t.id, t1.id, t1.id0, t1.id1, t1.id00, t3.id
2024-02-04 19:08:11.107 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:08:11.113 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:08:11.121 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:08:11.130 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 19:08:11.159 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 19:08:11.298 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 19:08:11.334 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 19:08:11.398 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 19:08:11.405 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:08:11.408 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:08:11.411 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:08:11.413 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 19:08:11.417 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 19:08:11.420 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 19:08:11.444 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 19:08:11.447 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 19:08:11.450 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:08:11.453 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:08:11.456 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:08:11.459 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 19:08:11.463 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 19:08:11.467 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 19:08:11.471 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 19:08:11.475 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 19:08:11.478 +03:00 [INF] Executing OkObjectResult, writing value of type 'TgCheckerApi.Models.GetModels.UserProfileModel'.
2024-02-04 19:08:11.491 +03:00 [INF] Executed action TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi) in 830.6945ms
2024-02-04 19:08:11.493 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 19:08:11.494 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Auth - -
2024-02-04 19:08:11.494 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Auth - - - 200 25324 application/json;+charset=utf-8 841.9239ms
2024-02-04 19:08:11.494 +03:00 [INF] CORS policy execution successful.
2024-02-04 19:08:11.496 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 19:08:11.497 +03:00 [INF] Route matched with {action = "GetMe", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TgCheckerApi.Models.GetModels.UserProfileModel]] GetMe() on controller TgCheckerApi.Controllers.AuthController (TgCheckerApi).
2024-02-04 19:08:11.509 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.avatar, t.chat_id, t.last_update, t.notification_settings, t.telegram_id, t.unique_key, t.username, t1.id, t1.channel_id, t1.user_id, t1.id0, t1.avatar, t1.bumps, t1.description, t1.flag, t1."Hidden", t1.language, t1.last_bump, t1.members, t1.name, t1.notification_sent, t1.notifications, t1.promo_post, t1.promo_post_interval, t1.promo_post_last, t1.promo_post_sent, t1.promo_post_time, t1.telegram_id, t1."Url", t1."user", t1.id1, t1.channel, t1.tag, t1.id00, t1.text, t3.id, t3.channel_id, t3.content, t3.created_at, t3.parent_id, t3.rating, t3.user_id, t3.id0, t3.avatar, t3.bumps, t3.description, t3.flag, t3."Hidden", t3.language, t3.last_bump, t3.members, t3.name, t3.notification_sent, t3.notifications, t3.promo_post, t3.promo_post_interval, t3.promo_post_last, t3.promo_post_sent, t3.promo_post_time, t3.telegram_id, t3."Url", t3."user"
FROM (
    SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
    FROM "User" AS u
    WHERE u.unique_key = @__uniqueKeyClaim_0
    LIMIT 2
) AS t
LEFT JOIN (
    SELECT c.id, c.channel_id, c.user_id, c0.id AS id0, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."Url", c0."user", t0.id AS id1, t0.channel, t0.tag, t0.id0 AS id00, t0.text
    FROM "ChannelAccess" AS c
    LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
    LEFT JOIN (
        SELECT c1.id, c1.channel, c1.tag, t2.id AS id0, t2.text
        FROM "ChannelHasTag" AS c1
        LEFT JOIN "Tag" AS t2 ON c1.tag = t2.id
    ) AS t0 ON c0.id = t0.channel
) AS t1 ON t.id = t1.user_id
LEFT JOIN (
    SELECT c2.id, c2.channel_id, c2.content, c2.created_at, c2.parent_id, c2.rating, c2.user_id, c3.id AS id0, c3.avatar, c3.bumps, c3.description, c3.flag, c3."Hidden", c3.language, c3.last_bump, c3.members, c3.name, c3.notification_sent, c3.notifications, c3.promo_post, c3.promo_post_interval, c3.promo_post_last, c3.promo_post_sent, c3.promo_post_time, c3.telegram_id, c3."Url", c3."user"
    FROM "Comment" AS c2
    INNER JOIN "Channel" AS c3 ON c2.channel_id = c3.id
) AS t3 ON t.id = t3.user_id
ORDER BY t.id, t1.id, t1.id0, t1.id1, t1.id00, t3.id
2024-02-04 19:08:11.516 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:08:11.519 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:08:11.522 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:08:11.524 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 19:08:11.527 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 19:08:11.531 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 19:08:11.533 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 19:08:11.536 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 19:08:11.539 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:08:11.542 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:08:11.545 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:08:11.547 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 19:08:11.550 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 19:08:11.553 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 19:08:11.555 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 19:08:11.558 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 19:08:11.560 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:08:11.563 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:08:11.565 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:08:11.568 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 19:08:11.570 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 19:08:11.573 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 19:08:11.576 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 19:08:11.578 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 19:08:11.580 +03:00 [INF] Executing OkObjectResult, writing value of type 'TgCheckerApi.Models.GetModels.UserProfileModel'.
2024-02-04 19:08:11.581 +03:00 [INF] Executed action TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi) in 78.3828ms
2024-02-04 19:08:11.582 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 19:08:11.584 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Auth - - - 200 25324 application/json;+charset=utf-8 90.0453ms
2024-02-04 19:08:11.618 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:7256/api/Bot/getDailyViewsByChannel - -
2024-02-04 19:08:11.619 +03:00 [INF] CORS policy execution successful.
2024-02-04 19:08:11.620 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:7256/api/Bot/getDailyViewsByChannel - - - 204 - - 2.0327ms
2024-02-04 19:08:11.621 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/api/Bot/getDailyViewsByChannel application/json;+charset=utf-8 34
2024-02-04 19:08:11.622 +03:00 [INF] CORS policy execution successful.
2024-02-04 19:08:11.623 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.BotController.CallGetDailyViewsByChannel (TgCheckerApi)'
2024-02-04 19:08:11.630 +03:00 [INF] Route matched with {action = "CallGetDailyViewsByChannel", controller = "Bot"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CallGetDailyViewsByChannel(DailyViewsRequest) on controller TgCheckerApi.Controllers.BotController (TgCheckerApi).
2024-02-04 19:08:11.701 +03:00 [INF] Starting CallGetDailyViewsByChannel method for ChannelId: 80
2024-02-04 19:08:11.704 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."Url", c."user"
FROM "Channel" AS c
WHERE c.id = @__p_0
LIMIT 1
2024-02-04 19:08:11.754 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__dailyViewsRequest_ChannelId_0='?' (DbType = Int32), @__startDate_1='?' (DbType = DateTime), @__endDate_2='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT v.id, v.date, v.last_message_id, v.sheet, v.updated, v.views
FROM "Channel" AS c
INNER JOIN "StatisticsSheet" AS s ON c.id = s.channel_id
INNER JOIN "ViewsRecord" AS v ON s.id = v.sheet
WHERE c.id = @__dailyViewsRequest_ChannelId_0 AND v.date >= @__startDate_1 AND v.date <= @__endDate_2
ORDER BY v.date
2024-02-04 19:08:11.768 +03:00 [INF] Starting IsUpdateRequiredForChannel method.
2024-02-04 19:08:11.769 +03:00 [INF] Parameters: ChannelId=80, NumberOfDays=31
2024-02-04 19:08:11.769 +03:00 [INF] Outdated threshold set to 1 minutes.
2024-02-04 19:08:11.771 +03:00 [INF] Checking records from 1/4/2024 12:00:00 AM to 2/4/2024 12:00:00 AM.
2024-02-04 19:08:11.778 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__dailyViewsRequest_ChannelId_0='?' (DbType = Int32), @__startDate_1='?' (DbType = DateTime), @__today_2='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT v.id, v.date, v.last_message_id, v.sheet, v.updated, v.views
FROM "Channel" AS c
INNER JOIN "StatisticsSheet" AS s ON c.id = s.channel_id
INNER JOIN "ViewsRecord" AS v ON s.id = v.sheet
WHERE c.id = @__dailyViewsRequest_ChannelId_0 AND v.date >= @__startDate_1 AND v.date <= @__today_2
2024-02-04 19:08:11.780 +03:00 [INF] 33 records found in date range.
2024-02-04 19:08:11.781 +03:00 [INF] Update required: True
2024-02-04 19:08:11.782 +03:00 [INF] Data is complete but outdated for ChannelId: 80. Initiating background update.
2024-02-04 19:08:11.793 +03:00 [INF] Received request for getDailyViewsByChannel. Request hash: c6767b8ee142f671c867e1e027dd0a6208f626fc9642fe406290e52e2784b620
2024-02-04 19:08:11.820 +03:00 [INF] Returning data for ChannelId: 80 with 32 view counts
2024-02-04 19:08:11.822 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.Int32, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-02-04 19:08:11.823 +03:00 [INF] Executed action TgCheckerApi.Controllers.BotController.CallGetDailyViewsByChannel (TgCheckerApi) in 191.546ms
2024-02-04 19:08:11.824 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.BotController.CallGetDailyViewsByChannel (TgCheckerApi)'
2024-02-04 19:08:11.826 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/api/Bot/getDailyViewsByChannel application/json;+charset=utf-8 34 - 200 129 application/json;+charset=utf-8 204.7862ms
2024-02-04 19:08:41.820 +03:00 [WRN] New task timed out. Hash: c6767b8ee142f671c867e1e027dd0a6208f626fc9642fe406290e52e2784b620
2024-02-04 19:08:41.822 +03:00 [WRN] Invalid or no response from WebSocket service for ChannelId: 80
2024-02-04 19:09:45.797 +03:00 [ERR] Error occurred executing UpdateSubscribersJob via HTTP request.
System.Threading.Tasks.TaskCanceledException: The request was canceled due to the configured HttpClient.Timeout of 100 seconds elapsing.
 ---> System.TimeoutException: The operation was canceled.
 ---> System.Threading.Tasks.TaskCanceledException: The operation was canceled.
 ---> System.IO.IOException: Unable to read data from the transport connection: The I/O operation has been aborted because of either a thread exit or an application request..
 ---> System.Net.Sockets.SocketException (995): The I/O operation has been aborted because of either a thread exit or an application request.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Security.SslStream.EnsureFullTlsFrameAsync[TIOAdapter](TIOAdapter adapter)
   at System.Net.Security.SslStream.ReadAsyncInternal[TIOAdapter](TIOAdapter adapter, Memory`1 buffer)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsyncCore(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsyncCore(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   --- End of inner exception stack trace ---
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpClient.HandleFailure(Exception e, Boolean telemetryStarted, HttpResponseMessage response, CancellationTokenSource cts, CancellationToken cancellationToken, CancellationTokenSource pendingRequestsCts)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at TgCheckerApi.Job.UpdateSubscribersJob.Execute(IJobExecutionContext context) in C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\Job\UpdateSubscribersJob.cs:line 49
2024-02-04 19:17:02.225 +03:00 [ERR] Failed to invoke hub method 'ReceiveStream'.
System.OperationCanceledException: The underlying connection was closed.
   at System.Threading.Channels.AsyncOperation`1.GetResult(Int16 token)
   at System.Threading.Channels.ChannelReader`1.ReadAllAsync(CancellationToken cancellationToken)+MoveNext()
   at System.Threading.Channels.ChannelReader`1.ReadAllAsync(CancellationToken cancellationToken)+System.Threading.Tasks.Sources.IValueTaskSource<System.Boolean>.GetResult()
   at TgCheckerApi.Websockets.BotHub.ReceiveStream(IAsyncEnumerable`1 stream, String param) in C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\Websockets\BotHub.cs:line 39
   at TgCheckerApi.Websockets.BotHub.ReceiveStream(IAsyncEnumerable`1 stream, String param) in C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\Websockets\BotHub.cs:line 39
   at Microsoft.AspNetCore.SignalR.Internal.DefaultHubDispatcher`1.ExecuteMethod(ObjectMethodExecutor methodExecutor, Hub hub, Object[] arguments)
   at Microsoft.AspNetCore.SignalR.Internal.DefaultHubDispatcher`1.<Invoke>g__ExecuteInvocation|16_0(DefaultHubDispatcher`1 dispatcher, ObjectMethodExecutor methodExecutor, THub hub, Object[] arguments, AsyncServiceScope scope, IHubActivator`1 hubActivator, HubConnectionContext connection, HubMethodInvocationMessage hubMethodInvocationMessage, Boolean isStreamCall)
2024-02-04 19:17:02.229 +03:00 [INF] Executed endpoint '/BotHub'
2024-02-04 19:17:02.237 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/BotHub?id=L5AL-sjx9exwdX5Y4yN7YQ - - - 101 - - 542669.9905ms
2024-02-04 19:17:05.119 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 19:17:05.120 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 19:17:05.121 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 19:17:05.122 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 2.8635ms
2024-02-04 19:17:05.133 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=v_jNxfej0_XMZiKyuAdAbg - -
2024-02-04 19:17:05.134 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 19:17:44.544 +03:00 [INF] User profile is available. Using 'C:\Users\timar\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-04 19:17:44.713 +03:00 [INF] Default Quartz.NET properties loaded from embedded resource file
2024-02-04 19:17:44.751 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-02-04 19:17:44.756 +03:00 [INF] Quartz Scheduler created
2024-02-04 19:17:44.757 +03:00 [INF] RAMJobStore initialized.
2024-02-04 19:17:44.758 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-02-04 19:17:44.758 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-02-04 19:17:44.759 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-02-04 19:17:44.760 +03:00 [INF] JobFactory set to: TgCheckerApi.Job.QuartzJobFactory
2024-02-04 19:17:44.802 +03:00 [INF] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2024-02-04 19:17:44.880 +03:00 [INF] Now listening on: http://localhost:7256
2024-02-04 19:17:44.881 +03:00 [INF] Now listening on: http://localhost:5244
2024-02-04 19:17:44.884 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-04 19:17:44.885 +03:00 [INF] Hosting environment: Development
2024-02-04 19:17:44.886 +03:00 [INF] Content root path: C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\
2024-02-04 19:17:45.201 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 19:17:45.244 +03:00 [WRN] Failed to determine the https port for redirect.
2024-02-04 19:17:45.254 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/index.html - -
2024-02-04 19:17:45.316 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 19:17:45.343 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 19:17:45.345 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 148.6165ms
2024-02-04 19:17:45.355 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=2Ueq9akBYrM5DIzb4Y7XVA - -
2024-02-04 19:17:45.357 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 19:17:45.537 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/index.html - - - 200 - text/html;charset=utf-8 283.0702ms
2024-02-04 19:17:45.546 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_vs/browserLink - -
2024-02-04 19:17:45.547 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - -
2024-02-04 19:17:45.554 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - - - 200 12356 application/javascript;+charset=utf-8 6.7911ms
2024-02-04 19:17:45.567 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 21.1652ms
2024-02-04 19:17:45.628 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - -
2024-02-04 19:17:45.745 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 117.5151ms
2024-02-04 19:18:03.025 +03:00 [INF] User profile is available. Using 'C:\Users\timar\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-04 19:18:03.168 +03:00 [INF] Default Quartz.NET properties loaded from embedded resource file
2024-02-04 19:18:03.207 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-02-04 19:18:03.212 +03:00 [INF] Quartz Scheduler created
2024-02-04 19:18:03.213 +03:00 [INF] RAMJobStore initialized.
2024-02-04 19:18:03.214 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-02-04 19:18:03.215 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-02-04 19:18:03.216 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-02-04 19:18:03.218 +03:00 [INF] JobFactory set to: TgCheckerApi.Job.QuartzJobFactory
2024-02-04 19:18:03.259 +03:00 [INF] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2024-02-04 19:18:03.325 +03:00 [INF] Now listening on: http://localhost:7256
2024-02-04 19:18:03.325 +03:00 [INF] Now listening on: http://localhost:5244
2024-02-04 19:18:03.329 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-04 19:18:03.330 +03:00 [INF] Hosting environment: Development
2024-02-04 19:18:03.330 +03:00 [INF] Content root path: C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\
2024-02-04 19:18:04.485 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 19:18:04.516 +03:00 [WRN] Failed to determine the https port for redirect.
2024-02-04 19:18:04.581 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 19:18:04.611 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 19:18:04.619 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 132.7462ms
2024-02-04 19:18:04.623 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=svJPEpFfy3EJ0f_JbaC8aA - -
2024-02-04 19:18:04.630 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 19:18:05.358 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/index.html - -
2024-02-04 19:18:05.577 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/index.html - - - 200 - text/html;charset=utf-8 219.0093ms
2024-02-04 19:18:05.581 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_vs/browserLink - -
2024-02-04 19:18:05.583 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - -
2024-02-04 19:18:05.588 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - - - 200 12356 application/javascript;+charset=utf-8 5.7558ms
2024-02-04 19:18:05.601 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 19.4070ms
2024-02-04 19:18:05.673 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - -
2024-02-04 19:18:05.790 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 117.1490ms
2024-02-04 19:18:13.481 +03:00 [INF] Start processing HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-04 19:18:13.492 +03:00 [INF] Sending HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-04 19:18:14.865 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Channel/80 - -
2024-02-04 19:18:14.867 +03:00 [INF] CORS policy execution successful.
2024-02-04 19:18:14.870 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.ChannelController.GetChannel (TgCheckerApi)'
2024-02-04 19:18:14.898 +03:00 [INF] Route matched with {action = "GetChannel", controller = "Channel"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TgCheckerApi.Models.GetModels.ChannelGetModel]] GetChannel(Int32) on controller TgCheckerApi.Controllers.ChannelController (TgCheckerApi).
2024-02-04 19:18:15.180 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:7256/api/Notification/UserNotifications - -
2024-02-04 19:18:15.181 +03:00 [INF] CORS policy execution successful.
2024-02-04 19:18:15.183 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:7256/api/Notification/UserNotifications - - - 204 - - 2.8637ms
2024-02-04 19:18:15.184 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification/UserNotifications - -
2024-02-04 19:18:15.185 +03:00 [INF] CORS policy execution successful.
2024-02-04 19:18:15.280 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetUserNotifications (TgCheckerApi)'
2024-02-04 19:18:15.284 +03:00 [INF] Route matched with {action = "GetUserNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetUserNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-04 19:18:17.991 +03:00 [INF] Executed DbCommand (102ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."Url", c."user"
FROM "Channel" AS c
WHERE c.id = @__p_0
LIMIT 1
2024-02-04 19:18:17.991 +03:00 [INF] Executed DbCommand (102ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "User" AS u
WHERE u.unique_key = @__uniqueKeyClaim_0
LIMIT 2
2024-02-04 19:18:18.219 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.user_id = @__user_Id_0
2024-02-04 19:18:18.263 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-04 19:18:18.294 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.BaseModels.Notification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-04 19:18:18.344 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:18:18.349 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetUserNotifications (TgCheckerApi) in 3057.8587ms
2024-02-04 19:18:18.350 +03:00 [INF] Executing ObjectResult, writing value of type 'TgCheckerApi.Models.GetModels.ChannelGetModel'.
2024-02-04 19:18:18.353 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetUserNotifications (TgCheckerApi)'
2024-02-04 19:18:18.365 +03:00 [INF] Executed action TgCheckerApi.Controllers.ChannelController.GetChannel (TgCheckerApi) in 3447.1614ms
2024-02-04 19:18:18.367 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.ChannelController.GetChannel (TgCheckerApi)'
2024-02-04 19:18:18.378 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification/UserNotifications - - - 200 524 application/json;+charset=utf-8 3193.8328ms
2024-02-04 19:18:18.378 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Channel/80 - - - 200 15469 application/json;+charset=utf-8 3512.9068ms
2024-02-04 19:18:18.477 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:7256/api/Auth - -
2024-02-04 19:18:18.479 +03:00 [INF] CORS policy execution successful.
2024-02-04 19:18:18.480 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:7256/api/Auth - - - 204 - - 2.6308ms
2024-02-04 19:18:18.481 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Auth - -
2024-02-04 19:18:18.482 +03:00 [INF] CORS policy execution successful.
2024-02-04 19:18:18.483 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 19:18:18.488 +03:00 [INF] Route matched with {action = "GetMe", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TgCheckerApi.Models.GetModels.UserProfileModel]] GetMe() on controller TgCheckerApi.Controllers.AuthController (TgCheckerApi).
2024-02-04 19:18:18.525 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Channel/Comments/80 - -
2024-02-04 19:18:18.526 +03:00 [INF] CORS policy execution successful.
2024-02-04 19:18:18.530 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.ChannelController.GetComments (TgCheckerApi)'
2024-02-04 19:18:18.533 +03:00 [INF] Route matched with {action = "GetComments", controller = "Channel"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[TgCheckerApi.Models.GetModels.CommentGetModel]]] GetComments(Int32) on controller TgCheckerApi.Controllers.ChannelController (TgCheckerApi).
2024-02-04 19:18:18.708 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__channelId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id, u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "Comment" AS c
INNER JOIN "User" AS u ON c.user_id = u.id
WHERE c.channel_id = @__channelId_0
2024-02-04 19:18:18.712 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.GetModels.CommentGetModel, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-04 19:18:18.716 +03:00 [INF] Executed action TgCheckerApi.Controllers.ChannelController.GetComments (TgCheckerApi) in 179.6889ms
2024-02-04 19:18:18.717 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.ChannelController.GetComments (TgCheckerApi)'
2024-02-04 19:18:18.718 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Channel/Comments/80 - - - 200 2 application/json;+charset=utf-8 192.6540ms
2024-02-04 19:18:18.797 +03:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2024-02-04 19:18:18.809 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.avatar, t.chat_id, t.last_update, t.notification_settings, t.telegram_id, t.unique_key, t.username, t1.id, t1.channel_id, t1.user_id, t1.id0, t1.avatar, t1.bumps, t1.description, t1.flag, t1."Hidden", t1.language, t1.last_bump, t1.members, t1.name, t1.notification_sent, t1.notifications, t1.promo_post, t1.promo_post_interval, t1.promo_post_last, t1.promo_post_sent, t1.promo_post_time, t1.telegram_id, t1."Url", t1."user", t1.id1, t1.channel, t1.tag, t1.id00, t1.text, t3.id, t3.channel_id, t3.content, t3.created_at, t3.parent_id, t3.rating, t3.user_id, t3.id0, t3.avatar, t3.bumps, t3.description, t3.flag, t3."Hidden", t3.language, t3.last_bump, t3.members, t3.name, t3.notification_sent, t3.notifications, t3.promo_post, t3.promo_post_interval, t3.promo_post_last, t3.promo_post_sent, t3.promo_post_time, t3.telegram_id, t3."Url", t3."user"
FROM (
    SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
    FROM "User" AS u
    WHERE u.unique_key = @__uniqueKeyClaim_0
    LIMIT 2
) AS t
LEFT JOIN (
    SELECT c.id, c.channel_id, c.user_id, c0.id AS id0, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."Url", c0."user", t0.id AS id1, t0.channel, t0.tag, t0.id0 AS id00, t0.text
    FROM "ChannelAccess" AS c
    LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
    LEFT JOIN (
        SELECT c1.id, c1.channel, c1.tag, t2.id AS id0, t2.text
        FROM "ChannelHasTag" AS c1
        LEFT JOIN "Tag" AS t2 ON c1.tag = t2.id
    ) AS t0 ON c0.id = t0.channel
) AS t1 ON t.id = t1.user_id
LEFT JOIN (
    SELECT c2.id, c2.channel_id, c2.content, c2.created_at, c2.parent_id, c2.rating, c2.user_id, c3.id AS id0, c3.avatar, c3.bumps, c3.description, c3.flag, c3."Hidden", c3.language, c3.last_bump, c3.members, c3.name, c3.notification_sent, c3.notifications, c3.promo_post, c3.promo_post_interval, c3.promo_post_last, c3.promo_post_sent, c3.promo_post_time, c3.telegram_id, c3."Url", c3."user"
    FROM "Comment" AS c2
    INNER JOIN "Channel" AS c3 ON c2.channel_id = c3.id
) AS t3 ON t.id = t3.user_id
ORDER BY t.id, t1.id, t1.id0, t1.id1, t1.id00, t3.id
2024-02-04 19:18:18.894 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:18:18.901 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:18:18.911 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:18:18.919 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 19:18:18.951 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 19:18:19.064 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 19:18:19.101 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 19:18:19.144 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 19:18:19.151 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:18:19.154 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:18:19.157 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:18:19.161 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 19:18:19.165 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 19:18:19.169 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 19:18:19.196 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 19:18:19.199 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 19:18:19.203 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:18:19.206 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:18:19.209 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:18:19.213 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 19:18:19.217 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 19:18:19.221 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 19:18:19.224 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 19:18:19.227 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 19:18:19.230 +03:00 [INF] Executing OkObjectResult, writing value of type 'TgCheckerApi.Models.GetModels.UserProfileModel'.
2024-02-04 19:18:19.238 +03:00 [INF] Executed action TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi) in 747.8485ms
2024-02-04 19:18:19.240 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 19:18:19.240 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Auth - -
2024-02-04 19:18:19.242 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Auth - - - 200 25324 application/json;+charset=utf-8 761.0704ms
2024-02-04 19:18:19.243 +03:00 [INF] CORS policy execution successful.
2024-02-04 19:18:19.245 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 19:18:19.246 +03:00 [INF] Route matched with {action = "GetMe", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TgCheckerApi.Models.GetModels.UserProfileModel]] GetMe() on controller TgCheckerApi.Controllers.AuthController (TgCheckerApi).
2024-02-04 19:18:19.257 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.avatar, t.chat_id, t.last_update, t.notification_settings, t.telegram_id, t.unique_key, t.username, t1.id, t1.channel_id, t1.user_id, t1.id0, t1.avatar, t1.bumps, t1.description, t1.flag, t1."Hidden", t1.language, t1.last_bump, t1.members, t1.name, t1.notification_sent, t1.notifications, t1.promo_post, t1.promo_post_interval, t1.promo_post_last, t1.promo_post_sent, t1.promo_post_time, t1.telegram_id, t1."Url", t1."user", t1.id1, t1.channel, t1.tag, t1.id00, t1.text, t3.id, t3.channel_id, t3.content, t3.created_at, t3.parent_id, t3.rating, t3.user_id, t3.id0, t3.avatar, t3.bumps, t3.description, t3.flag, t3."Hidden", t3.language, t3.last_bump, t3.members, t3.name, t3.notification_sent, t3.notifications, t3.promo_post, t3.promo_post_interval, t3.promo_post_last, t3.promo_post_sent, t3.promo_post_time, t3.telegram_id, t3."Url", t3."user"
FROM (
    SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
    FROM "User" AS u
    WHERE u.unique_key = @__uniqueKeyClaim_0
    LIMIT 2
) AS t
LEFT JOIN (
    SELECT c.id, c.channel_id, c.user_id, c0.id AS id0, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."Url", c0."user", t0.id AS id1, t0.channel, t0.tag, t0.id0 AS id00, t0.text
    FROM "ChannelAccess" AS c
    LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
    LEFT JOIN (
        SELECT c1.id, c1.channel, c1.tag, t2.id AS id0, t2.text
        FROM "ChannelHasTag" AS c1
        LEFT JOIN "Tag" AS t2 ON c1.tag = t2.id
    ) AS t0 ON c0.id = t0.channel
) AS t1 ON t.id = t1.user_id
LEFT JOIN (
    SELECT c2.id, c2.channel_id, c2.content, c2.created_at, c2.parent_id, c2.rating, c2.user_id, c3.id AS id0, c3.avatar, c3.bumps, c3.description, c3.flag, c3."Hidden", c3.language, c3.last_bump, c3.members, c3.name, c3.notification_sent, c3.notifications, c3.promo_post, c3.promo_post_interval, c3.promo_post_last, c3.promo_post_sent, c3.promo_post_time, c3.telegram_id, c3."Url", c3."user"
    FROM "Comment" AS c2
    INNER JOIN "Channel" AS c3 ON c2.channel_id = c3.id
) AS t3 ON t.id = t3.user_id
ORDER BY t.id, t1.id, t1.id0, t1.id1, t1.id00, t3.id
2024-02-04 19:18:19.264 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:18:19.267 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:18:19.270 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:18:19.273 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 19:18:19.277 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 19:18:19.279 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 19:18:19.283 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 19:18:19.287 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 19:18:19.291 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:18:19.294 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:18:19.299 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:18:19.301 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 19:18:19.304 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 19:18:19.308 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 19:18:19.311 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 19:18:19.314 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 19:18:19.317 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:18:19.319 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:18:19.322 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:18:19.325 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 19:18:19.327 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 19:18:19.330 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 19:18:19.333 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 19:18:19.335 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 19:18:19.337 +03:00 [INF] Executing OkObjectResult, writing value of type 'TgCheckerApi.Models.GetModels.UserProfileModel'.
2024-02-04 19:18:19.339 +03:00 [INF] Executed action TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi) in 90.1361ms
2024-02-04 19:18:19.340 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 19:18:19.341 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Auth - - - 200 25324 application/json;+charset=utf-8 101.2401ms
2024-02-04 19:18:19.401 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:7256/api/Bot/getDailyViewsByChannel - -
2024-02-04 19:18:19.402 +03:00 [INF] CORS policy execution successful.
2024-02-04 19:18:19.403 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:7256/api/Bot/getDailyViewsByChannel - - - 204 - - 2.4339ms
2024-02-04 19:18:19.404 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/api/Bot/getDailyViewsByChannel application/json;+charset=utf-8 34
2024-02-04 19:18:19.405 +03:00 [INF] CORS policy execution successful.
2024-02-04 19:18:19.406 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.BotController.CallGetDailyViewsByChannel (TgCheckerApi)'
2024-02-04 19:18:19.410 +03:00 [INF] Route matched with {action = "CallGetDailyViewsByChannel", controller = "Bot"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CallGetDailyViewsByChannel(DailyViewsRequest) on controller TgCheckerApi.Controllers.BotController (TgCheckerApi).
2024-02-04 19:18:19.478 +03:00 [INF] Starting CallGetDailyViewsByChannel method for ChannelId: 80
2024-02-04 19:18:19.481 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."Url", c."user"
FROM "Channel" AS c
WHERE c.id = @__p_0
LIMIT 1
2024-02-04 19:18:19.527 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__dailyViewsRequest_ChannelId_0='?' (DbType = Int32), @__startDate_1='?' (DbType = DateTime), @__endDate_2='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT v.id, v.date, v.last_message_id, v.sheet, v.updated, v.views
FROM "Channel" AS c
INNER JOIN "StatisticsSheet" AS s ON c.id = s.channel_id
INNER JOIN "ViewsRecord" AS v ON s.id = v.sheet
WHERE c.id = @__dailyViewsRequest_ChannelId_0 AND v.date >= @__startDate_1 AND v.date <= @__endDate_2
ORDER BY v.date
2024-02-04 19:18:19.541 +03:00 [INF] Starting IsUpdateRequiredForChannel method.
2024-02-04 19:18:19.542 +03:00 [INF] Parameters: ChannelId=80, NumberOfDays=31
2024-02-04 19:18:19.543 +03:00 [INF] Outdated threshold set to 1 minutes.
2024-02-04 19:18:19.544 +03:00 [INF] Checking records from 1/4/2024 12:00:00 AM to 2/4/2024 12:00:00 AM.
2024-02-04 19:18:19.550 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__dailyViewsRequest_ChannelId_0='?' (DbType = Int32), @__startDate_1='?' (DbType = DateTime), @__today_2='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT v.id, v.date, v.last_message_id, v.sheet, v.updated, v.views
FROM "Channel" AS c
INNER JOIN "StatisticsSheet" AS s ON c.id = s.channel_id
INNER JOIN "ViewsRecord" AS v ON s.id = v.sheet
WHERE c.id = @__dailyViewsRequest_ChannelId_0 AND v.date >= @__startDate_1 AND v.date <= @__today_2
2024-02-04 19:18:19.553 +03:00 [INF] 33 records found in date range.
2024-02-04 19:18:19.554 +03:00 [INF] Update required: True
2024-02-04 19:18:19.555 +03:00 [INF] Data is complete but outdated for ChannelId: 80. Initiating background update.
2024-02-04 19:18:19.565 +03:00 [INF] Received request for getDailyViewsByChannel. Request hash: c6767b8ee142f671c867e1e027dd0a6208f626fc9642fe406290e52e2784b620
2024-02-04 19:18:19.593 +03:00 [INF] Returning data for ChannelId: 80 with 32 view counts
2024-02-04 19:18:19.595 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.Int32, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-02-04 19:18:19.596 +03:00 [INF] Executed action TgCheckerApi.Controllers.BotController.CallGetDailyViewsByChannel (TgCheckerApi) in 184.2499ms
2024-02-04 19:18:19.597 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.BotController.CallGetDailyViewsByChannel (TgCheckerApi)'
2024-02-04 19:18:19.599 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/api/Bot/getDailyViewsByChannel application/json;+charset=utf-8 34 - 200 129 application/json;+charset=utf-8 195.1184ms
2024-02-04 19:18:49.607 +03:00 [WRN] New task timed out. Hash: c6767b8ee142f671c867e1e027dd0a6208f626fc9642fe406290e52e2784b620
2024-02-04 19:18:49.608 +03:00 [WRN] Invalid or no response from WebSocket service for ChannelId: 80
2024-02-04 19:19:42.610 +03:00 [ERR] Failed to invoke hub method 'ReceiveStream'.
System.OperationCanceledException: The underlying connection was closed.
   at System.Threading.Channels.AsyncOperation`1.GetResult(Int16 token)
   at System.Threading.Channels.ChannelReader`1.ReadAllAsync(CancellationToken cancellationToken)+MoveNext()
   at System.Threading.Channels.ChannelReader`1.ReadAllAsync(CancellationToken cancellationToken)+System.Threading.Tasks.Sources.IValueTaskSource<System.Boolean>.GetResult()
   at TgCheckerApi.Websockets.BotHub.ReceiveStream(IAsyncEnumerable`1 stream, String param) in C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\Websockets\BotHub.cs:line 39
   at TgCheckerApi.Websockets.BotHub.ReceiveStream(IAsyncEnumerable`1 stream, String param) in C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\Websockets\BotHub.cs:line 39
   at Microsoft.AspNetCore.SignalR.Internal.DefaultHubDispatcher`1.ExecuteMethod(ObjectMethodExecutor methodExecutor, Hub hub, Object[] arguments)
   at Microsoft.AspNetCore.SignalR.Internal.DefaultHubDispatcher`1.<Invoke>g__ExecuteInvocation|16_0(DefaultHubDispatcher`1 dispatcher, ObjectMethodExecutor methodExecutor, THub hub, Object[] arguments, AsyncServiceScope scope, IHubActivator`1 hubActivator, HubConnectionContext connection, HubMethodInvocationMessage hubMethodInvocationMessage, Boolean isStreamCall)
2024-02-04 19:19:42.615 +03:00 [INF] Executed endpoint '/BotHub'
2024-02-04 19:19:42.645 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/BotHub?id=svJPEpFfy3EJ0f_JbaC8aA - - - 101 - - 98022.0869ms
2024-02-04 19:19:45.499 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 19:19:45.500 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 19:19:45.501 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 19:19:45.502 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 3.0568ms
2024-02-04 19:19:45.513 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=yTyIa-bWyEZ5xSLVyd4iyw - -
2024-02-04 19:19:45.514 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 19:19:58.814 +03:00 [INF] User profile is available. Using 'C:\Users\timar\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-04 19:19:58.970 +03:00 [INF] Default Quartz.NET properties loaded from embedded resource file
2024-02-04 19:19:59.009 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-02-04 19:19:59.014 +03:00 [INF] Quartz Scheduler created
2024-02-04 19:19:59.015 +03:00 [INF] RAMJobStore initialized.
2024-02-04 19:19:59.015 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-02-04 19:19:59.016 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-02-04 19:19:59.017 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-02-04 19:19:59.018 +03:00 [INF] JobFactory set to: TgCheckerApi.Job.QuartzJobFactory
2024-02-04 19:19:59.057 +03:00 [INF] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2024-02-04 19:19:59.130 +03:00 [INF] Now listening on: http://localhost:7256
2024-02-04 19:19:59.131 +03:00 [INF] Now listening on: http://localhost:5244
2024-02-04 19:19:59.134 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-04 19:19:59.135 +03:00 [INF] Hosting environment: Development
2024-02-04 19:19:59.136 +03:00 [INF] Content root path: C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\
2024-02-04 19:19:59.621 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 19:19:59.646 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/index.html - -
2024-02-04 19:19:59.654 +03:00 [WRN] Failed to determine the https port for redirect.
2024-02-04 19:19:59.724 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 19:19:59.753 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 19:19:59.755 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=WIajysTt6LUVgG7KB7UTCA - -
2024-02-04 19:19:59.756 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 138.5014ms
2024-02-04 19:19:59.757 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 19:19:59.901 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/index.html - - - 200 - text/html;charset=utf-8 255.0512ms
2024-02-04 19:19:59.905 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_vs/browserLink - -
2024-02-04 19:19:59.906 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - -
2024-02-04 19:19:59.912 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - - - 200 12356 application/javascript;+charset=utf-8 5.8598ms
2024-02-04 19:19:59.925 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 19.7175ms
2024-02-04 19:19:59.992 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - -
2024-02-04 19:20:00.113 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 120.6501ms
2024-02-04 19:20:18.636 +03:00 [INF] User profile is available. Using 'C:\Users\timar\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-04 19:20:18.801 +03:00 [INF] Default Quartz.NET properties loaded from embedded resource file
2024-02-04 19:20:18.845 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-02-04 19:20:18.849 +03:00 [INF] Quartz Scheduler created
2024-02-04 19:20:18.851 +03:00 [INF] RAMJobStore initialized.
2024-02-04 19:20:18.852 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-02-04 19:20:18.853 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-02-04 19:20:18.854 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-02-04 19:20:18.855 +03:00 [INF] JobFactory set to: TgCheckerApi.Job.QuartzJobFactory
2024-02-04 19:20:18.896 +03:00 [INF] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2024-02-04 19:20:18.975 +03:00 [INF] Now listening on: http://localhost:7256
2024-02-04 19:20:18.976 +03:00 [INF] Now listening on: http://localhost:5244
2024-02-04 19:20:18.981 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-04 19:20:18.982 +03:00 [INF] Hosting environment: Development
2024-02-04 19:20:18.982 +03:00 [INF] Content root path: C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\
2024-02-04 19:20:19.295 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/index.html - -
2024-02-04 19:20:19.382 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 19:20:19.387 +03:00 [WRN] Failed to determine the https port for redirect.
2024-02-04 19:20:19.457 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 19:20:19.484 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 19:20:19.486 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=bbbbz6jSWV9jwogGH6DEpg - -
2024-02-04 19:20:19.487 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 104.7568ms
2024-02-04 19:20:19.487 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 19:20:19.594 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/index.html - - - 200 - text/html;charset=utf-8 302.7774ms
2024-02-04 19:20:19.598 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - -
2024-02-04 19:20:19.600 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_vs/browserLink - -
2024-02-04 19:20:19.603 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - - - 200 12356 application/javascript;+charset=utf-8 4.5089ms
2024-02-04 19:20:19.612 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 12.1541ms
2024-02-04 19:20:19.684 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - -
2024-02-04 19:20:19.798 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 114.0368ms
2024-02-04 19:20:29.087 +03:00 [INF] Start processing HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-04 19:20:29.097 +03:00 [INF] Sending HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-04 19:20:36.318 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Channel/80 - -
2024-02-04 19:20:36.320 +03:00 [INF] CORS policy execution successful.
2024-02-04 19:20:36.325 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.ChannelController.GetChannel (TgCheckerApi)'
2024-02-04 19:20:36.357 +03:00 [INF] Route matched with {action = "GetChannel", controller = "Channel"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TgCheckerApi.Models.GetModels.ChannelGetModel]] GetChannel(Int32) on controller TgCheckerApi.Controllers.ChannelController (TgCheckerApi).
2024-02-04 19:20:36.646 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:7256/api/Notification/UserNotifications - -
2024-02-04 19:20:36.647 +03:00 [INF] CORS policy execution successful.
2024-02-04 19:20:36.649 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:7256/api/Notification/UserNotifications - - - 204 - - 2.5984ms
2024-02-04 19:20:36.650 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification/UserNotifications - -
2024-02-04 19:20:36.650 +03:00 [INF] CORS policy execution successful.
2024-02-04 19:20:36.747 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetUserNotifications (TgCheckerApi)'
2024-02-04 19:20:36.751 +03:00 [INF] Route matched with {action = "GetUserNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetUserNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-04 19:20:39.446 +03:00 [INF] Executed DbCommand (101ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "User" AS u
WHERE u.unique_key = @__uniqueKeyClaim_0
LIMIT 2
2024-02-04 19:20:39.446 +03:00 [INF] Executed DbCommand (101ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."Url", c."user"
FROM "Channel" AS c
WHERE c.id = @__p_0
LIMIT 1
2024-02-04 19:20:39.677 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.user_id = @__user_Id_0
2024-02-04 19:20:39.729 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-04 19:20:39.758 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.BaseModels.Notification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-04 19:20:39.812 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:20:39.813 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetUserNotifications (TgCheckerApi) in 3053.2297ms
2024-02-04 19:20:39.820 +03:00 [INF] Executing ObjectResult, writing value of type 'TgCheckerApi.Models.GetModels.ChannelGetModel'.
2024-02-04 19:20:39.820 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetUserNotifications (TgCheckerApi)'
2024-02-04 19:20:39.835 +03:00 [INF] Executed action TgCheckerApi.Controllers.ChannelController.GetChannel (TgCheckerApi) in 3473.3622ms
2024-02-04 19:20:39.837 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.ChannelController.GetChannel (TgCheckerApi)'
2024-02-04 19:20:39.846 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification/UserNotifications - - - 200 524 application/json;+charset=utf-8 3195.9919ms
2024-02-04 19:20:39.846 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Channel/80 - - - 200 15469 application/json;+charset=utf-8 3527.8960ms
2024-02-04 19:20:39.945 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:7256/api/Auth - -
2024-02-04 19:20:39.946 +03:00 [INF] CORS policy execution successful.
2024-02-04 19:20:39.946 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:7256/api/Auth - - - 204 - - 1.9389ms
2024-02-04 19:20:39.947 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Auth - -
2024-02-04 19:20:39.948 +03:00 [INF] CORS policy execution successful.
2024-02-04 19:20:39.949 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 19:20:39.954 +03:00 [INF] Route matched with {action = "GetMe", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TgCheckerApi.Models.GetModels.UserProfileModel]] GetMe() on controller TgCheckerApi.Controllers.AuthController (TgCheckerApi).
2024-02-04 19:20:39.993 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Channel/Comments/80 - -
2024-02-04 19:20:39.994 +03:00 [INF] CORS policy execution successful.
2024-02-04 19:20:39.998 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.ChannelController.GetComments (TgCheckerApi)'
2024-02-04 19:20:40.004 +03:00 [INF] Route matched with {action = "GetComments", controller = "Channel"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[TgCheckerApi.Models.GetModels.CommentGetModel]]] GetComments(Int32) on controller TgCheckerApi.Controllers.ChannelController (TgCheckerApi).
2024-02-04 19:20:40.186 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__channelId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id, u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "Comment" AS c
INNER JOIN "User" AS u ON c.user_id = u.id
WHERE c.channel_id = @__channelId_0
2024-02-04 19:20:40.192 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.GetModels.CommentGetModel, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-04 19:20:40.196 +03:00 [INF] Executed action TgCheckerApi.Controllers.ChannelController.GetComments (TgCheckerApi) in 189.2107ms
2024-02-04 19:20:40.198 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.ChannelController.GetComments (TgCheckerApi)'
2024-02-04 19:20:40.200 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Channel/Comments/80 - - - 200 2 application/json;+charset=utf-8 206.4158ms
2024-02-04 19:20:40.290 +03:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2024-02-04 19:20:40.303 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.avatar, t.chat_id, t.last_update, t.notification_settings, t.telegram_id, t.unique_key, t.username, t1.id, t1.channel_id, t1.user_id, t1.id0, t1.avatar, t1.bumps, t1.description, t1.flag, t1."Hidden", t1.language, t1.last_bump, t1.members, t1.name, t1.notification_sent, t1.notifications, t1.promo_post, t1.promo_post_interval, t1.promo_post_last, t1.promo_post_sent, t1.promo_post_time, t1.telegram_id, t1."Url", t1."user", t1.id1, t1.channel, t1.tag, t1.id00, t1.text, t3.id, t3.channel_id, t3.content, t3.created_at, t3.parent_id, t3.rating, t3.user_id, t3.id0, t3.avatar, t3.bumps, t3.description, t3.flag, t3."Hidden", t3.language, t3.last_bump, t3.members, t3.name, t3.notification_sent, t3.notifications, t3.promo_post, t3.promo_post_interval, t3.promo_post_last, t3.promo_post_sent, t3.promo_post_time, t3.telegram_id, t3."Url", t3."user"
FROM (
    SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
    FROM "User" AS u
    WHERE u.unique_key = @__uniqueKeyClaim_0
    LIMIT 2
) AS t
LEFT JOIN (
    SELECT c.id, c.channel_id, c.user_id, c0.id AS id0, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."Url", c0."user", t0.id AS id1, t0.channel, t0.tag, t0.id0 AS id00, t0.text
    FROM "ChannelAccess" AS c
    LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
    LEFT JOIN (
        SELECT c1.id, c1.channel, c1.tag, t2.id AS id0, t2.text
        FROM "ChannelHasTag" AS c1
        LEFT JOIN "Tag" AS t2 ON c1.tag = t2.id
    ) AS t0 ON c0.id = t0.channel
) AS t1 ON t.id = t1.user_id
LEFT JOIN (
    SELECT c2.id, c2.channel_id, c2.content, c2.created_at, c2.parent_id, c2.rating, c2.user_id, c3.id AS id0, c3.avatar, c3.bumps, c3.description, c3.flag, c3."Hidden", c3.language, c3.last_bump, c3.members, c3.name, c3.notification_sent, c3.notifications, c3.promo_post, c3.promo_post_interval, c3.promo_post_last, c3.promo_post_sent, c3.promo_post_time, c3.telegram_id, c3."Url", c3."user"
    FROM "Comment" AS c2
    INNER JOIN "Channel" AS c3 ON c2.channel_id = c3.id
) AS t3 ON t.id = t3.user_id
ORDER BY t.id, t1.id, t1.id0, t1.id1, t1.id00, t3.id
2024-02-04 19:20:40.390 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:20:40.397 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:20:40.405 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:20:40.414 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 19:20:40.453 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 19:20:40.591 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 19:20:40.640 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 19:20:40.692 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 19:20:40.701 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:20:40.704 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:20:40.708 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:20:40.712 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 19:20:40.717 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 19:20:40.720 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 19:20:40.748 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 19:20:40.751 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 19:20:40.754 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:20:40.757 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:20:40.760 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:20:40.763 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 19:20:40.767 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 19:20:40.771 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 19:20:40.774 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 19:20:40.778 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 19:20:40.780 +03:00 [INF] Executing OkObjectResult, writing value of type 'TgCheckerApi.Models.GetModels.UserProfileModel'.
2024-02-04 19:20:40.788 +03:00 [INF] Executed action TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi) in 830.7271ms
2024-02-04 19:20:40.789 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Auth - -
2024-02-04 19:20:40.790 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 19:20:40.791 +03:00 [INF] CORS policy execution successful.
2024-02-04 19:20:40.792 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Auth - - - 200 25324 application/json;+charset=utf-8 844.9358ms
2024-02-04 19:20:40.793 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 19:20:40.795 +03:00 [INF] Route matched with {action = "GetMe", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TgCheckerApi.Models.GetModels.UserProfileModel]] GetMe() on controller TgCheckerApi.Controllers.AuthController (TgCheckerApi).
2024-02-04 19:20:40.805 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.avatar, t.chat_id, t.last_update, t.notification_settings, t.telegram_id, t.unique_key, t.username, t1.id, t1.channel_id, t1.user_id, t1.id0, t1.avatar, t1.bumps, t1.description, t1.flag, t1."Hidden", t1.language, t1.last_bump, t1.members, t1.name, t1.notification_sent, t1.notifications, t1.promo_post, t1.promo_post_interval, t1.promo_post_last, t1.promo_post_sent, t1.promo_post_time, t1.telegram_id, t1."Url", t1."user", t1.id1, t1.channel, t1.tag, t1.id00, t1.text, t3.id, t3.channel_id, t3.content, t3.created_at, t3.parent_id, t3.rating, t3.user_id, t3.id0, t3.avatar, t3.bumps, t3.description, t3.flag, t3."Hidden", t3.language, t3.last_bump, t3.members, t3.name, t3.notification_sent, t3.notifications, t3.promo_post, t3.promo_post_interval, t3.promo_post_last, t3.promo_post_sent, t3.promo_post_time, t3.telegram_id, t3."Url", t3."user"
FROM (
    SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
    FROM "User" AS u
    WHERE u.unique_key = @__uniqueKeyClaim_0
    LIMIT 2
) AS t
LEFT JOIN (
    SELECT c.id, c.channel_id, c.user_id, c0.id AS id0, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."Url", c0."user", t0.id AS id1, t0.channel, t0.tag, t0.id0 AS id00, t0.text
    FROM "ChannelAccess" AS c
    LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
    LEFT JOIN (
        SELECT c1.id, c1.channel, c1.tag, t2.id AS id0, t2.text
        FROM "ChannelHasTag" AS c1
        LEFT JOIN "Tag" AS t2 ON c1.tag = t2.id
    ) AS t0 ON c0.id = t0.channel
) AS t1 ON t.id = t1.user_id
LEFT JOIN (
    SELECT c2.id, c2.channel_id, c2.content, c2.created_at, c2.parent_id, c2.rating, c2.user_id, c3.id AS id0, c3.avatar, c3.bumps, c3.description, c3.flag, c3."Hidden", c3.language, c3.last_bump, c3.members, c3.name, c3.notification_sent, c3.notifications, c3.promo_post, c3.promo_post_interval, c3.promo_post_last, c3.promo_post_sent, c3.promo_post_time, c3.telegram_id, c3."Url", c3."user"
    FROM "Comment" AS c2
    INNER JOIN "Channel" AS c3 ON c2.channel_id = c3.id
) AS t3 ON t.id = t3.user_id
ORDER BY t.id, t1.id, t1.id0, t1.id1, t1.id00, t3.id
2024-02-04 19:20:40.813 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:20:40.816 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:20:40.820 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:20:40.823 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 19:20:40.827 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 19:20:40.831 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 19:20:40.834 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 19:20:40.837 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 19:20:40.840 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:20:40.843 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:20:40.845 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:20:40.849 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 19:20:40.852 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 19:20:40.855 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 19:20:40.858 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 19:20:40.862 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 19:20:40.865 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:20:40.868 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:20:40.871 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:20:40.873 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 19:20:40.876 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 19:20:40.880 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 19:20:40.882 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 19:20:40.885 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 19:20:40.887 +03:00 [INF] Executing OkObjectResult, writing value of type 'TgCheckerApi.Models.GetModels.UserProfileModel'.
2024-02-04 19:20:40.888 +03:00 [INF] Executed action TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi) in 91.7775ms
2024-02-04 19:20:40.890 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 19:20:40.891 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Auth - - - 200 25324 application/json;+charset=utf-8 101.1179ms
2024-02-04 19:20:40.931 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:7256/api/Bot/getDailyViewsByChannel - -
2024-02-04 19:20:40.932 +03:00 [INF] CORS policy execution successful.
2024-02-04 19:20:40.935 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:7256/api/Bot/getDailyViewsByChannel - - - 204 - - 3.5758ms
2024-02-04 19:20:40.936 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/api/Bot/getDailyViewsByChannel application/json;+charset=utf-8 34
2024-02-04 19:20:40.936 +03:00 [INF] CORS policy execution successful.
2024-02-04 19:20:40.937 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.BotController.CallGetDailyViewsByChannel (TgCheckerApi)'
2024-02-04 19:20:40.942 +03:00 [INF] Route matched with {action = "CallGetDailyViewsByChannel", controller = "Bot"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CallGetDailyViewsByChannel(DailyViewsRequest) on controller TgCheckerApi.Controllers.BotController (TgCheckerApi).
2024-02-04 19:20:41.009 +03:00 [INF] Starting CallGetDailyViewsByChannel method for ChannelId: 80
2024-02-04 19:20:41.013 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."Url", c."user"
FROM "Channel" AS c
WHERE c.id = @__p_0
LIMIT 1
2024-02-04 19:20:41.062 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__dailyViewsRequest_ChannelId_0='?' (DbType = Int32), @__startDate_1='?' (DbType = DateTime), @__endDate_2='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT v.id, v.date, v.last_message_id, v.sheet, v.updated, v.views
FROM "Channel" AS c
INNER JOIN "StatisticsSheet" AS s ON c.id = s.channel_id
INNER JOIN "ViewsRecord" AS v ON s.id = v.sheet
WHERE c.id = @__dailyViewsRequest_ChannelId_0 AND v.date >= @__startDate_1 AND v.date <= @__endDate_2
ORDER BY v.date
2024-02-04 19:20:41.078 +03:00 [INF] Starting IsUpdateRequiredForChannel method.
2024-02-04 19:20:41.078 +03:00 [INF] Parameters: ChannelId=80, NumberOfDays=31
2024-02-04 19:20:41.079 +03:00 [INF] Outdated threshold set to 1 minutes.
2024-02-04 19:20:41.081 +03:00 [INF] Checking records from 1/4/2024 12:00:00 AM to 2/4/2024 12:00:00 AM.
2024-02-04 19:20:41.087 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__dailyViewsRequest_ChannelId_0='?' (DbType = Int32), @__startDate_1='?' (DbType = DateTime), @__today_2='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT v.id, v.date, v.last_message_id, v.sheet, v.updated, v.views
FROM "Channel" AS c
INNER JOIN "StatisticsSheet" AS s ON c.id = s.channel_id
INNER JOIN "ViewsRecord" AS v ON s.id = v.sheet
WHERE c.id = @__dailyViewsRequest_ChannelId_0 AND v.date >= @__startDate_1 AND v.date <= @__today_2
2024-02-04 19:20:41.090 +03:00 [INF] 33 records found in date range.
2024-02-04 19:20:41.091 +03:00 [INF] Update required: True
2024-02-04 19:20:41.092 +03:00 [INF] Data is complete but outdated for ChannelId: 80. Initiating background update.
2024-02-04 19:20:41.103 +03:00 [INF] Received request for getDailyViewsByChannel. Request hash: c6767b8ee142f671c867e1e027dd0a6208f626fc9642fe406290e52e2784b620
2024-02-04 19:20:41.130 +03:00 [INF] Returning data for ChannelId: 80 with 32 view counts
2024-02-04 19:20:41.132 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.Int32, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-02-04 19:20:41.133 +03:00 [INF] Executed action TgCheckerApi.Controllers.BotController.CallGetDailyViewsByChannel (TgCheckerApi) in 189.3329ms
2024-02-04 19:20:41.134 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.BotController.CallGetDailyViewsByChannel (TgCheckerApi)'
2024-02-04 19:20:41.136 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/api/Bot/getDailyViewsByChannel application/json;+charset=utf-8 34 - 200 129 application/json;+charset=utf-8 200.8486ms
2024-02-04 19:21:11.133 +03:00 [WRN] New task timed out. Hash: c6767b8ee142f671c867e1e027dd0a6208f626fc9642fe406290e52e2784b620
2024-02-04 19:21:11.134 +03:00 [WRN] Invalid or no response from WebSocket service for ChannelId: 80
2024-02-04 19:21:11.776 +03:00 [ERR] Failed to invoke hub method 'ReceiveStream'.
System.OperationCanceledException: The underlying connection was closed.
   at System.Threading.Channels.AsyncOperation`1.GetResult(Int16 token)
   at System.Threading.Channels.ChannelReader`1.ReadAllAsync(CancellationToken cancellationToken)+MoveNext()
   at System.Threading.Channels.ChannelReader`1.ReadAllAsync(CancellationToken cancellationToken)+System.Threading.Tasks.Sources.IValueTaskSource<System.Boolean>.GetResult()
   at TgCheckerApi.Websockets.BotHub.ReceiveStream(IAsyncEnumerable`1 stream, String param) in C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\Websockets\BotHub.cs:line 39
   at TgCheckerApi.Websockets.BotHub.ReceiveStream(IAsyncEnumerable`1 stream, String param) in C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\Websockets\BotHub.cs:line 39
   at Microsoft.AspNetCore.SignalR.Internal.DefaultHubDispatcher`1.ExecuteMethod(ObjectMethodExecutor methodExecutor, Hub hub, Object[] arguments)
   at Microsoft.AspNetCore.SignalR.Internal.DefaultHubDispatcher`1.<Invoke>g__ExecuteInvocation|16_0(DefaultHubDispatcher`1 dispatcher, ObjectMethodExecutor methodExecutor, THub hub, Object[] arguments, AsyncServiceScope scope, IHubActivator`1 hubActivator, HubConnectionContext connection, HubMethodInvocationMessage hubMethodInvocationMessage, Boolean isStreamCall)
2024-02-04 19:21:11.779 +03:00 [INF] Executed endpoint '/BotHub'
2024-02-04 19:21:11.813 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/BotHub?id=bbbbz6jSWV9jwogGH6DEpg - - - 101 - - 52327.0772ms
2024-02-04 19:21:14.602 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 19:21:14.603 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 19:21:14.605 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 19:21:14.606 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 4.3013ms
2024-02-04 19:21:14.619 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=WOEIEiIKMhGQJpmpOflESg - -
2024-02-04 19:21:14.620 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 19:21:32.862 +03:00 [INF] User profile is available. Using 'C:\Users\timar\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-04 19:21:33.017 +03:00 [INF] Default Quartz.NET properties loaded from embedded resource file
2024-02-04 19:21:33.056 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-02-04 19:21:33.061 +03:00 [INF] Quartz Scheduler created
2024-02-04 19:21:33.062 +03:00 [INF] RAMJobStore initialized.
2024-02-04 19:21:33.063 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-02-04 19:21:33.064 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-02-04 19:21:33.065 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-02-04 19:21:33.066 +03:00 [INF] JobFactory set to: TgCheckerApi.Job.QuartzJobFactory
2024-02-04 19:21:33.111 +03:00 [INF] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2024-02-04 19:21:33.194 +03:00 [INF] Now listening on: http://localhost:7256
2024-02-04 19:21:33.196 +03:00 [INF] Now listening on: http://localhost:5244
2024-02-04 19:21:33.200 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-04 19:21:33.201 +03:00 [INF] Hosting environment: Development
2024-02-04 19:21:33.202 +03:00 [INF] Content root path: C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\
2024-02-04 19:21:33.703 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 19:21:33.734 +03:00 [WRN] Failed to determine the https port for redirect.
2024-02-04 19:21:33.814 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/index.html - -
2024-02-04 19:21:33.821 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 19:21:33.854 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 19:21:33.856 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=nWfCfHtoMMAgf_9cUH_J8g - -
2024-02-04 19:21:33.858 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 157.4645ms
2024-02-04 19:21:33.858 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 19:21:34.050 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/index.html - - - 200 - text/html;charset=utf-8 235.7939ms
2024-02-04 19:21:34.067 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_vs/browserLink - -
2024-02-04 19:21:34.078 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 11.2415ms
2024-02-04 19:21:34.080 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - -
2024-02-04 19:21:34.084 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - - - 200 12356 application/javascript;+charset=utf-8 3.9308ms
2024-02-04 19:21:34.287 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - -
2024-02-04 19:21:34.414 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 127.4397ms
2024-02-04 19:21:43.328 +03:00 [INF] Start processing HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-04 19:21:43.337 +03:00 [INF] Sending HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-04 19:23:23.420 +03:00 [ERR] Error occurred executing UpdateSubscribersJob via HTTP request.
System.Threading.Tasks.TaskCanceledException: The request was canceled due to the configured HttpClient.Timeout of 100 seconds elapsing.
 ---> System.TimeoutException: The operation was canceled.
 ---> System.Threading.Tasks.TaskCanceledException: The operation was canceled.
 ---> System.IO.IOException: Unable to read data from the transport connection: The I/O operation has been aborted because of either a thread exit or an application request..
 ---> System.Net.Sockets.SocketException (995): The I/O operation has been aborted because of either a thread exit or an application request.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Security.SslStream.EnsureFullTlsFrameAsync[TIOAdapter](TIOAdapter adapter)
   at System.Net.Security.SslStream.ReadAsyncInternal[TIOAdapter](TIOAdapter adapter, Memory`1 buffer)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsyncCore(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsyncCore(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   --- End of inner exception stack trace ---
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpClient.HandleFailure(Exception e, Boolean telemetryStarted, HttpResponseMessage response, CancellationTokenSource cts, CancellationToken cancellationToken, CancellationTokenSource pendingRequestsCts)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at TgCheckerApi.Job.UpdateSubscribersJob.Execute(IJobExecutionContext context) in C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\Job\UpdateSubscribersJob.cs:line 49
2024-02-04 19:27:42.361 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Channel/80 - -
2024-02-04 19:27:42.363 +03:00 [INF] CORS policy execution successful.
2024-02-04 19:27:42.367 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.ChannelController.GetChannel (TgCheckerApi)'
2024-02-04 19:27:42.395 +03:00 [INF] Route matched with {action = "GetChannel", controller = "Channel"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TgCheckerApi.Models.GetModels.ChannelGetModel]] GetChannel(Int32) on controller TgCheckerApi.Controllers.ChannelController (TgCheckerApi).
2024-02-04 19:27:42.686 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:7256/api/Notification/UserNotifications - -
2024-02-04 19:27:42.687 +03:00 [INF] CORS policy execution successful.
2024-02-04 19:27:42.689 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:7256/api/Notification/UserNotifications - - - 204 - - 2.9555ms
2024-02-04 19:27:42.692 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification/UserNotifications - -
2024-02-04 19:27:42.694 +03:00 [INF] CORS policy execution successful.
2024-02-04 19:27:42.792 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetUserNotifications (TgCheckerApi)'
2024-02-04 19:27:42.796 +03:00 [INF] Route matched with {action = "GetUserNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetUserNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-04 19:27:45.516 +03:00 [INF] Executed DbCommand (102ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."Url", c."user"
FROM "Channel" AS c
WHERE c.id = @__p_0
LIMIT 1
2024-02-04 19:27:45.516 +03:00 [INF] Executed DbCommand (102ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "User" AS u
WHERE u.unique_key = @__uniqueKeyClaim_0
LIMIT 2
2024-02-04 19:27:45.737 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.user_id = @__user_Id_0
2024-02-04 19:27:45.781 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-04 19:27:45.805 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.BaseModels.Notification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-04 19:27:45.855 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetUserNotifications (TgCheckerApi) in 3041.3052ms
2024-02-04 19:27:45.857 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:27:45.858 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetUserNotifications (TgCheckerApi)'
2024-02-04 19:27:45.862 +03:00 [INF] Executing ObjectResult, writing value of type 'TgCheckerApi.Models.GetModels.ChannelGetModel'.
2024-02-04 19:27:45.877 +03:00 [INF] Executed action TgCheckerApi.Controllers.ChannelController.GetChannel (TgCheckerApi) in 3476.4911ms
2024-02-04 19:27:45.878 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.ChannelController.GetChannel (TgCheckerApi)'
2024-02-04 19:27:45.883 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Channel/80 - - - 200 15469 application/json;+charset=utf-8 3521.5737ms
2024-02-04 19:27:45.883 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification/UserNotifications - - - 200 524 application/json;+charset=utf-8 3190.5440ms
2024-02-04 19:27:45.963 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:7256/api/Auth - -
2024-02-04 19:27:45.964 +03:00 [INF] CORS policy execution successful.
2024-02-04 19:27:45.965 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:7256/api/Auth - - - 204 - - 1.7968ms
2024-02-04 19:27:45.966 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Auth - -
2024-02-04 19:27:45.967 +03:00 [INF] CORS policy execution successful.
2024-02-04 19:27:45.968 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 19:27:45.973 +03:00 [INF] Route matched with {action = "GetMe", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TgCheckerApi.Models.GetModels.UserProfileModel]] GetMe() on controller TgCheckerApi.Controllers.AuthController (TgCheckerApi).
2024-02-04 19:27:46.019 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Channel/Comments/80 - -
2024-02-04 19:27:46.020 +03:00 [INF] CORS policy execution successful.
2024-02-04 19:27:46.023 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.ChannelController.GetComments (TgCheckerApi)'
2024-02-04 19:27:46.027 +03:00 [INF] Route matched with {action = "GetComments", controller = "Channel"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[TgCheckerApi.Models.GetModels.CommentGetModel]]] GetComments(Int32) on controller TgCheckerApi.Controllers.ChannelController (TgCheckerApi).
2024-02-04 19:27:46.186 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__channelId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id, u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "Comment" AS c
INNER JOIN "User" AS u ON c.user_id = u.id
WHERE c.channel_id = @__channelId_0
2024-02-04 19:27:46.191 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.GetModels.CommentGetModel, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-04 19:27:46.196 +03:00 [INF] Executed action TgCheckerApi.Controllers.ChannelController.GetComments (TgCheckerApi) in 166.8715ms
2024-02-04 19:27:46.197 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.ChannelController.GetComments (TgCheckerApi)'
2024-02-04 19:27:46.198 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Channel/Comments/80 - - - 200 2 application/json;+charset=utf-8 178.7715ms
2024-02-04 19:27:46.275 +03:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2024-02-04 19:27:46.287 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.avatar, t.chat_id, t.last_update, t.notification_settings, t.telegram_id, t.unique_key, t.username, t1.id, t1.channel_id, t1.user_id, t1.id0, t1.avatar, t1.bumps, t1.description, t1.flag, t1."Hidden", t1.language, t1.last_bump, t1.members, t1.name, t1.notification_sent, t1.notifications, t1.promo_post, t1.promo_post_interval, t1.promo_post_last, t1.promo_post_sent, t1.promo_post_time, t1.telegram_id, t1."Url", t1."user", t1.id1, t1.channel, t1.tag, t1.id00, t1.text, t3.id, t3.channel_id, t3.content, t3.created_at, t3.parent_id, t3.rating, t3.user_id, t3.id0, t3.avatar, t3.bumps, t3.description, t3.flag, t3."Hidden", t3.language, t3.last_bump, t3.members, t3.name, t3.notification_sent, t3.notifications, t3.promo_post, t3.promo_post_interval, t3.promo_post_last, t3.promo_post_sent, t3.promo_post_time, t3.telegram_id, t3."Url", t3."user"
FROM (
    SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
    FROM "User" AS u
    WHERE u.unique_key = @__uniqueKeyClaim_0
    LIMIT 2
) AS t
LEFT JOIN (
    SELECT c.id, c.channel_id, c.user_id, c0.id AS id0, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."Url", c0."user", t0.id AS id1, t0.channel, t0.tag, t0.id0 AS id00, t0.text
    FROM "ChannelAccess" AS c
    LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
    LEFT JOIN (
        SELECT c1.id, c1.channel, c1.tag, t2.id AS id0, t2.text
        FROM "ChannelHasTag" AS c1
        LEFT JOIN "Tag" AS t2 ON c1.tag = t2.id
    ) AS t0 ON c0.id = t0.channel
) AS t1 ON t.id = t1.user_id
LEFT JOIN (
    SELECT c2.id, c2.channel_id, c2.content, c2.created_at, c2.parent_id, c2.rating, c2.user_id, c3.id AS id0, c3.avatar, c3.bumps, c3.description, c3.flag, c3."Hidden", c3.language, c3.last_bump, c3.members, c3.name, c3.notification_sent, c3.notifications, c3.promo_post, c3.promo_post_interval, c3.promo_post_last, c3.promo_post_sent, c3.promo_post_time, c3.telegram_id, c3."Url", c3."user"
    FROM "Comment" AS c2
    INNER JOIN "Channel" AS c3 ON c2.channel_id = c3.id
) AS t3 ON t.id = t3.user_id
ORDER BY t.id, t1.id, t1.id0, t1.id1, t1.id00, t3.id
2024-02-04 19:27:46.364 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:27:46.370 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:27:46.378 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:27:46.386 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 19:27:46.415 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 19:27:46.524 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 19:27:46.559 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 19:27:46.600 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 19:27:46.606 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:27:46.609 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:27:46.611 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:27:46.614 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 19:27:46.619 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 19:27:46.622 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 19:27:46.647 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 19:27:46.651 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 19:27:46.655 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:27:46.658 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:27:46.662 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:27:46.666 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 19:27:46.668 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 19:27:46.671 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 19:27:46.673 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 19:27:46.677 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 19:27:46.679 +03:00 [INF] Executing OkObjectResult, writing value of type 'TgCheckerApi.Models.GetModels.UserProfileModel'.
2024-02-04 19:27:46.687 +03:00 [INF] Executed action TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi) in 712.4601ms
2024-02-04 19:27:46.688 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 19:27:46.688 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Auth - -
2024-02-04 19:27:46.690 +03:00 [INF] CORS policy execution successful.
2024-02-04 19:27:46.689 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Auth - - - 200 25324 application/json;+charset=utf-8 722.8474ms
2024-02-04 19:27:46.690 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 19:27:46.692 +03:00 [INF] Route matched with {action = "GetMe", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TgCheckerApi.Models.GetModels.UserProfileModel]] GetMe() on controller TgCheckerApi.Controllers.AuthController (TgCheckerApi).
2024-02-04 19:27:46.701 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.avatar, t.chat_id, t.last_update, t.notification_settings, t.telegram_id, t.unique_key, t.username, t1.id, t1.channel_id, t1.user_id, t1.id0, t1.avatar, t1.bumps, t1.description, t1.flag, t1."Hidden", t1.language, t1.last_bump, t1.members, t1.name, t1.notification_sent, t1.notifications, t1.promo_post, t1.promo_post_interval, t1.promo_post_last, t1.promo_post_sent, t1.promo_post_time, t1.telegram_id, t1."Url", t1."user", t1.id1, t1.channel, t1.tag, t1.id00, t1.text, t3.id, t3.channel_id, t3.content, t3.created_at, t3.parent_id, t3.rating, t3.user_id, t3.id0, t3.avatar, t3.bumps, t3.description, t3.flag, t3."Hidden", t3.language, t3.last_bump, t3.members, t3.name, t3.notification_sent, t3.notifications, t3.promo_post, t3.promo_post_interval, t3.promo_post_last, t3.promo_post_sent, t3.promo_post_time, t3.telegram_id, t3."Url", t3."user"
FROM (
    SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
    FROM "User" AS u
    WHERE u.unique_key = @__uniqueKeyClaim_0
    LIMIT 2
) AS t
LEFT JOIN (
    SELECT c.id, c.channel_id, c.user_id, c0.id AS id0, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."Url", c0."user", t0.id AS id1, t0.channel, t0.tag, t0.id0 AS id00, t0.text
    FROM "ChannelAccess" AS c
    LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
    LEFT JOIN (
        SELECT c1.id, c1.channel, c1.tag, t2.id AS id0, t2.text
        FROM "ChannelHasTag" AS c1
        LEFT JOIN "Tag" AS t2 ON c1.tag = t2.id
    ) AS t0 ON c0.id = t0.channel
) AS t1 ON t.id = t1.user_id
LEFT JOIN (
    SELECT c2.id, c2.channel_id, c2.content, c2.created_at, c2.parent_id, c2.rating, c2.user_id, c3.id AS id0, c3.avatar, c3.bumps, c3.description, c3.flag, c3."Hidden", c3.language, c3.last_bump, c3.members, c3.name, c3.notification_sent, c3.notifications, c3.promo_post, c3.promo_post_interval, c3.promo_post_last, c3.promo_post_sent, c3.promo_post_time, c3.telegram_id, c3."Url", c3."user"
    FROM "Comment" AS c2
    INNER JOIN "Channel" AS c3 ON c2.channel_id = c3.id
) AS t3 ON t.id = t3.user_id
ORDER BY t.id, t1.id, t1.id0, t1.id1, t1.id00, t3.id
2024-02-04 19:27:46.707 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:27:46.710 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:27:46.712 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:27:46.714 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 19:27:46.717 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 19:27:46.720 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 19:27:46.724 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 19:27:46.726 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 19:27:46.729 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:27:46.731 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:27:46.733 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:27:46.736 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 19:27:46.739 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 19:27:46.741 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 19:27:46.743 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 19:27:46.745 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 19:27:46.748 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:27:46.750 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:27:46.752 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:27:46.755 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 19:27:46.757 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 19:27:46.760 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 19:27:46.762 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 19:27:46.764 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 19:27:46.766 +03:00 [INF] Executing OkObjectResult, writing value of type 'TgCheckerApi.Models.GetModels.UserProfileModel'.
2024-02-04 19:27:46.767 +03:00 [INF] Executed action TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi) in 73.5272ms
2024-02-04 19:27:46.768 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 19:27:46.770 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Auth - - - 200 25324 application/json;+charset=utf-8 81.2980ms
2024-02-04 19:27:46.801 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:7256/api/Bot/getDailyViewsByChannel - -
2024-02-04 19:27:46.802 +03:00 [INF] CORS policy execution successful.
2024-02-04 19:27:46.803 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:7256/api/Bot/getDailyViewsByChannel - - - 204 - - 1.9341ms
2024-02-04 19:27:46.804 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/api/Bot/getDailyViewsByChannel application/json;+charset=utf-8 34
2024-02-04 19:27:46.805 +03:00 [INF] CORS policy execution successful.
2024-02-04 19:27:46.806 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.BotController.CallGetDailyViewsByChannel (TgCheckerApi)'
2024-02-04 19:27:46.810 +03:00 [INF] Route matched with {action = "CallGetDailyViewsByChannel", controller = "Bot"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CallGetDailyViewsByChannel(DailyViewsRequest) on controller TgCheckerApi.Controllers.BotController (TgCheckerApi).
2024-02-04 19:27:46.883 +03:00 [INF] Starting CallGetDailyViewsByChannel method for ChannelId: 80
2024-02-04 19:27:46.887 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."Url", c."user"
FROM "Channel" AS c
WHERE c.id = @__p_0
LIMIT 1
2024-02-04 19:27:46.937 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__dailyViewsRequest_ChannelId_0='?' (DbType = Int32), @__startDate_1='?' (DbType = DateTime), @__endDate_2='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT v.id, v.date, v.last_message_id, v.sheet, v.updated, v.views
FROM "Channel" AS c
INNER JOIN "StatisticsSheet" AS s ON c.id = s.channel_id
INNER JOIN "ViewsRecord" AS v ON s.id = v.sheet
WHERE c.id = @__dailyViewsRequest_ChannelId_0 AND v.date >= @__startDate_1 AND v.date <= @__endDate_2
ORDER BY v.date
2024-02-04 19:27:46.952 +03:00 [INF] Starting IsUpdateRequiredForChannel method.
2024-02-04 19:27:46.953 +03:00 [INF] Parameters: ChannelId=80, NumberOfDays=31
2024-02-04 19:27:46.954 +03:00 [INF] Outdated threshold set to 1 minutes.
2024-02-04 19:27:46.955 +03:00 [INF] Checking records from 1/4/2024 12:00:00 AM to 2/4/2024 12:00:00 AM.
2024-02-04 19:27:46.962 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__dailyViewsRequest_ChannelId_0='?' (DbType = Int32), @__startDate_1='?' (DbType = DateTime), @__today_2='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT v.id, v.date, v.last_message_id, v.sheet, v.updated, v.views
FROM "Channel" AS c
INNER JOIN "StatisticsSheet" AS s ON c.id = s.channel_id
INNER JOIN "ViewsRecord" AS v ON s.id = v.sheet
WHERE c.id = @__dailyViewsRequest_ChannelId_0 AND v.date >= @__startDate_1 AND v.date <= @__today_2
2024-02-04 19:27:46.964 +03:00 [INF] 33 records found in date range.
2024-02-04 19:27:46.965 +03:00 [INF] Update required: True
2024-02-04 19:27:46.966 +03:00 [INF] Data is complete but outdated for ChannelId: 80. Initiating background update.
2024-02-04 19:27:46.977 +03:00 [INF] Received request for getDailyViewsByChannel. Request hash: c6767b8ee142f671c867e1e027dd0a6208f626fc9642fe406290e52e2784b620
2024-02-04 19:27:47.007 +03:00 [INF] Returning data for ChannelId: 80 with 32 view counts
2024-02-04 19:27:47.008 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.Int32, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-02-04 19:27:47.009 +03:00 [INF] Executed action TgCheckerApi.Controllers.BotController.CallGetDailyViewsByChannel (TgCheckerApi) in 197.8181ms
2024-02-04 19:27:47.010 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.BotController.CallGetDailyViewsByChannel (TgCheckerApi)'
2024-02-04 19:27:47.012 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/api/Bot/getDailyViewsByChannel application/json;+charset=utf-8 34 - 200 129 application/json;+charset=utf-8 208.3239ms
2024-02-04 19:28:08.561 +03:00 [ERR] Failed to invoke hub method 'ReceiveStream'.
System.OperationCanceledException: The underlying connection was closed.
   at System.Threading.Channels.AsyncOperation`1.GetResult(Int16 token)
   at System.Threading.Channels.ChannelReader`1.ReadAllAsync(CancellationToken cancellationToken)+MoveNext()
   at System.Threading.Channels.ChannelReader`1.ReadAllAsync(CancellationToken cancellationToken)+System.Threading.Tasks.Sources.IValueTaskSource<System.Boolean>.GetResult()
   at TgCheckerApi.Websockets.BotHub.ReceiveStream(IAsyncEnumerable`1 stream, String param) in C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\Websockets\BotHub.cs:line 39
   at TgCheckerApi.Websockets.BotHub.ReceiveStream(IAsyncEnumerable`1 stream, String param) in C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\Websockets\BotHub.cs:line 39
   at Microsoft.AspNetCore.SignalR.Internal.DefaultHubDispatcher`1.ExecuteMethod(ObjectMethodExecutor methodExecutor, Hub hub, Object[] arguments)
   at Microsoft.AspNetCore.SignalR.Internal.DefaultHubDispatcher`1.<Invoke>g__ExecuteInvocation|16_0(DefaultHubDispatcher`1 dispatcher, ObjectMethodExecutor methodExecutor, THub hub, Object[] arguments, AsyncServiceScope scope, IHubActivator`1 hubActivator, HubConnectionContext connection, HubMethodInvocationMessage hubMethodInvocationMessage, Boolean isStreamCall)
2024-02-04 19:28:08.564 +03:00 [INF] Executed endpoint '/BotHub'
2024-02-04 19:28:08.568 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/BotHub?id=nWfCfHtoMMAgf_9cUH_J8g - - - 101 - - 394711.5813ms
2024-02-04 19:28:12.194 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-04 19:28:12.195 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-04 19:28:12.196 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-04 19:28:12.197 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 2.9952ms
2024-02-04 19:28:12.210 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=W-RojqNxfIe-nU30pEuj8g - -
2024-02-04 19:28:12.216 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-04 19:28:17.017 +03:00 [WRN] New task timed out. Hash: c6767b8ee142f671c867e1e027dd0a6208f626fc9642fe406290e52e2784b620
2024-02-04 19:28:17.019 +03:00 [WRN] Invalid or no response from WebSocket service for ChannelId: 80
2024-02-04 19:28:19.140 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Channel/80 - -
2024-02-04 19:28:19.141 +03:00 [INF] CORS policy execution successful.
2024-02-04 19:28:19.141 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.ChannelController.GetChannel (TgCheckerApi)'
2024-02-04 19:28:19.142 +03:00 [INF] Route matched with {action = "GetChannel", controller = "Channel"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TgCheckerApi.Models.GetModels.ChannelGetModel]] GetChannel(Int32) on controller TgCheckerApi.Controllers.ChannelController (TgCheckerApi).
2024-02-04 19:28:19.146 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."Url", c."user"
FROM "Channel" AS c
WHERE c.id = @__p_0
LIMIT 1
2024-02-04 19:28:19.149 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag
FROM "ChannelHasTag" AS c
WHERE c.channel = @__channel_Id_0
2024-02-04 19:28:19.152 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:28:19.154 +03:00 [INF] Executing ObjectResult, writing value of type 'TgCheckerApi.Models.GetModels.ChannelGetModel'.
2024-02-04 19:28:19.155 +03:00 [INF] Executed action TgCheckerApi.Controllers.ChannelController.GetChannel (TgCheckerApi) in 10.7672ms
2024-02-04 19:28:19.156 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.ChannelController.GetChannel (TgCheckerApi)'
2024-02-04 19:28:19.157 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Channel/80 - - - 200 15469 application/json;+charset=utf-8 16.7869ms
2024-02-04 19:28:19.577 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Channel/Comments/80 - -
2024-02-04 19:28:19.578 +03:00 [INF] CORS policy execution successful.
2024-02-04 19:28:19.581 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.ChannelController.GetComments (TgCheckerApi)'
2024-02-04 19:28:19.582 +03:00 [INF] Route matched with {action = "GetComments", controller = "Channel"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[TgCheckerApi.Models.GetModels.CommentGetModel]]] GetComments(Int32) on controller TgCheckerApi.Controllers.ChannelController (TgCheckerApi).
2024-02-04 19:28:19.585 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__channelId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id, u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "Comment" AS c
INNER JOIN "User" AS u ON c.user_id = u.id
WHERE c.channel_id = @__channelId_0
2024-02-04 19:28:19.589 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.GetModels.CommentGetModel, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-04 19:28:19.591 +03:00 [INF] Executed action TgCheckerApi.Controllers.ChannelController.GetComments (TgCheckerApi) in 7.2537ms
2024-02-04 19:28:19.592 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.ChannelController.GetComments (TgCheckerApi)'
2024-02-04 19:28:19.594 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Channel/Comments/80 - - - 200 2 application/json;+charset=utf-8 16.0617ms
2024-02-04 19:28:19.632 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:7256/api/Auth - -
2024-02-04 19:28:19.633 +03:00 [INF] CORS policy execution successful.
2024-02-04 19:28:19.634 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:7256/api/Auth - - - 204 - - 1.6833ms
2024-02-04 19:28:19.635 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Auth - -
2024-02-04 19:28:19.636 +03:00 [INF] CORS policy execution successful.
2024-02-04 19:28:19.636 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 19:28:19.637 +03:00 [INF] Route matched with {action = "GetMe", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TgCheckerApi.Models.GetModels.UserProfileModel]] GetMe() on controller TgCheckerApi.Controllers.AuthController (TgCheckerApi).
2024-02-04 19:28:19.643 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.avatar, t.chat_id, t.last_update, t.notification_settings, t.telegram_id, t.unique_key, t.username, t1.id, t1.channel_id, t1.user_id, t1.id0, t1.avatar, t1.bumps, t1.description, t1.flag, t1."Hidden", t1.language, t1.last_bump, t1.members, t1.name, t1.notification_sent, t1.notifications, t1.promo_post, t1.promo_post_interval, t1.promo_post_last, t1.promo_post_sent, t1.promo_post_time, t1.telegram_id, t1."Url", t1."user", t1.id1, t1.channel, t1.tag, t1.id00, t1.text, t3.id, t3.channel_id, t3.content, t3.created_at, t3.parent_id, t3.rating, t3.user_id, t3.id0, t3.avatar, t3.bumps, t3.description, t3.flag, t3."Hidden", t3.language, t3.last_bump, t3.members, t3.name, t3.notification_sent, t3.notifications, t3.promo_post, t3.promo_post_interval, t3.promo_post_last, t3.promo_post_sent, t3.promo_post_time, t3.telegram_id, t3."Url", t3."user"
FROM (
    SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
    FROM "User" AS u
    WHERE u.unique_key = @__uniqueKeyClaim_0
    LIMIT 2
) AS t
LEFT JOIN (
    SELECT c.id, c.channel_id, c.user_id, c0.id AS id0, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."Url", c0."user", t0.id AS id1, t0.channel, t0.tag, t0.id0 AS id00, t0.text
    FROM "ChannelAccess" AS c
    LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
    LEFT JOIN (
        SELECT c1.id, c1.channel, c1.tag, t2.id AS id0, t2.text
        FROM "ChannelHasTag" AS c1
        LEFT JOIN "Tag" AS t2 ON c1.tag = t2.id
    ) AS t0 ON c0.id = t0.channel
) AS t1 ON t.id = t1.user_id
LEFT JOIN (
    SELECT c2.id, c2.channel_id, c2.content, c2.created_at, c2.parent_id, c2.rating, c2.user_id, c3.id AS id0, c3.avatar, c3.bumps, c3.description, c3.flag, c3."Hidden", c3.language, c3.last_bump, c3.members, c3.name, c3.notification_sent, c3.notifications, c3.promo_post, c3.promo_post_interval, c3.promo_post_last, c3.promo_post_sent, c3.promo_post_time, c3.telegram_id, c3."Url", c3."user"
    FROM "Comment" AS c2
    INNER JOIN "Channel" AS c3 ON c2.channel_id = c3.id
) AS t3 ON t.id = t3.user_id
ORDER BY t.id, t1.id, t1.id0, t1.id1, t1.id00, t3.id
2024-02-04 19:28:19.649 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:28:19.652 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:28:19.655 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:28:19.657 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 19:28:19.660 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 19:28:19.663 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 19:28:19.666 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 19:28:19.669 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 19:28:19.672 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:28:19.673 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:7256/api/Notification/UserNotifications - -
2024-02-04 19:28:19.675 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:28:19.675 +03:00 [INF] CORS policy execution successful.
2024-02-04 19:28:19.678 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:7256/api/Notification/UserNotifications - - - 204 - - 5.0767ms
2024-02-04 19:28:19.678 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:28:19.679 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification/UserNotifications - -
2024-02-04 19:28:19.681 +03:00 [INF] CORS policy execution successful.
2024-02-04 19:28:19.682 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 19:28:19.684 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetUserNotifications (TgCheckerApi)'
2024-02-04 19:28:19.685 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 19:28:19.685 +03:00 [INF] Route matched with {action = "GetUserNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetUserNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-04 19:28:19.688 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 19:28:19.692 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "User" AS u
WHERE u.unique_key = @__uniqueKeyClaim_0
LIMIT 2
2024-02-04 19:28:19.693 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 19:28:19.696 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.user_id = @__user_Id_0
2024-02-04 19:28:19.697 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 19:28:19.699 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.BaseModels.Notification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-04 19:28:19.702 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetUserNotifications (TgCheckerApi) in 13.2791ms
2024-02-04 19:28:19.702 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:28:19.703 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetUserNotifications (TgCheckerApi)'
2024-02-04 19:28:19.706 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:28:19.706 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification/UserNotifications - - - 200 524 application/json;+charset=utf-8 27.4934ms
2024-02-04 19:28:19.709 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:28:19.712 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 19:28:19.715 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 19:28:19.719 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 19:28:19.723 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 19:28:19.726 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 19:28:19.728 +03:00 [INF] Executing OkObjectResult, writing value of type 'TgCheckerApi.Models.GetModels.UserProfileModel'.
2024-02-04 19:28:19.730 +03:00 [INF] Executed action TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi) in 90.5299ms
2024-02-04 19:28:19.731 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 19:28:19.731 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Auth - -
2024-02-04 19:28:19.732 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Auth - - - 200 25324 application/json;+charset=utf-8 97.0384ms
2024-02-04 19:28:19.733 +03:00 [INF] CORS policy execution successful.
2024-02-04 19:28:19.734 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 19:28:19.735 +03:00 [INF] Route matched with {action = "GetMe", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TgCheckerApi.Models.GetModels.UserProfileModel]] GetMe() on controller TgCheckerApi.Controllers.AuthController (TgCheckerApi).
2024-02-04 19:28:19.743 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__uniqueKeyClaim_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.avatar, t.chat_id, t.last_update, t.notification_settings, t.telegram_id, t.unique_key, t.username, t1.id, t1.channel_id, t1.user_id, t1.id0, t1.avatar, t1.bumps, t1.description, t1.flag, t1."Hidden", t1.language, t1.last_bump, t1.members, t1.name, t1.notification_sent, t1.notifications, t1.promo_post, t1.promo_post_interval, t1.promo_post_last, t1.promo_post_sent, t1.promo_post_time, t1.telegram_id, t1."Url", t1."user", t1.id1, t1.channel, t1.tag, t1.id00, t1.text, t3.id, t3.channel_id, t3.content, t3.created_at, t3.parent_id, t3.rating, t3.user_id, t3.id0, t3.avatar, t3.bumps, t3.description, t3.flag, t3."Hidden", t3.language, t3.last_bump, t3.members, t3.name, t3.notification_sent, t3.notifications, t3.promo_post, t3.promo_post_interval, t3.promo_post_last, t3.promo_post_sent, t3.promo_post_time, t3.telegram_id, t3."Url", t3."user"
FROM (
    SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
    FROM "User" AS u
    WHERE u.unique_key = @__uniqueKeyClaim_0
    LIMIT 2
) AS t
LEFT JOIN (
    SELECT c.id, c.channel_id, c.user_id, c0.id AS id0, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."Url", c0."user", t0.id AS id1, t0.channel, t0.tag, t0.id0 AS id00, t0.text
    FROM "ChannelAccess" AS c
    LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
    LEFT JOIN (
        SELECT c1.id, c1.channel, c1.tag, t2.id AS id0, t2.text
        FROM "ChannelHasTag" AS c1
        LEFT JOIN "Tag" AS t2 ON c1.tag = t2.id
    ) AS t0 ON c0.id = t0.channel
) AS t1 ON t.id = t1.user_id
LEFT JOIN (
    SELECT c2.id, c2.channel_id, c2.content, c2.created_at, c2.parent_id, c2.rating, c2.user_id, c3.id AS id0, c3.avatar, c3.bumps, c3.description, c3.flag, c3."Hidden", c3.language, c3.last_bump, c3.members, c3.name, c3.notification_sent, c3.notifications, c3.promo_post, c3.promo_post_interval, c3.promo_post_last, c3.promo_post_sent, c3.promo_post_time, c3.telegram_id, c3."Url", c3."user"
    FROM "Comment" AS c2
    INNER JOIN "Channel" AS c3 ON c2.channel_id = c3.id
) AS t3 ON t.id = t3.user_id
ORDER BY t.id, t1.id, t1.id0, t1.id1, t1.id00, t3.id
2024-02-04 19:28:19.749 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:28:19.753 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:28:19.755 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:28:19.758 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 19:28:19.760 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 19:28:19.764 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 19:28:19.766 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 19:28:19.769 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 19:28:19.772 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:28:19.775 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:28:19.779 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:28:19.781 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:7256/api/Bot/getDailyViewsByChannel - -
2024-02-04 19:28:19.781 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 19:28:19.781 +03:00 [INF] CORS policy execution successful.
2024-02-04 19:28:19.785 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:7256/api/Bot/getDailyViewsByChannel - - - 204 - - 4.0004ms
2024-02-04 19:28:19.785 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 19:28:19.785 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/api/Bot/getDailyViewsByChannel application/json;+charset=utf-8 34
2024-02-04 19:28:19.788 +03:00 [INF] CORS policy execution successful.
2024-02-04 19:28:19.788 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 19:28:19.791 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.BotController.CallGetDailyViewsByChannel (TgCheckerApi)'
2024-02-04 19:28:19.791 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 19:28:19.791 +03:00 [INF] Route matched with {action = "CallGetDailyViewsByChannel", controller = "Bot"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CallGetDailyViewsByChannel(DailyViewsRequest) on controller TgCheckerApi.Controllers.BotController (TgCheckerApi).
2024-02-04 19:28:19.794 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 19:28:19.795 +03:00 [INF] Starting CallGetDailyViewsByChannel method for ChannelId: 80
2024-02-04 19:28:19.797 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id
FROM "ChannelAccess" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:28:19.798 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."Url", c."user"
FROM "Channel" AS c
WHERE c.id = @__p_0
LIMIT 1
2024-02-04 19:28:19.801 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:28:19.803 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__dailyViewsRequest_ChannelId_0='?' (DbType = Int32), @__startDate_1='?' (DbType = DateTime), @__endDate_2='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT v.id, v.date, v.last_message_id, v.sheet, v.updated, v.views
FROM "Channel" AS c
INNER JOIN "StatisticsSheet" AS s ON c.id = s.channel_id
INNER JOIN "ViewsRecord" AS v ON s.id = v.sheet
WHERE c.id = @__dailyViewsRequest_ChannelId_0 AND v.date >= @__startDate_1 AND v.date <= @__endDate_2
ORDER BY v.date
2024-02-04 19:28:19.805 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.content, c.created_at, c.parent_id, c.rating, c.user_id
FROM "Comment" AS c
WHERE c.channel_id = @__p_0
2024-02-04 19:28:19.807 +03:00 [INF] Starting IsUpdateRequiredForChannel method.
2024-02-04 19:28:19.808 +03:00 [INF] Parameters: ChannelId=80, NumberOfDays=31
2024-02-04 19:28:19.808 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.channel_id, n.content, n.date, n.is_new, n.type_id, n.user_id
FROM "Notification" AS n
WHERE n.channel_id = @__p_0
2024-02-04 19:28:19.809 +03:00 [INF] Outdated threshold set to 1 minutes.
2024-02-04 19:28:19.811 +03:00 [INF] Checking records from 1/4/2024 12:00:00 AM to 2/4/2024 12:00:00 AM.
2024-02-04 19:28:19.811 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p.id, p.amount_currency, p.amount_value, p.capture, p.capture_json, p.captured_at, p.channel_id, p.client_ip, p.created_at, p.description, p.duration, p.expires_at, p.full_json, p.paid, p.payment_method, p.status, p.sub_given, p.subtype_id, p.user_id
FROM "Payments" AS p
WHERE p.channel_id = @__p_0
2024-02-04 19:28:19.813 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__dailyViewsRequest_ChannelId_0='?' (DbType = Int32), @__startDate_1='?' (DbType = DateTime), @__today_2='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT v.id, v.date, v.last_message_id, v.sheet, v.updated, v.views
FROM "Channel" AS c
INNER JOIN "StatisticsSheet" AS s ON c.id = s.channel_id
INNER JOIN "ViewsRecord" AS v ON s.id = v.sheet
WHERE c.id = @__dailyViewsRequest_ChannelId_0 AND v.date >= @__startDate_1 AND v.date <= @__today_2
2024-02-04 19:28:19.815 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r.id, r.channel_id, r.comment_id, r.notification_sent, r.reason, r.report_time, r.report_type, r.staff_id, r.status, r.text, r.user_id
FROM "Report" AS r
WHERE r.channel_id = @__p_0
2024-02-04 19:28:19.816 +03:00 [INF] 33 records found in date range.
2024-02-04 19:28:19.818 +03:00 [INF] Update required: True
2024-02-04 19:28:19.819 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s.channel_id
FROM "StatisticsSheet" AS s
WHERE s.channel_id = @__p_0
2024-02-04 19:28:19.819 +03:00 [INF] Data is complete but outdated for ChannelId: 80. Initiating background update.
2024-02-04 19:28:19.822 +03:00 [INF] Received request for getDailyViewsByChannel. Request hash: c6767b8ee142f671c867e1e027dd0a6208f626fc9642fe406290e52e2784b620
2024-02-04 19:28:19.822 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t."autoRenewal", t."channelId", t.channel_name, t.discount, t.duration, t.expires, t.price, t.status, t.subscription_type_id, t."userId", t.username
FROM "TelegramPayments" AS t
WHERE t."channelId" = @__p_0
2024-02-04 19:28:19.823 +03:00 [INF] Returning data for ChannelId: 80 with 32 view counts
2024-02-04 19:28:19.824 +03:00 [INF] Executing OkObjectResult, writing value of type 'TgCheckerApi.Models.GetModels.UserProfileModel'.
2024-02-04 19:28:19.825 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[System.Int32, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-02-04 19:28:19.826 +03:00 [INF] Executed action TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi) in 89.2096ms
2024-02-04 19:28:19.828 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.AuthController.GetMe (TgCheckerApi)'
2024-02-04 19:28:19.827 +03:00 [INF] Executed action TgCheckerApi.Controllers.BotController.CallGetDailyViewsByChannel (TgCheckerApi) in 32.3914ms
2024-02-04 19:28:19.829 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Auth - - - 200 25324 application/json;+charset=utf-8 97.9319ms
2024-02-04 19:28:19.830 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.BotController.CallGetDailyViewsByChannel (TgCheckerApi)'
2024-02-04 19:28:19.831 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/api/Bot/getDailyViewsByChannel application/json;+charset=utf-8 34 - 200 129 application/json;+charset=utf-8 45.8695ms
2024-02-04 19:28:34.246 +03:00 [INF] New task completed successfully. Hash: c6767b8ee142f671c867e1e027dd0a6208f626fc9642fe406290e52e2784b620
2024-02-04 19:28:34.279 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__channelId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.avatar, t.bumps, t.description, t.flag, t."Hidden", t.language, t.last_bump, t.members, t.name, t.notification_sent, t.notifications, t.promo_post, t.promo_post_interval, t.promo_post_last, t.promo_post_sent, t.promo_post_time, t.telegram_id, t."Url", t."user", s.id, s.channel_id
FROM (
    SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."Url", c."user"
    FROM "Channel" AS c
    WHERE c.id = @__channelId_0
    LIMIT 1
) AS t
LEFT JOIN "StatisticsSheet" AS s ON t.id = s.channel_id
ORDER BY t.id
2024-02-04 19:28:34.290 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT v.id, v.date, v.last_message_id, v.sheet, v.updated, v.views
FROM "ViewsRecord" AS v
WHERE v.sheet = @__p_0
2024-02-04 19:28:34.434 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime), @p3='?' (DbType = Int32), @p2='?' (DbType = DateTime), @p5='?' (DbType = Int32), @p4='?' (DbType = DateTime), @p7='?' (DbType = Int32), @p6='?' (DbType = DateTime), @p9='?' (DbType = Int32), @p8='?' (DbType = DateTime), @p11='?' (DbType = Int32), @p10='?' (DbType = DateTime), @p13='?' (DbType = Int32), @p12='?' (DbType = DateTime), @p15='?' (DbType = Int32), @p14='?' (DbType = DateTime), @p17='?' (DbType = Int32), @p16='?' (DbType = DateTime), @p19='?' (DbType = Int32), @p18='?' (DbType = DateTime), @p21='?' (DbType = Int32), @p20='?' (DbType = DateTime), @p23='?' (DbType = Int32), @p22='?' (DbType = DateTime), @p25='?' (DbType = Int32), @p24='?' (DbType = DateTime), @p27='?' (DbType = Int32), @p26='?' (DbType = DateTime), @p29='?' (DbType = Int32), @p28='?' (DbType = DateTime), @p31='?' (DbType = Int32), @p30='?' (DbType = DateTime), @p33='?' (DbType = Int32), @p32='?' (DbType = DateTime), @p35='?' (DbType = Int32), @p34='?' (DbType = DateTime), @p37='?' (DbType = Int32), @p36='?' (DbType = DateTime), @p39='?' (DbType = Int32), @p38='?' (DbType = DateTime), @p41='?' (DbType = Int32), @p40='?' (DbType = DateTime), @p43='?' (DbType = Int32), @p42='?' (DbType = DateTime), @p45='?' (DbType = Int32), @p44='?' (DbType = DateTime), @p47='?' (DbType = Int32), @p46='?' (DbType = DateTime), @p49='?' (DbType = Int32), @p48='?' (DbType = DateTime), @p52='?' (DbType = Int32), @p50='?' (DbType = DateTime), @p51='?' (DbType = Int32), @p55='?' (DbType = Int32), @p53='?' (DbType = DateTime), @p54='?' (DbType = Int32), @p57='?' (DbType = Int32), @p56='?' (DbType = DateTime), @p59='?' (DbType = Int32), @p58='?' (DbType = DateTime), @p61='?' (DbType = Int32), @p60='?' (DbType = DateTime), @p63='?' (DbType = Int32), @p62='?' (DbType = DateTime), @p65='?' (DbType = Int32), @p64='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "ViewsRecord" SET updated = @p0
WHERE id = @p1;
UPDATE "ViewsRecord" SET updated = @p2
WHERE id = @p3;
UPDATE "ViewsRecord" SET updated = @p4
WHERE id = @p5;
UPDATE "ViewsRecord" SET updated = @p6
WHERE id = @p7;
UPDATE "ViewsRecord" SET updated = @p8
WHERE id = @p9;
UPDATE "ViewsRecord" SET updated = @p10
WHERE id = @p11;
UPDATE "ViewsRecord" SET updated = @p12
WHERE id = @p13;
UPDATE "ViewsRecord" SET updated = @p14
WHERE id = @p15;
UPDATE "ViewsRecord" SET updated = @p16
WHERE id = @p17;
UPDATE "ViewsRecord" SET updated = @p18
WHERE id = @p19;
UPDATE "ViewsRecord" SET updated = @p20
WHERE id = @p21;
UPDATE "ViewsRecord" SET updated = @p22
WHERE id = @p23;
UPDATE "ViewsRecord" SET updated = @p24
WHERE id = @p25;
UPDATE "ViewsRecord" SET updated = @p26
WHERE id = @p27;
UPDATE "ViewsRecord" SET updated = @p28
WHERE id = @p29;
UPDATE "ViewsRecord" SET updated = @p30
WHERE id = @p31;
UPDATE "ViewsRecord" SET updated = @p32
WHERE id = @p33;
UPDATE "ViewsRecord" SET updated = @p34
WHERE id = @p35;
UPDATE "ViewsRecord" SET updated = @p36
WHERE id = @p37;
UPDATE "ViewsRecord" SET updated = @p38
WHERE id = @p39;
UPDATE "ViewsRecord" SET updated = @p40
WHERE id = @p41;
UPDATE "ViewsRecord" SET updated = @p42
WHERE id = @p43;
UPDATE "ViewsRecord" SET updated = @p44
WHERE id = @p45;
UPDATE "ViewsRecord" SET updated = @p46
WHERE id = @p47;
UPDATE "ViewsRecord" SET updated = @p48
WHERE id = @p49;
UPDATE "ViewsRecord" SET updated = @p50, views = @p51
WHERE id = @p52;
UPDATE "ViewsRecord" SET updated = @p53, views = @p54
WHERE id = @p55;
UPDATE "ViewsRecord" SET updated = @p56
WHERE id = @p57;
UPDATE "ViewsRecord" SET updated = @p58
WHERE id = @p59;
UPDATE "ViewsRecord" SET updated = @p60
WHERE id = @p61;
UPDATE "ViewsRecord" SET updated = @p62
WHERE id = @p63;
UPDATE "ViewsRecord" SET updated = @p64
WHERE id = @p65;
2024-02-04 19:28:34.494 +03:00 [INF] Successfully updated database with new records for ChannelId: 80
2024-02-04 19:39:11.733 +03:00 [INF] Executed endpoint '/BotHub'
2024-02-04 19:39:11.766 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/BotHub?id=W-RojqNxfIe-nU30pEuj8g - - - 101 - - 659555.7016ms
2024-02-04 19:39:11.766 +03:00 [ERR] Failed to invoke hub method 'ReceiveStream'.
System.OperationCanceledException: The underlying connection was closed.
   at System.Threading.Channels.AsyncOperation`1.GetResult(Int16 token)
   at System.Threading.Channels.ChannelReader`1.ReadAllAsync(CancellationToken cancellationToken)+MoveNext()
   at System.Threading.Channels.ChannelReader`1.ReadAllAsync(CancellationToken cancellationToken)+System.Threading.Tasks.Sources.IValueTaskSource<System.Boolean>.GetResult()
   at TgCheckerApi.Websockets.BotHub.ReceiveStream(IAsyncEnumerable`1 stream, String param) in C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\Websockets\BotHub.cs:line 39
   at TgCheckerApi.Websockets.BotHub.ReceiveStream(IAsyncEnumerable`1 stream, String param) in C:\Users\timar\source\Repos\TgCheckerApiIGOGOG\TgCheckerApi\Websockets\BotHub.cs:line 39
   at Microsoft.AspNetCore.SignalR.Internal.DefaultHubDispatcher`1.ExecuteMethod(ObjectMethodExecutor methodExecutor, Hub hub, Object[] arguments)
   at Microsoft.AspNetCore.SignalR.Internal.DefaultHubDispatcher`1.<Invoke>g__ExecuteInvocation|16_0(DefaultHubDispatcher`1 dispatcher, ObjectMethodExecutor methodExecutor, THub hub, Object[] arguments, AsyncServiceScope scope, IHubActivator`1 hubActivator, HubConnectionContext connection, HubMethodInvocationMessage hubMethodInvocationMessage, Boolean isStreamCall)
