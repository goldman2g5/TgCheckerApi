2024-02-29 18:37:45.468 +03:00 [INF] User profile is available. Using 'C:\Users\timar\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-29 18:38:01.358 +03:00 [INF] User profile is available. Using 'C:\Users\timar\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-29 18:38:01.526 +03:00 [INF] Default Quartz.NET properties loaded from embedded resource file
2024-02-29 18:38:01.671 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-02-29 18:38:01.672 +03:00 [INF] Quartz Scheduler created
2024-02-29 18:38:01.679 +03:00 [INF] RAMJobStore initialized.
2024-02-29 18:38:01.680 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-02-29 18:38:01.681 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-02-29 18:38:01.682 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-02-29 18:38:01.683 +03:00 [INF] JobFactory set to: TgCheckerApi.Job.QuartzJobFactory
2024-02-29 18:38:01.723 +03:00 [INF] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2024-02-29 18:38:01.878 +03:00 [INF] Now listening on: http://localhost:7256
2024-02-29 18:38:01.879 +03:00 [INF] Now listening on: http://localhost:5244
2024-02-29 18:38:01.883 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-29 18:38:01.884 +03:00 [INF] Hosting environment: Development
2024-02-29 18:38:01.886 +03:00 [INF] Content root path: C:\Users\timar\source\Repos\goldman2g5\TgCheckerApi\TgCheckerApi\
2024-02-29 18:38:01.948 +03:00 [INF] RecalculateTopPosJob started at "2024-02-29T18:38:01.9480599+03:00"
2024-02-29 18:38:02.355 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger - -
2024-02-29 18:38:02.427 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger - - - 301 0 - 75.0537ms
2024-02-29 18:38:02.444 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/index.html - -
2024-02-29 18:38:02.778 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/swagger-ui.css - -
2024-02-29 18:38:02.779 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/swagger-ui-bundle.js - -
2024-02-29 18:38:02.782 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/swagger-ui-standalone-preset.js - -
2024-02-29 18:38:02.786 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/index.html - - - 200 - text/html;charset=utf-8 342.3891ms
2024-02-29 18:38:02.790 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - -
2024-02-29 18:38:02.791 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_vs/browserLink - -
2024-02-29 18:38:02.795 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - - - 200 12356 application/javascript;+charset=utf-8 4.4767ms
2024-02-29 18:38:02.823 +03:00 [INF] Sending file. Request path: '/swagger-ui-standalone-preset.js'. Physical path: 'N/A'
2024-02-29 18:38:02.823 +03:00 [INF] Sending file. Request path: '/swagger-ui.css'. Physical path: 'N/A'
2024-02-29 18:38:02.825 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/swagger-ui-standalone-preset.js - - - 200 312163 application/javascript 42.8963ms
2024-02-29 18:38:02.828 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/swagger-ui.css - - - 200 144929 text/css 49.4987ms
2024-02-29 18:38:02.834 +03:00 [INF] Sending file. Request path: '/swagger-ui-bundle.js'. Physical path: 'N/A'
2024-02-29 18:38:02.836 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/swagger-ui-bundle.js - - - 200 1061536 application/javascript 56.4492ms
2024-02-29 18:38:02.892 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 100.5055ms
2024-02-29 18:38:02.921 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - -
2024-02-29 18:38:03.122 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 200.8181ms
2024-02-29 18:38:03.983 +03:00 [INF] Executed DbCommand (167ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c."IsPartner", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."TopPos", c."Url", c."user"
FROM "Channel" AS c
ORDER BY c.bumps DESC
2024-02-29 18:38:04.173 +03:00 [INF] RecalculateTopPosJob completed at "2024-02-29T18:38:04.1737275+03:00"
2024-02-29 18:38:11.945 +03:00 [INF] Start processing HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-29 18:38:11.948 +03:00 [INF] Sending HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-29 18:38:12.317 +03:00 [INF] Received HTTP response headers after 362.6816ms - 200
2024-02-29 18:38:12.321 +03:00 [INF] End processing HTTP request after 380.4036ms - 200
2024-02-29 18:38:12.325 +03:00 [INF] Successfully processed all channels via HTTP request at: {DateTime.UtcNow}
2024-02-29 18:38:40.058 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-29 18:38:40.065 +03:00 [WRN] Failed to determine the https port for redirect.
2024-02-29 18:38:40.318 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-29 18:38:40.342 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-29 18:38:40.348 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 290.7421ms
2024-02-29 18:38:40.369 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=oyCmc6gHrwHz3k24oVvhng - -
2024-02-29 18:38:40.371 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-29 18:38:45.887 +03:00 [ERR] Failed to invoke hub method 'ReceiveStream'.
System.OperationCanceledException: The underlying connection was closed.
   at System.Threading.Channels.AsyncOperation`1.GetResult(Int16 token)
   at System.Threading.Channels.ChannelReader`1.ReadAllAsync(CancellationToken cancellationToken)+MoveNext()
   at System.Threading.Channels.ChannelReader`1.ReadAllAsync(CancellationToken cancellationToken)+System.Threading.Tasks.Sources.IValueTaskSource<System.Boolean>.GetResult()
   at TgCheckerApi.Websockets.BotHub.ReceiveStream(IAsyncEnumerable`1 stream, String param) in C:\Users\timar\source\Repos\goldman2g5\TgCheckerApi\TgCheckerApi\Websockets\BotHub.cs:line 39
   at TgCheckerApi.Websockets.BotHub.ReceiveStream(IAsyncEnumerable`1 stream, String param) in C:\Users\timar\source\Repos\goldman2g5\TgCheckerApi\TgCheckerApi\Websockets\BotHub.cs:line 39
   at Microsoft.AspNetCore.SignalR.Internal.DefaultHubDispatcher`1.ExecuteMethod(ObjectMethodExecutor methodExecutor, Hub hub, Object[] arguments)
   at Microsoft.AspNetCore.SignalR.Internal.DefaultHubDispatcher`1.<Invoke>g__ExecuteInvocation|16_0(DefaultHubDispatcher`1 dispatcher, ObjectMethodExecutor methodExecutor, THub hub, Object[] arguments, AsyncServiceScope scope, IHubActivator`1 hubActivator, HubConnectionContext connection, HubMethodInvocationMessage hubMethodInvocationMessage, Boolean isStreamCall)
2024-02-29 18:38:45.890 +03:00 [INF] Executed endpoint '/BotHub'
2024-02-29 18:38:45.975 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/BotHub?id=oyCmc6gHrwHz3k24oVvhng - - - 101 - - 5605.2528ms
2024-02-29 18:38:49.244 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-29 18:38:49.247 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-29 18:38:49.248 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-29 18:38:49.249 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 5.2430ms
2024-02-29 18:38:49.261 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=LoJCm5KouJQ6NqX2wR_UPw - -
2024-02-29 18:38:49.262 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-29 18:38:54.275 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification - -
2024-02-29 18:38:54.277 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:38:54.413 +03:00 [INF] Route matched with {action = "GetNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] GetNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:38:55.113 +03:00 [INF] Executed DbCommand (291ms) [Parameters=[@__currentTime_0='?' (DbType = DateTime2), @__p_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c0.notifications = TRUE AND (c0.notification_sent <> TRUE OR c0.notification_sent IS NULL) AND c0.last_bump IS NOT NULL AND c0.last_bump <= @__currentTime_0 AND @__currentTime_0 >= c0.last_bump + CAST(@__p_1::text || ' mins' AS interval)
2024-02-29 18:41:44.304 +03:00 [INF] User profile is available. Using 'C:\Users\timar\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-29 18:41:44.464 +03:00 [INF] Default Quartz.NET properties loaded from embedded resource file
2024-02-29 18:41:44.508 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-02-29 18:41:44.512 +03:00 [INF] Quartz Scheduler created
2024-02-29 18:41:44.513 +03:00 [INF] RAMJobStore initialized.
2024-02-29 18:41:44.514 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-02-29 18:41:44.514 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-02-29 18:41:44.515 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-02-29 18:41:44.516 +03:00 [INF] JobFactory set to: TgCheckerApi.Job.QuartzJobFactory
2024-02-29 18:41:44.556 +03:00 [INF] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2024-02-29 18:41:44.644 +03:00 [INF] Now listening on: http://localhost:7256
2024-02-29 18:41:44.676 +03:00 [INF] Now listening on: http://localhost:5244
2024-02-29 18:41:44.679 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-29 18:41:44.680 +03:00 [INF] Hosting environment: Development
2024-02-29 18:41:44.681 +03:00 [INF] Content root path: C:\Users\timar\source\Repos\goldman2g5\TgCheckerApi\TgCheckerApi\
2024-02-29 18:41:44.828 +03:00 [INF] RecalculateTopPosJob started at "2024-02-29T18:41:44.8280291+03:00"
2024-02-29 18:41:45.227 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/index.html - -
2024-02-29 18:41:45.491 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/index.html - - - 200 - text/html;charset=utf-8 265.8953ms
2024-02-29 18:41:45.494 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_vs/browserLink - -
2024-02-29 18:41:45.502 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - -
2024-02-29 18:41:45.507 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - - - 200 12356 application/javascript;+charset=utf-8 4.4335ms
2024-02-29 18:41:45.514 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 19.6846ms
2024-02-29 18:41:45.612 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - -
2024-02-29 18:41:45.739 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 126.2401ms
2024-02-29 18:41:46.331 +03:00 [INF] Executed DbCommand (51ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c."IsPartner", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."TopPos", c."Url", c."user"
FROM "Channel" AS c
ORDER BY c.bumps DESC
2024-02-29 18:41:46.502 +03:00 [INF] RecalculateTopPosJob completed at "2024-02-29T18:41:46.5028692+03:00"
2024-02-29 18:41:50.327 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-29 18:41:50.332 +03:00 [WRN] Failed to determine the https port for redirect.
2024-02-29 18:41:50.397 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-29 18:41:50.409 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-29 18:41:50.410 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 83.1497ms
2024-02-29 18:41:50.421 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=n31kGLh-J3xkQwxCwZjUJA - -
2024-02-29 18:41:50.422 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-29 18:41:54.747 +03:00 [INF] Start processing HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-29 18:41:54.752 +03:00 [INF] Sending HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-29 18:41:55.435 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification - -
2024-02-29 18:41:55.438 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:41:55.459 +03:00 [INF] Route matched with {action = "GetNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] GetNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:41:55.823 +03:00 [INF] Executed DbCommand (22ms) [Parameters=[@__currentTime_0='?' (DbType = DateTime2), @__p_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c0.notifications = TRUE AND (c0.notification_sent <> TRUE OR c0.notification_sent IS NULL) AND c0.last_bump IS NOT NULL AND c0.last_bump <= @__currentTime_0 AND @__currentTime_0 >= c0.last_bump + CAST(@__p_1::text || ' mins' AS interval)
2024-02-29 18:43:01.865 +03:00 [INF] User profile is available. Using 'C:\Users\timar\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-29 18:43:02.038 +03:00 [INF] Default Quartz.NET properties loaded from embedded resource file
2024-02-29 18:43:02.080 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-02-29 18:43:02.086 +03:00 [INF] Quartz Scheduler created
2024-02-29 18:43:02.088 +03:00 [INF] RAMJobStore initialized.
2024-02-29 18:43:02.091 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-02-29 18:43:02.091 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-02-29 18:43:02.093 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-02-29 18:43:02.094 +03:00 [INF] JobFactory set to: TgCheckerApi.Job.QuartzJobFactory
2024-02-29 18:43:02.144 +03:00 [INF] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2024-02-29 18:43:02.236 +03:00 [INF] Now listening on: http://localhost:7256
2024-02-29 18:43:02.240 +03:00 [INF] Now listening on: http://localhost:5244
2024-02-29 18:43:02.244 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-29 18:43:02.245 +03:00 [INF] Hosting environment: Development
2024-02-29 18:43:02.246 +03:00 [INF] Content root path: C:\Users\timar\source\Repos\goldman2g5\TgCheckerApi\TgCheckerApi\
2024-02-29 18:43:02.321 +03:00 [INF] RecalculateTopPosJob started at "2024-02-29T18:43:02.3208474+03:00"
2024-02-29 18:43:02.405 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-29 18:43:02.437 +03:00 [WRN] Failed to determine the https port for redirect.
2024-02-29 18:43:02.503 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-29 18:43:02.537 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-29 18:43:02.540 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 138.2190ms
2024-02-29 18:43:02.545 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=Jsgd7OcbD1R4YjFj8Erlbg - -
2024-02-29 18:43:02.550 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-29 18:43:02.883 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/index.html - -
2024-02-29 18:43:03.079 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/index.html - - - 200 - text/html;charset=utf-8 195.8390ms
2024-02-29 18:43:03.083 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_vs/browserLink - -
2024-02-29 18:43:03.084 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - -
2024-02-29 18:43:03.091 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_framework/aspnetcore-browser-refresh.js - - - 200 12356 application/javascript;+charset=utf-8 6.3798ms
2024-02-29 18:43:03.103 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 19.3959ms
2024-02-29 18:43:03.138 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - -
2024-02-29 18:43:03.275 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 136.6084ms
2024-02-29 18:43:03.950 +03:00 [INF] Executed DbCommand (46ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c."IsPartner", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."TopPos", c."Url", c."user"
FROM "Channel" AS c
ORDER BY c.bumps DESC
2024-02-29 18:43:04.132 +03:00 [INF] RecalculateTopPosJob completed at "2024-02-29T18:43:04.1328703+03:00"
2024-02-29 18:43:05.425 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification - -
2024-02-29 18:43:05.428 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:43:05.440 +03:00 [INF] Route matched with {action = "GetNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] GetNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:43:05.673 +03:00 [INF] Executed DbCommand (14ms) [Parameters=[@__currentTime_0='?' (DbType = DateTime2), @__p_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c0.notifications = TRUE AND (c0.notification_sent <> TRUE OR c0.notification_sent IS NULL) AND c0.last_bump IS NOT NULL AND c0.last_bump <= @__currentTime_0 AND @__currentTime_0 >= c0.last_bump + CAST(@__p_1::text || ' mins' AS interval)
2024-02-29 18:43:05.686 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:43:05.763 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - -
2024-02-29 18:43:05.765 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:43:05.766 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi) in 318.9359ms
2024-02-29 18:43:05.768 +03:00 [INF] Route matched with {action = "CheckExpiredSubscriptions", controller = "Subscription"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] CheckExpiredSubscriptions() on controller TgCheckerApi.Controllers.SubscriptionController (TgCheckerApi).
2024-02-29 18:43:05.769 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:43:05.782 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification - - - 200 2 application/json;+charset=utf-8 357.2353ms
2024-02-29 18:43:06.029 +03:00 [INF] Executed DbCommand (183ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", s.id, s.multiplier, s.name, s.price, s.tag_limit
FROM "ChannelHasSubscription" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "SubType" AS s ON c.type_id = s.id
WHERE c.expires IS NOT NULL AND c.expires <= now()::timestamp
2024-02-29 18:43:06.085 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__channelAccessIds_0='?' (DbType = Object)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c.channel_id = ANY (@__channelAccessIds_0) OR (c.channel_id IS NULL AND array_position(@__channelAccessIds_0, NULL) IS NOT NULL)
2024-02-29 18:43:06.093 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:43:06.096 +03:00 [INF] Executed action TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi) in 326.5805ms
2024-02-29 18:43:06.100 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - -
2024-02-29 18:43:06.104 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:43:06.106 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:43:06.108 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - - - 200 2 application/json;+charset=utf-8 344.9690ms
2024-02-29 18:43:06.111 +03:00 [INF] Route matched with {action = "GetEligiblePromoPosts", controller = "Notification"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.PromoPost]] GetEligiblePromoPosts() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:43:06.137 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__currentTimeOnly_0='?' (DbType = Time), @__currentTime_1='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c."IsPartner", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."TopPos", c."Url", c."user"
FROM "Channel" AS c
WHERE c.promo_post = TRUE AND (c.promo_post_time IS NULL OR c.promo_post_time <= @__currentTimeOnly_0) AND (c.promo_post_last IS NULL OR c.promo_post_last + CAST(COALESCE(c.promo_post_interval, 0)::double precision::text || ' days' AS interval) <= @__currentTime_1)
2024-02-29 18:43:06.147 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.PromoPost, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:43:06.149 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi) in 35.2742ms
2024-02-29 18:43:06.151 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:43:06.152 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - - - 200 2 application/json;+charset=utf-8 52.0444ms
2024-02-29 18:43:09.167 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification - -
2024-02-29 18:43:09.168 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:43:09.169 +03:00 [INF] Route matched with {action = "GetNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] GetNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:43:09.188 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__currentTime_0='?' (DbType = DateTime2), @__p_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c0.notifications = TRUE AND (c0.notification_sent <> TRUE OR c0.notification_sent IS NULL) AND c0.last_bump IS NOT NULL AND c0.last_bump <= @__currentTime_0 AND @__currentTime_0 >= c0.last_bump + CAST(@__p_1::text || ' mins' AS interval)
2024-02-29 18:43:09.193 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:43:09.195 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi) in 14.0995ms
2024-02-29 18:43:09.196 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:43:09.197 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification - - - 200 2 application/json;+charset=utf-8 29.9934ms
2024-02-29 18:43:10.440 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification - -
2024-02-29 18:43:10.441 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:43:10.443 +03:00 [INF] Route matched with {action = "GetNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] GetNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:43:10.448 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__currentTime_0='?' (DbType = DateTime2), @__p_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c0.notifications = TRUE AND (c0.notification_sent <> TRUE OR c0.notification_sent IS NULL) AND c0.last_bump IS NOT NULL AND c0.last_bump <= @__currentTime_0 AND @__currentTime_0 >= c0.last_bump + CAST(@__p_1::text || ' mins' AS interval)
2024-02-29 18:43:10.456 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:43:10.458 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi) in 12.1141ms
2024-02-29 18:43:10.460 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:43:10.460 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - -
2024-02-29 18:43:10.461 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification - - - 200 2 application/json;+charset=utf-8 21.0139ms
2024-02-29 18:43:10.464 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:43:10.465 +03:00 [INF] Route matched with {action = "CheckExpiredSubscriptions", controller = "Subscription"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] CheckExpiredSubscriptions() on controller TgCheckerApi.Controllers.SubscriptionController (TgCheckerApi).
2024-02-29 18:43:10.470 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", s.id, s.multiplier, s.name, s.price, s.tag_limit
FROM "ChannelHasSubscription" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "SubType" AS s ON c.type_id = s.id
WHERE c.expires IS NOT NULL AND c.expires <= now()::timestamp
2024-02-29 18:43:10.476 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__channelAccessIds_0='?' (DbType = Object)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c.channel_id = ANY (@__channelAccessIds_0) OR (c.channel_id IS NULL AND array_position(@__channelAccessIds_0, NULL) IS NOT NULL)
2024-02-29 18:43:10.480 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:43:10.482 +03:00 [INF] Executed action TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi) in 14.0459ms
2024-02-29 18:43:10.484 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:43:10.485 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - -
2024-02-29 18:43:10.488 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - - - 200 2 application/json;+charset=utf-8 27.9320ms
2024-02-29 18:43:10.491 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:43:10.492 +03:00 [INF] Route matched with {action = "GetEligiblePromoPosts", controller = "Notification"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.PromoPost]] GetEligiblePromoPosts() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:43:10.496 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__currentTimeOnly_0='?' (DbType = Time), @__currentTime_1='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c."IsPartner", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."TopPos", c."Url", c."user"
FROM "Channel" AS c
WHERE c.promo_post = TRUE AND (c.promo_post_time IS NULL OR c.promo_post_time <= @__currentTimeOnly_0) AND (c.promo_post_last IS NULL OR c.promo_post_last + CAST(COALESCE(c.promo_post_interval, 0)::double precision::text || ' days' AS interval) <= @__currentTime_1)
2024-02-29 18:43:10.500 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.PromoPost, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:43:10.504 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi) in 9.7892ms
2024-02-29 18:43:10.509 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:43:10.511 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - - - 200 2 application/json;+charset=utf-8 26.1003ms
2024-02-29 18:43:11.706 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification - -
2024-02-29 18:43:11.707 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:43:11.708 +03:00 [INF] Route matched with {action = "GetNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] GetNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:43:11.713 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__currentTime_0='?' (DbType = DateTime2), @__p_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c0.notifications = TRUE AND (c0.notification_sent <> TRUE OR c0.notification_sent IS NULL) AND c0.last_bump IS NOT NULL AND c0.last_bump <= @__currentTime_0 AND @__currentTime_0 >= c0.last_bump + CAST(@__p_1::text || ' mins' AS interval)
2024-02-29 18:43:11.717 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:43:11.719 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi) in 8.1175ms
2024-02-29 18:43:11.721 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:43:11.722 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification - - - 200 2 application/json;+charset=utf-8 16.3553ms
2024-02-29 18:43:12.237 +03:00 [INF] Start processing HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-29 18:43:12.241 +03:00 [INF] Sending HTTP request POST "https://tgsearch.info:8443/api/Bot/getSubscribersByChannels"
2024-02-29 18:43:15.443 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification - -
2024-02-29 18:43:15.444 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:43:15.446 +03:00 [INF] Route matched with {action = "GetNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] GetNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:43:15.451 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__currentTime_0='?' (DbType = DateTime2), @__p_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c0.notifications = TRUE AND (c0.notification_sent <> TRUE OR c0.notification_sent IS NULL) AND c0.last_bump IS NOT NULL AND c0.last_bump <= @__currentTime_0 AND @__currentTime_0 >= c0.last_bump + CAST(@__p_1::text || ' mins' AS interval)
2024-02-29 18:43:15.458 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:43:15.460 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi) in 11.4262ms
2024-02-29 18:43:15.462 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:43:15.462 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - -
2024-02-29 18:43:15.463 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification - - - 200 2 application/json;+charset=utf-8 20.1498ms
2024-02-29 18:43:15.464 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:43:15.467 +03:00 [INF] Route matched with {action = "CheckExpiredSubscriptions", controller = "Subscription"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] CheckExpiredSubscriptions() on controller TgCheckerApi.Controllers.SubscriptionController (TgCheckerApi).
2024-02-29 18:43:15.474 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", s.id, s.multiplier, s.name, s.price, s.tag_limit
FROM "ChannelHasSubscription" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "SubType" AS s ON c.type_id = s.id
WHERE c.expires IS NOT NULL AND c.expires <= now()::timestamp
2024-02-29 18:43:15.481 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__channelAccessIds_0='?' (DbType = Object)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c.channel_id = ANY (@__channelAccessIds_0) OR (c.channel_id IS NULL AND array_position(@__channelAccessIds_0, NULL) IS NOT NULL)
2024-02-29 18:43:15.488 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:43:15.491 +03:00 [INF] Executed action TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi) in 19.9799ms
2024-02-29 18:43:15.493 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:43:15.493 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - -
2024-02-29 18:43:15.494 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - - - 200 2 application/json;+charset=utf-8 32.1732ms
2024-02-29 18:43:15.495 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:43:15.497 +03:00 [INF] Route matched with {action = "GetEligiblePromoPosts", controller = "Notification"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.PromoPost]] GetEligiblePromoPosts() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:43:15.501 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__currentTimeOnly_0='?' (DbType = Time), @__currentTime_1='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c."IsPartner", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."TopPos", c."Url", c."user"
FROM "Channel" AS c
WHERE c.promo_post = TRUE AND (c.promo_post_time IS NULL OR c.promo_post_time <= @__currentTimeOnly_0) AND (c.promo_post_last IS NULL OR c.promo_post_last + CAST(COALESCE(c.promo_post_interval, 0)::double precision::text || ' days' AS interval) <= @__currentTime_1)
2024-02-29 18:43:15.507 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.PromoPost, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:43:15.509 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi) in 9.3458ms
2024-02-29 18:43:15.510 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:43:15.512 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - - - 200 2 application/json;+charset=utf-8 18.2999ms
2024-02-29 18:43:20.430 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification - -
2024-02-29 18:43:20.431 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:43:20.432 +03:00 [INF] Route matched with {action = "GetNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] GetNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:43:20.436 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__currentTime_0='?' (DbType = DateTime2), @__p_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c0.notifications = TRUE AND (c0.notification_sent <> TRUE OR c0.notification_sent IS NULL) AND c0.last_bump IS NOT NULL AND c0.last_bump <= @__currentTime_0 AND @__currentTime_0 >= c0.last_bump + CAST(@__p_1::text || ' mins' AS interval)
2024-02-29 18:43:20.440 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:43:20.442 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi) in 7.4276ms
2024-02-29 18:43:20.443 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:43:20.444 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - -
2024-02-29 18:43:20.446 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification - - - 200 2 application/json;+charset=utf-8 16.0952ms
2024-02-29 18:43:20.447 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:43:20.449 +03:00 [INF] Route matched with {action = "CheckExpiredSubscriptions", controller = "Subscription"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] CheckExpiredSubscriptions() on controller TgCheckerApi.Controllers.SubscriptionController (TgCheckerApi).
2024-02-29 18:43:20.453 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", s.id, s.multiplier, s.name, s.price, s.tag_limit
FROM "ChannelHasSubscription" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "SubType" AS s ON c.type_id = s.id
WHERE c.expires IS NOT NULL AND c.expires <= now()::timestamp
2024-02-29 18:43:20.458 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__channelAccessIds_0='?' (DbType = Object)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c.channel_id = ANY (@__channelAccessIds_0) OR (c.channel_id IS NULL AND array_position(@__channelAccessIds_0, NULL) IS NOT NULL)
2024-02-29 18:43:20.463 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:43:20.464 +03:00 [INF] Executed action TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi) in 12.3723ms
2024-02-29 18:43:20.465 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:43:20.466 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - -
2024-02-29 18:43:20.467 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - - - 200 2 application/json;+charset=utf-8 23.2661ms
2024-02-29 18:43:20.468 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:43:20.470 +03:00 [INF] Route matched with {action = "GetEligiblePromoPosts", controller = "Notification"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.PromoPost]] GetEligiblePromoPosts() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:43:20.473 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__currentTimeOnly_0='?' (DbType = Time), @__currentTime_1='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c."IsPartner", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."TopPos", c."Url", c."user"
FROM "Channel" AS c
WHERE c.promo_post = TRUE AND (c.promo_post_time IS NULL OR c.promo_post_time <= @__currentTimeOnly_0) AND (c.promo_post_last IS NULL OR c.promo_post_last + CAST(COALESCE(c.promo_post_interval, 0)::double precision::text || ' days' AS interval) <= @__currentTime_1)
2024-02-29 18:43:20.478 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.PromoPost, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:43:20.479 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi) in 7.3804ms
2024-02-29 18:43:20.480 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:43:20.481 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - - - 200 2 application/json;+charset=utf-8 15.5093ms
2024-02-29 18:43:23.539 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/api/User application/json 165
2024-02-29 18:43:23.540 +03:00 [INF] Executing endpoint 'TgCheckerApi.MapperProfiles.UserController.PostUser (TgCheckerApi)'
2024-02-29 18:43:23.555 +03:00 [INF] Route matched with {action = "PostUser", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TgCheckerApi.Models.BaseModels.User]] PostUser(TgCheckerApi.Models.UserPostModel) on controller TgCheckerApi.MapperProfiles.UserController (TgCheckerApi).
2024-02-29 18:43:23.928 +03:00 [INF] Executed DbCommand (115ms) [Parameters=[@__user_TelegramId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "User" AS u
WHERE u.telegram_id = @__user_TelegramId_0
LIMIT 1
2024-02-29 18:43:23.955 +03:00 [INF] Executing BadRequestObjectResult, writing value of type 'System.String'.
2024-02-29 18:43:23.956 +03:00 [INF] Executed action TgCheckerApi.MapperProfiles.UserController.PostUser (TgCheckerApi) in 399.2664ms
2024-02-29 18:43:23.958 +03:00 [INF] Executed endpoint 'TgCheckerApi.MapperProfiles.UserController.PostUser (TgCheckerApi)'
2024-02-29 18:43:23.961 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/api/User application/json 165 - 400 - text/plain;+charset=utf-8 422.3605ms
2024-02-29 18:43:25.423 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification - -
2024-02-29 18:43:25.425 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:43:25.426 +03:00 [INF] Route matched with {action = "GetNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] GetNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:43:25.431 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__currentTime_0='?' (DbType = DateTime2), @__p_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c0.notifications = TRUE AND (c0.notification_sent <> TRUE OR c0.notification_sent IS NULL) AND c0.last_bump IS NOT NULL AND c0.last_bump <= @__currentTime_0 AND @__currentTime_0 >= c0.last_bump + CAST(@__p_1::text || ' mins' AS interval)
2024-02-29 18:43:25.436 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:43:25.440 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi) in 11.0921ms
2024-02-29 18:43:25.441 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:43:25.443 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - -
2024-02-29 18:43:25.443 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification - - - 200 2 application/json;+charset=utf-8 19.9322ms
2024-02-29 18:43:25.444 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:43:25.447 +03:00 [INF] Route matched with {action = "CheckExpiredSubscriptions", controller = "Subscription"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] CheckExpiredSubscriptions() on controller TgCheckerApi.Controllers.SubscriptionController (TgCheckerApi).
2024-02-29 18:43:25.452 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", s.id, s.multiplier, s.name, s.price, s.tag_limit
FROM "ChannelHasSubscription" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "SubType" AS s ON c.type_id = s.id
WHERE c.expires IS NOT NULL AND c.expires <= now()::timestamp
2024-02-29 18:43:25.458 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__channelAccessIds_0='?' (DbType = Object)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c.channel_id = ANY (@__channelAccessIds_0) OR (c.channel_id IS NULL AND array_position(@__channelAccessIds_0, NULL) IS NOT NULL)
2024-02-29 18:43:25.463 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:43:25.465 +03:00 [INF] Executed action TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi) in 15.0787ms
2024-02-29 18:43:25.467 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:43:25.470 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - -
2024-02-29 18:43:25.471 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - - - 200 2 application/json;+charset=utf-8 28.0778ms
2024-02-29 18:43:25.472 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:43:25.474 +03:00 [INF] Route matched with {action = "GetEligiblePromoPosts", controller = "Notification"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.PromoPost]] GetEligiblePromoPosts() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:43:25.478 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__currentTimeOnly_0='?' (DbType = Time), @__currentTime_1='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c."IsPartner", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."TopPos", c."Url", c."user"
FROM "Channel" AS c
WHERE c.promo_post = TRUE AND (c.promo_post_time IS NULL OR c.promo_post_time <= @__currentTimeOnly_0) AND (c.promo_post_last IS NULL OR c.promo_post_last + CAST(COALESCE(c.promo_post_interval, 0)::double precision::text || ' days' AS interval) <= @__currentTime_1)
2024-02-29 18:43:25.481 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.PromoPost, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:43:25.483 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi) in 5.9764ms
2024-02-29 18:43:25.487 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:43:25.489 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - - - 200 2 application/json;+charset=utf-8 19.1040ms
2024-02-29 18:43:27.010 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Channel/ByUser/1342147816 - -
2024-02-29 18:43:27.012 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.ChannelController.GetChannelsByUser (TgCheckerApi)'
2024-02-29 18:43:27.018 +03:00 [INF] Route matched with {action = "GetChannelsByUser", controller = "Channel"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.BaseModels.Channel]]] GetChannelsByUser(Int64) on controller TgCheckerApi.Controllers.ChannelController (TgCheckerApi).
2024-02-29 18:43:27.043 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c."IsPartner", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."TopPos", c."Url", c."user"
FROM "Channel" AS c
LEFT JOIN "User" AS u ON c."user" = u.id
WHERE u.telegram_id = @__userId_0
2024-02-29 18:43:27.050 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.BaseModels.Channel, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:43:27.079 +03:00 [INF] Executed action TgCheckerApi.Controllers.ChannelController.GetChannelsByUser (TgCheckerApi) in 54.134ms
2024-02-29 18:43:27.081 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.ChannelController.GetChannelsByUser (TgCheckerApi)'
2024-02-29 18:43:27.083 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Channel/ByUser/1342147816 - - - 200 15967 application/json;+charset=utf-8 73.7716ms
2024-02-29 18:43:27.928 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Channel/79 - -
2024-02-29 18:43:27.932 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.ChannelController.GetChannel (TgCheckerApi)'
2024-02-29 18:43:27.935 +03:00 [INF] Route matched with {action = "GetChannel", controller = "Channel"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TgCheckerApi.Models.GetModels.ChannelGetModel]] GetChannel(Int32) on controller TgCheckerApi.Controllers.ChannelController (TgCheckerApi).
2024-02-29 18:43:27.966 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c."IsPartner", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."TopPos", c."Url", c."user"
FROM "Channel" AS c
WHERE c.id = @__p_0
LIMIT 1
2024-02-29 18:43:28.068 +03:00 [INF] Executed DbCommand (63ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag, t.id, t.text
FROM "ChannelHasTag" AS c
LEFT JOIN "Tag" AS t ON c.tag = t.id
WHERE c.channel = @__channel_Id_0
2024-02-29 18:43:28.098 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-29 18:43:28.107 +03:00 [INF] Executing ObjectResult, writing value of type 'TgCheckerApi.Models.GetModels.ChannelGetModel'.
2024-02-29 18:43:28.114 +03:00 [INF] Executed action TgCheckerApi.Controllers.ChannelController.GetChannel (TgCheckerApi) in 174.6299ms
2024-02-29 18:43:28.116 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.ChannelController.GetChannel (TgCheckerApi)'
2024-02-29 18:43:28.118 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Channel/79 - - - 200 538 application/json;+charset=utf-8 189.6424ms
2024-02-29 18:43:29.004 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Channel/ByUser/1342147816 - -
2024-02-29 18:43:29.006 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.ChannelController.GetChannelsByUser (TgCheckerApi)'
2024-02-29 18:43:29.008 +03:00 [INF] Route matched with {action = "GetChannelsByUser", controller = "Channel"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.BaseModels.Channel]]] GetChannelsByUser(Int64) on controller TgCheckerApi.Controllers.ChannelController (TgCheckerApi).
2024-02-29 18:43:29.013 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c."IsPartner", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."TopPos", c."Url", c."user"
FROM "Channel" AS c
LEFT JOIN "User" AS u ON c."user" = u.id
WHERE u.telegram_id = @__userId_0
2024-02-29 18:43:29.018 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.BaseModels.Channel, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:43:29.021 +03:00 [INF] Executed action TgCheckerApi.Controllers.ChannelController.GetChannelsByUser (TgCheckerApi) in 10.7589ms
2024-02-29 18:43:29.024 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.ChannelController.GetChannelsByUser (TgCheckerApi)'
2024-02-29 18:43:29.027 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Channel/ByUser/1342147816 - - - 200 15967 application/json;+charset=utf-8 23.4872ms
2024-02-29 18:43:29.724 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Channel/80 - -
2024-02-29 18:43:29.725 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.ChannelController.GetChannel (TgCheckerApi)'
2024-02-29 18:43:29.730 +03:00 [INF] Route matched with {action = "GetChannel", controller = "Channel"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TgCheckerApi.Models.GetModels.ChannelGetModel]] GetChannel(Int32) on controller TgCheckerApi.Controllers.ChannelController (TgCheckerApi).
2024-02-29 18:43:29.735 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c."IsPartner", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."TopPos", c."Url", c."user"
FROM "Channel" AS c
WHERE c.id = @__p_0
LIMIT 1
2024-02-29 18:43:29.779 +03:00 [INF] Executed DbCommand (39ms) [Parameters=[@__channel_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel, c.tag, t.id, t.text
FROM "ChannelHasTag" AS c
LEFT JOIN "Tag" AS t ON c.tag = t.id
WHERE c.channel = @__channel_Id_0
2024-02-29 18:43:29.813 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id
FROM "ChannelHasSubscription" AS c
WHERE c.channel_id = @__p_0
2024-02-29 18:43:29.826 +03:00 [INF] Executing ObjectResult, writing value of type 'TgCheckerApi.Models.GetModels.ChannelGetModel'.
2024-02-29 18:43:29.828 +03:00 [INF] Executed action TgCheckerApi.Controllers.ChannelController.GetChannel (TgCheckerApi) in 94.8159ms
2024-02-29 18:43:29.829 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.ChannelController.GetChannel (TgCheckerApi)'
2024-02-29 18:43:29.831 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Channel/80 - - - 200 15629 application/json;+charset=utf-8 107.4581ms
2024-02-29 18:43:30.432 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification - -
2024-02-29 18:43:30.433 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:43:30.434 +03:00 [INF] Route matched with {action = "GetNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] GetNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:43:30.441 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__currentTime_0='?' (DbType = DateTime2), @__p_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c0.notifications = TRUE AND (c0.notification_sent <> TRUE OR c0.notification_sent IS NULL) AND c0.last_bump IS NOT NULL AND c0.last_bump <= @__currentTime_0 AND @__currentTime_0 >= c0.last_bump + CAST(@__p_1::text || ' mins' AS interval)
2024-02-29 18:43:30.459 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:43:30.463 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi) in 26.3854ms
2024-02-29 18:43:30.465 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:43:30.465 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - -
2024-02-29 18:43:30.466 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification - - - 200 2 application/json;+charset=utf-8 33.7871ms
2024-02-29 18:43:30.467 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:43:30.472 +03:00 [INF] Route matched with {action = "CheckExpiredSubscriptions", controller = "Subscription"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] CheckExpiredSubscriptions() on controller TgCheckerApi.Controllers.SubscriptionController (TgCheckerApi).
2024-02-29 18:43:30.477 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", s.id, s.multiplier, s.name, s.price, s.tag_limit
FROM "ChannelHasSubscription" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "SubType" AS s ON c.type_id = s.id
WHERE c.expires IS NOT NULL AND c.expires <= now()::timestamp
2024-02-29 18:43:30.488 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__channelAccessIds_0='?' (DbType = Object)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c.channel_id = ANY (@__channelAccessIds_0) OR (c.channel_id IS NULL AND array_position(@__channelAccessIds_0, NULL) IS NOT NULL)
2024-02-29 18:43:30.495 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:43:30.497 +03:00 [INF] Executed action TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi) in 22.0842ms
2024-02-29 18:43:30.500 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - -
2024-02-29 18:43:30.500 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:43:30.502 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:43:30.503 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - - - 200 2 application/json;+charset=utf-8 37.5934ms
2024-02-29 18:43:30.504 +03:00 [INF] Route matched with {action = "GetEligiblePromoPosts", controller = "Notification"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.PromoPost]] GetEligiblePromoPosts() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:43:30.512 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__currentTimeOnly_0='?' (DbType = Time), @__currentTime_1='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c."IsPartner", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."TopPos", c."Url", c."user"
FROM "Channel" AS c
WHERE c.promo_post = TRUE AND (c.promo_post_time IS NULL OR c.promo_post_time <= @__currentTimeOnly_0) AND (c.promo_post_last IS NULL OR c.promo_post_last + CAST(COALESCE(c.promo_post_interval, 0)::double precision::text || ' days' AS interval) <= @__currentTime_1)
2024-02-29 18:43:30.517 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.PromoPost, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:43:30.521 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi) in 10.4244ms
2024-02-29 18:43:30.525 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:43:30.526 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - - - 200 2 application/json;+charset=utf-8 26.8225ms
2024-02-29 18:43:30.828 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/api/Channel/Bump/80 - 0
2024-02-29 18:43:30.829 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.ChannelController.BumpChannel (TgCheckerApi)'
2024-02-29 18:43:30.833 +03:00 [INF] Route matched with {action = "BumpChannel", controller = "Channel"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] BumpChannel(Int32) on controller TgCheckerApi.Controllers.ChannelController (TgCheckerApi).
2024-02-29 18:43:30.839 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c."IsPartner", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."TopPos", c."Url", c."user"
FROM "Channel" AS c
WHERE c.id = @__p_0
LIMIT 1
2024-02-29 18:43:30.913 +03:00 [INF] Executed DbCommand (52ms) [Parameters=[@__channelId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.multiplier
FROM "ChannelHasSubscription" AS c
LEFT JOIN "SubType" AS s ON c.type_id = s.id
WHERE c.channel_id = @__channelId_0
ORDER BY c.type_id DESC
LIMIT 1
2024-02-29 18:43:31.083 +03:00 [INF] Executed DbCommand (68ms) [Parameters=[@p2='?' (DbType = Int32), @p0='?' (DbType = Decimal), @p1='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Channel" SET bumps = @p0, last_bump = @p1
WHERE id = @p2;
2024-02-29 18:43:31.124 +03:00 [INF] Executing StatusCodeResult, setting HTTP status code 204
2024-02-29 18:43:31.125 +03:00 [INF] Executed action TgCheckerApi.Controllers.ChannelController.BumpChannel (TgCheckerApi) in 289.821ms
2024-02-29 18:43:31.127 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.ChannelController.BumpChannel (TgCheckerApi)'
2024-02-29 18:43:31.129 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/api/Channel/Bump/80 - 0 - 204 - - 300.9430ms
2024-02-29 18:43:35.433 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification - -
2024-02-29 18:43:35.434 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:43:35.435 +03:00 [INF] Route matched with {action = "GetNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] GetNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:43:35.440 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__currentTime_0='?' (DbType = DateTime2), @__p_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c0.notifications = TRUE AND (c0.notification_sent <> TRUE OR c0.notification_sent IS NULL) AND c0.last_bump IS NOT NULL AND c0.last_bump <= @__currentTime_0 AND @__currentTime_0 >= c0.last_bump + CAST(@__p_1::text || ' mins' AS interval)
2024-02-29 18:43:35.444 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:43:35.447 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi) in 9.8564ms
2024-02-29 18:43:35.449 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:43:35.451 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - -
2024-02-29 18:43:35.451 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification - - - 200 2 application/json;+charset=utf-8 18.3503ms
2024-02-29 18:43:35.452 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:43:35.454 +03:00 [INF] Route matched with {action = "CheckExpiredSubscriptions", controller = "Subscription"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] CheckExpiredSubscriptions() on controller TgCheckerApi.Controllers.SubscriptionController (TgCheckerApi).
2024-02-29 18:43:35.458 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", s.id, s.multiplier, s.name, s.price, s.tag_limit
FROM "ChannelHasSubscription" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "SubType" AS s ON c.type_id = s.id
WHERE c.expires IS NOT NULL AND c.expires <= now()::timestamp
2024-02-29 18:43:35.465 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__channelAccessIds_0='?' (DbType = Object)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c.channel_id = ANY (@__channelAccessIds_0) OR (c.channel_id IS NULL AND array_position(@__channelAccessIds_0, NULL) IS NOT NULL)
2024-02-29 18:43:35.468 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:43:35.470 +03:00 [INF] Executed action TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi) in 12.769ms
2024-02-29 18:43:35.471 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:43:35.472 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - -
2024-02-29 18:43:35.473 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - - - 200 2 application/json;+charset=utf-8 21.8742ms
2024-02-29 18:43:35.473 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:43:35.477 +03:00 [INF] Route matched with {action = "GetEligiblePromoPosts", controller = "Notification"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.PromoPost]] GetEligiblePromoPosts() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:43:35.481 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__currentTimeOnly_0='?' (DbType = Time), @__currentTime_1='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c."IsPartner", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."TopPos", c."Url", c."user"
FROM "Channel" AS c
WHERE c.promo_post = TRUE AND (c.promo_post_time IS NULL OR c.promo_post_time <= @__currentTimeOnly_0) AND (c.promo_post_last IS NULL OR c.promo_post_last + CAST(COALESCE(c.promo_post_interval, 0)::double precision::text || ' days' AS interval) <= @__currentTime_1)
2024-02-29 18:43:35.484 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.PromoPost, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:43:35.485 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi) in 5.9066ms
2024-02-29 18:43:35.487 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:43:35.488 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - - - 200 2 application/json;+charset=utf-8 15.3200ms
2024-02-29 18:43:40.422 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification - -
2024-02-29 18:43:40.423 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:43:40.424 +03:00 [INF] Route matched with {action = "GetNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] GetNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:43:40.429 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__currentTime_0='?' (DbType = DateTime2), @__p_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c0.notifications = TRUE AND (c0.notification_sent <> TRUE OR c0.notification_sent IS NULL) AND c0.last_bump IS NOT NULL AND c0.last_bump <= @__currentTime_0 AND @__currentTime_0 >= c0.last_bump + CAST(@__p_1::text || ' mins' AS interval)
2024-02-29 18:43:40.433 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:43:40.434 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi) in 7.6972ms
2024-02-29 18:43:40.438 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:43:40.437 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - -
2024-02-29 18:43:40.439 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification - - - 200 2 application/json;+charset=utf-8 17.3969ms
2024-02-29 18:43:40.440 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:43:40.442 +03:00 [INF] Route matched with {action = "CheckExpiredSubscriptions", controller = "Subscription"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] CheckExpiredSubscriptions() on controller TgCheckerApi.Controllers.SubscriptionController (TgCheckerApi).
2024-02-29 18:43:40.446 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", s.id, s.multiplier, s.name, s.price, s.tag_limit
FROM "ChannelHasSubscription" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "SubType" AS s ON c.type_id = s.id
WHERE c.expires IS NOT NULL AND c.expires <= now()::timestamp
2024-02-29 18:43:40.453 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__channelAccessIds_0='?' (DbType = Object)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c.channel_id = ANY (@__channelAccessIds_0) OR (c.channel_id IS NULL AND array_position(@__channelAccessIds_0, NULL) IS NOT NULL)
2024-02-29 18:43:40.456 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:43:40.457 +03:00 [INF] Executed action TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi) in 12.2048ms
2024-02-29 18:43:40.459 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:43:40.459 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - -
2024-02-29 18:43:40.460 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - - - 200 2 application/json;+charset=utf-8 22.6090ms
2024-02-29 18:43:40.461 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:43:40.463 +03:00 [INF] Route matched with {action = "GetEligiblePromoPosts", controller = "Notification"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.PromoPost]] GetEligiblePromoPosts() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:43:40.466 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__currentTimeOnly_0='?' (DbType = Time), @__currentTime_1='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c."IsPartner", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."TopPos", c."Url", c."user"
FROM "Channel" AS c
WHERE c.promo_post = TRUE AND (c.promo_post_time IS NULL OR c.promo_post_time <= @__currentTimeOnly_0) AND (c.promo_post_last IS NULL OR c.promo_post_last + CAST(COALESCE(c.promo_post_interval, 0)::double precision::text || ' days' AS interval) <= @__currentTime_1)
2024-02-29 18:43:40.470 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.PromoPost, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:43:40.472 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi) in 6.7415ms
2024-02-29 18:43:40.473 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:43:40.474 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - - - 200 2 application/json;+charset=utf-8 15.0976ms
2024-02-29 18:43:45.429 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification - -
2024-02-29 18:43:45.430 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:43:45.431 +03:00 [INF] Route matched with {action = "GetNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] GetNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:43:45.436 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__currentTime_0='?' (DbType = DateTime2), @__p_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c0.notifications = TRUE AND (c0.notification_sent <> TRUE OR c0.notification_sent IS NULL) AND c0.last_bump IS NOT NULL AND c0.last_bump <= @__currentTime_0 AND @__currentTime_0 >= c0.last_bump + CAST(@__p_1::text || ' mins' AS interval)
2024-02-29 18:43:45.440 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:43:45.443 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi) in 8.9323ms
2024-02-29 18:43:45.445 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:43:45.445 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - -
2024-02-29 18:43:45.446 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification - - - 200 2 application/json;+charset=utf-8 16.5464ms
2024-02-29 18:43:45.447 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:43:45.449 +03:00 [INF] Route matched with {action = "CheckExpiredSubscriptions", controller = "Subscription"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] CheckExpiredSubscriptions() on controller TgCheckerApi.Controllers.SubscriptionController (TgCheckerApi).
2024-02-29 18:43:45.453 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", s.id, s.multiplier, s.name, s.price, s.tag_limit
FROM "ChannelHasSubscription" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "SubType" AS s ON c.type_id = s.id
WHERE c.expires IS NOT NULL AND c.expires <= now()::timestamp
2024-02-29 18:43:45.458 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__channelAccessIds_0='?' (DbType = Object)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c.channel_id = ANY (@__channelAccessIds_0) OR (c.channel_id IS NULL AND array_position(@__channelAccessIds_0, NULL) IS NOT NULL)
2024-02-29 18:43:45.461 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:43:45.463 +03:00 [INF] Executed action TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi) in 11.7959ms
2024-02-29 18:43:45.465 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:43:45.465 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - -
2024-02-29 18:43:45.466 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - - - 200 2 application/json;+charset=utf-8 20.9319ms
2024-02-29 18:43:45.467 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:43:45.469 +03:00 [INF] Route matched with {action = "GetEligiblePromoPosts", controller = "Notification"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.PromoPost]] GetEligiblePromoPosts() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:43:45.472 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__currentTimeOnly_0='?' (DbType = Time), @__currentTime_1='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c."IsPartner", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."TopPos", c."Url", c."user"
FROM "Channel" AS c
WHERE c.promo_post = TRUE AND (c.promo_post_time IS NULL OR c.promo_post_time <= @__currentTimeOnly_0) AND (c.promo_post_last IS NULL OR c.promo_post_last + CAST(COALESCE(c.promo_post_interval, 0)::double precision::text || ' days' AS interval) <= @__currentTime_1)
2024-02-29 18:43:45.477 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.PromoPost, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:43:45.479 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi) in 7.2995ms
2024-02-29 18:43:45.480 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:43:45.481 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - - - 200 2 application/json;+charset=utf-8 15.8218ms
2024-02-29 18:43:50.436 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification - -
2024-02-29 18:43:50.437 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:43:50.439 +03:00 [INF] Route matched with {action = "GetNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] GetNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:43:50.445 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__currentTime_0='?' (DbType = DateTime2), @__p_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c0.notifications = TRUE AND (c0.notification_sent <> TRUE OR c0.notification_sent IS NULL) AND c0.last_bump IS NOT NULL AND c0.last_bump <= @__currentTime_0 AND @__currentTime_0 >= c0.last_bump + CAST(@__p_1::text || ' mins' AS interval)
2024-02-29 18:43:50.451 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:43:50.453 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi) in 11.206ms
2024-02-29 18:43:50.455 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - -
2024-02-29 18:43:50.455 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:43:50.456 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:43:50.457 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification - - - 200 2 application/json;+charset=utf-8 21.0031ms
2024-02-29 18:43:50.459 +03:00 [INF] Route matched with {action = "CheckExpiredSubscriptions", controller = "Subscription"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] CheckExpiredSubscriptions() on controller TgCheckerApi.Controllers.SubscriptionController (TgCheckerApi).
2024-02-29 18:43:50.464 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", s.id, s.multiplier, s.name, s.price, s.tag_limit
FROM "ChannelHasSubscription" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "SubType" AS s ON c.type_id = s.id
WHERE c.expires IS NOT NULL AND c.expires <= now()::timestamp
2024-02-29 18:43:50.470 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__channelAccessIds_0='?' (DbType = Object)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c.channel_id = ANY (@__channelAccessIds_0) OR (c.channel_id IS NULL AND array_position(@__channelAccessIds_0, NULL) IS NOT NULL)
2024-02-29 18:43:50.474 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:43:50.475 +03:00 [INF] Executed action TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi) in 12.0585ms
2024-02-29 18:43:50.477 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - -
2024-02-29 18:43:50.477 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:43:50.478 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:43:50.482 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - - - 200 2 application/json;+charset=utf-8 26.5922ms
2024-02-29 18:43:50.483 +03:00 [INF] Route matched with {action = "GetEligiblePromoPosts", controller = "Notification"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.PromoPost]] GetEligiblePromoPosts() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:43:50.489 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__currentTimeOnly_0='?' (DbType = Time), @__currentTime_1='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c."IsPartner", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."TopPos", c."Url", c."user"
FROM "Channel" AS c
WHERE c.promo_post = TRUE AND (c.promo_post_time IS NULL OR c.promo_post_time <= @__currentTimeOnly_0) AND (c.promo_post_last IS NULL OR c.promo_post_last + CAST(COALESCE(c.promo_post_interval, 0)::double precision::text || ' days' AS interval) <= @__currentTime_1)
2024-02-29 18:43:50.493 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.PromoPost, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:43:50.497 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi) in 8.4727ms
2024-02-29 18:43:50.498 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:43:50.499 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - - - 200 2 application/json;+charset=utf-8 22.4928ms
2024-02-29 18:43:55.427 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification - -
2024-02-29 18:43:55.429 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:43:55.430 +03:00 [INF] Route matched with {action = "GetNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] GetNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:43:55.436 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__currentTime_0='?' (DbType = DateTime2), @__p_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c0.notifications = TRUE AND (c0.notification_sent <> TRUE OR c0.notification_sent IS NULL) AND c0.last_bump IS NOT NULL AND c0.last_bump <= @__currentTime_0 AND @__currentTime_0 >= c0.last_bump + CAST(@__p_1::text || ' mins' AS interval)
2024-02-29 18:43:55.443 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:43:55.445 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi) in 12.3493ms
2024-02-29 18:43:55.447 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:43:55.448 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - -
2024-02-29 18:43:55.448 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification - - - 200 2 application/json;+charset=utf-8 20.8924ms
2024-02-29 18:43:55.449 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:43:55.451 +03:00 [INF] Route matched with {action = "CheckExpiredSubscriptions", controller = "Subscription"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] CheckExpiredSubscriptions() on controller TgCheckerApi.Controllers.SubscriptionController (TgCheckerApi).
2024-02-29 18:43:55.456 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", s.id, s.multiplier, s.name, s.price, s.tag_limit
FROM "ChannelHasSubscription" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "SubType" AS s ON c.type_id = s.id
WHERE c.expires IS NOT NULL AND c.expires <= now()::timestamp
2024-02-29 18:43:55.462 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__channelAccessIds_0='?' (DbType = Object)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c.channel_id = ANY (@__channelAccessIds_0) OR (c.channel_id IS NULL AND array_position(@__channelAccessIds_0, NULL) IS NOT NULL)
2024-02-29 18:43:55.465 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:43:55.466 +03:00 [INF] Executed action TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi) in 12.1903ms
2024-02-29 18:43:55.468 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:43:55.469 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - - - 200 2 application/json;+charset=utf-8 21.3399ms
2024-02-29 18:43:55.469 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - -
2024-02-29 18:43:55.473 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:43:55.474 +03:00 [INF] Route matched with {action = "GetEligiblePromoPosts", controller = "Notification"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.PromoPost]] GetEligiblePromoPosts() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:43:55.477 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__currentTimeOnly_0='?' (DbType = Time), @__currentTime_1='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c."IsPartner", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."TopPos", c."Url", c."user"
FROM "Channel" AS c
WHERE c.promo_post = TRUE AND (c.promo_post_time IS NULL OR c.promo_post_time <= @__currentTimeOnly_0) AND (c.promo_post_last IS NULL OR c.promo_post_last + CAST(COALESCE(c.promo_post_interval, 0)::double precision::text || ' days' AS interval) <= @__currentTime_1)
2024-02-29 18:43:55.480 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.PromoPost, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:43:55.482 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi) in 5.8614ms
2024-02-29 18:43:55.490 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:43:55.501 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - - - 200 2 application/json;+charset=utf-8 31.9294ms
2024-02-29 18:44:00.433 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification - -
2024-02-29 18:44:00.434 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:44:00.436 +03:00 [INF] Route matched with {action = "GetNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] GetNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:44:00.443 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__currentTime_0='?' (DbType = DateTime2), @__p_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c0.notifications = TRUE AND (c0.notification_sent <> TRUE OR c0.notification_sent IS NULL) AND c0.last_bump IS NOT NULL AND c0.last_bump <= @__currentTime_0 AND @__currentTime_0 >= c0.last_bump + CAST(@__p_1::text || ' mins' AS interval)
2024-02-29 18:44:00.450 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:44:00.452 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi) in 11.9605ms
2024-02-29 18:44:00.454 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:44:00.455 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - -
2024-02-29 18:44:00.456 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification - - - 200 2 application/json;+charset=utf-8 22.8327ms
2024-02-29 18:44:00.457 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:44:00.460 +03:00 [INF] Route matched with {action = "CheckExpiredSubscriptions", controller = "Subscription"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] CheckExpiredSubscriptions() on controller TgCheckerApi.Controllers.SubscriptionController (TgCheckerApi).
2024-02-29 18:44:00.467 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", s.id, s.multiplier, s.name, s.price, s.tag_limit
FROM "ChannelHasSubscription" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "SubType" AS s ON c.type_id = s.id
WHERE c.expires IS NOT NULL AND c.expires <= now()::timestamp
2024-02-29 18:44:00.474 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__channelAccessIds_0='?' (DbType = Object)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c.channel_id = ANY (@__channelAccessIds_0) OR (c.channel_id IS NULL AND array_position(@__channelAccessIds_0, NULL) IS NOT NULL)
2024-02-29 18:44:00.480 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:44:00.482 +03:00 [INF] Executed action TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi) in 17.5756ms
2024-02-29 18:44:00.486 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - -
2024-02-29 18:44:00.486 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:44:00.487 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:44:00.489 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - - - 200 2 application/json;+charset=utf-8 33.5582ms
2024-02-29 18:44:00.492 +03:00 [INF] Route matched with {action = "GetEligiblePromoPosts", controller = "Notification"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.PromoPost]] GetEligiblePromoPosts() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:44:00.500 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__currentTimeOnly_0='?' (DbType = Time), @__currentTime_1='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c."IsPartner", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."TopPos", c."Url", c."user"
FROM "Channel" AS c
WHERE c.promo_post = TRUE AND (c.promo_post_time IS NULL OR c.promo_post_time <= @__currentTimeOnly_0) AND (c.promo_post_last IS NULL OR c.promo_post_last + CAST(COALESCE(c.promo_post_interval, 0)::double precision::text || ' days' AS interval) <= @__currentTime_1)
2024-02-29 18:44:00.505 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.PromoPost, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:44:00.509 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi) in 10.2325ms
2024-02-29 18:44:00.510 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:44:00.512 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - - - 200 2 application/json;+charset=utf-8 25.8963ms
2024-02-29 18:44:05.432 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification - -
2024-02-29 18:44:05.433 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:44:05.434 +03:00 [INF] Route matched with {action = "GetNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] GetNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:44:05.440 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__currentTime_0='?' (DbType = DateTime2), @__p_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c0.notifications = TRUE AND (c0.notification_sent <> TRUE OR c0.notification_sent IS NULL) AND c0.last_bump IS NOT NULL AND c0.last_bump <= @__currentTime_0 AND @__currentTime_0 >= c0.last_bump + CAST(@__p_1::text || ' mins' AS interval)
2024-02-29 18:44:05.445 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:44:05.448 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi) in 11.4697ms
2024-02-29 18:44:05.449 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:44:05.451 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification - - - 200 2 application/json;+charset=utf-8 18.8808ms
2024-02-29 18:44:05.451 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - -
2024-02-29 18:44:05.454 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:44:05.455 +03:00 [INF] Route matched with {action = "CheckExpiredSubscriptions", controller = "Subscription"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] CheckExpiredSubscriptions() on controller TgCheckerApi.Controllers.SubscriptionController (TgCheckerApi).
2024-02-29 18:44:05.460 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", s.id, s.multiplier, s.name, s.price, s.tag_limit
FROM "ChannelHasSubscription" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "SubType" AS s ON c.type_id = s.id
WHERE c.expires IS NOT NULL AND c.expires <= now()::timestamp
2024-02-29 18:44:05.466 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__channelAccessIds_0='?' (DbType = Object)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c.channel_id = ANY (@__channelAccessIds_0) OR (c.channel_id IS NULL AND array_position(@__channelAccessIds_0, NULL) IS NOT NULL)
2024-02-29 18:44:05.471 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:44:05.473 +03:00 [INF] Executed action TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi) in 15.2558ms
2024-02-29 18:44:05.474 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:44:05.476 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - -
2024-02-29 18:44:05.478 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - - - 200 2 application/json;+charset=utf-8 26.7605ms
2024-02-29 18:44:05.479 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:44:05.482 +03:00 [INF] Route matched with {action = "GetEligiblePromoPosts", controller = "Notification"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.PromoPost]] GetEligiblePromoPosts() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:44:05.487 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__currentTimeOnly_0='?' (DbType = Time), @__currentTime_1='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c."IsPartner", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."TopPos", c."Url", c."user"
FROM "Channel" AS c
WHERE c.promo_post = TRUE AND (c.promo_post_time IS NULL OR c.promo_post_time <= @__currentTimeOnly_0) AND (c.promo_post_last IS NULL OR c.promo_post_last + CAST(COALESCE(c.promo_post_interval, 0)::double precision::text || ' days' AS interval) <= @__currentTime_1)
2024-02-29 18:44:05.491 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.PromoPost, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:44:05.498 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi) in 12.8699ms
2024-02-29 18:44:05.503 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:44:05.506 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - - - 200 2 application/json;+charset=utf-8 29.4983ms
2024-02-29 18:44:10.430 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification - -
2024-02-29 18:44:10.431 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:44:10.432 +03:00 [INF] Route matched with {action = "GetNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] GetNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:44:10.438 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__currentTime_0='?' (DbType = DateTime2), @__p_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c0.notifications = TRUE AND (c0.notification_sent <> TRUE OR c0.notification_sent IS NULL) AND c0.last_bump IS NOT NULL AND c0.last_bump <= @__currentTime_0 AND @__currentTime_0 >= c0.last_bump + CAST(@__p_1::text || ' mins' AS interval)
2024-02-29 18:44:10.445 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:44:10.446 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi) in 10.606ms
2024-02-29 18:44:10.448 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:44:10.449 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification - - - 200 2 application/json;+charset=utf-8 18.7594ms
2024-02-29 18:44:10.449 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - -
2024-02-29 18:44:10.451 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:44:10.452 +03:00 [INF] Route matched with {action = "CheckExpiredSubscriptions", controller = "Subscription"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] CheckExpiredSubscriptions() on controller TgCheckerApi.Controllers.SubscriptionController (TgCheckerApi).
2024-02-29 18:44:10.457 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", s.id, s.multiplier, s.name, s.price, s.tag_limit
FROM "ChannelHasSubscription" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "SubType" AS s ON c.type_id = s.id
WHERE c.expires IS NOT NULL AND c.expires <= now()::timestamp
2024-02-29 18:44:10.463 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__channelAccessIds_0='?' (DbType = Object)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c.channel_id = ANY (@__channelAccessIds_0) OR (c.channel_id IS NULL AND array_position(@__channelAccessIds_0, NULL) IS NOT NULL)
2024-02-29 18:44:10.466 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:44:10.468 +03:00 [INF] Executed action TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi) in 12.2426ms
2024-02-29 18:44:10.469 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:44:10.471 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - -
2024-02-29 18:44:10.471 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - - - 200 2 application/json;+charset=utf-8 21.3250ms
2024-02-29 18:44:10.472 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:44:10.476 +03:00 [INF] Route matched with {action = "GetEligiblePromoPosts", controller = "Notification"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.PromoPost]] GetEligiblePromoPosts() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:44:10.479 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__currentTimeOnly_0='?' (DbType = Time), @__currentTime_1='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c."IsPartner", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."TopPos", c."Url", c."user"
FROM "Channel" AS c
WHERE c.promo_post = TRUE AND (c.promo_post_time IS NULL OR c.promo_post_time <= @__currentTimeOnly_0) AND (c.promo_post_last IS NULL OR c.promo_post_last + CAST(COALESCE(c.promo_post_interval, 0)::double precision::text || ' days' AS interval) <= @__currentTime_1)
2024-02-29 18:44:10.482 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.PromoPost, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:44:10.483 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi) in 5.7031ms
2024-02-29 18:44:10.485 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:44:10.486 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - - - 200 2 application/json;+charset=utf-8 15.2506ms
2024-02-29 18:44:15.438 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification - -
2024-02-29 18:44:15.439 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:44:15.440 +03:00 [INF] Route matched with {action = "GetNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] GetNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:44:15.445 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__currentTime_0='?' (DbType = DateTime2), @__p_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c0.notifications = TRUE AND (c0.notification_sent <> TRUE OR c0.notification_sent IS NULL) AND c0.last_bump IS NOT NULL AND c0.last_bump <= @__currentTime_0 AND @__currentTime_0 >= c0.last_bump + CAST(@__p_1::text || ' mins' AS interval)
2024-02-29 18:44:15.449 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:44:15.455 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi) in 12.1121ms
2024-02-29 18:44:15.456 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:44:15.458 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification - - - 200 2 application/json;+charset=utf-8 19.6171ms
2024-02-29 18:44:15.458 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - -
2024-02-29 18:44:15.460 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:44:15.461 +03:00 [INF] Route matched with {action = "CheckExpiredSubscriptions", controller = "Subscription"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] CheckExpiredSubscriptions() on controller TgCheckerApi.Controllers.SubscriptionController (TgCheckerApi).
2024-02-29 18:44:15.466 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", s.id, s.multiplier, s.name, s.price, s.tag_limit
FROM "ChannelHasSubscription" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "SubType" AS s ON c.type_id = s.id
WHERE c.expires IS NOT NULL AND c.expires <= now()::timestamp
2024-02-29 18:44:15.471 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__channelAccessIds_0='?' (DbType = Object)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c.channel_id = ANY (@__channelAccessIds_0) OR (c.channel_id IS NULL AND array_position(@__channelAccessIds_0, NULL) IS NOT NULL)
2024-02-29 18:44:15.474 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:44:15.476 +03:00 [INF] Executed action TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi) in 12.057ms
2024-02-29 18:44:15.477 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:44:15.479 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - -
2024-02-29 18:44:15.479 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - - - 200 2 application/json;+charset=utf-8 21.4762ms
2024-02-29 18:44:15.480 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:44:15.485 +03:00 [INF] Route matched with {action = "GetEligiblePromoPosts", controller = "Notification"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.PromoPost]] GetEligiblePromoPosts() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:44:15.488 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__currentTimeOnly_0='?' (DbType = Time), @__currentTime_1='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c."IsPartner", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."TopPos", c."Url", c."user"
FROM "Channel" AS c
WHERE c.promo_post = TRUE AND (c.promo_post_time IS NULL OR c.promo_post_time <= @__currentTimeOnly_0) AND (c.promo_post_last IS NULL OR c.promo_post_last + CAST(COALESCE(c.promo_post_interval, 0)::double precision::text || ' days' AS interval) <= @__currentTime_1)
2024-02-29 18:44:15.491 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.PromoPost, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:44:15.493 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi) in 6.0608ms
2024-02-29 18:44:15.494 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:44:15.495 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - - - 200 2 application/json;+charset=utf-8 16.3790ms
2024-02-29 18:44:20.425 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification - -
2024-02-29 18:44:20.426 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:44:20.427 +03:00 [INF] Route matched with {action = "GetNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] GetNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:44:20.433 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__currentTime_0='?' (DbType = DateTime2), @__p_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c0.notifications = TRUE AND (c0.notification_sent <> TRUE OR c0.notification_sent IS NULL) AND c0.last_bump IS NOT NULL AND c0.last_bump <= @__currentTime_0 AND @__currentTime_0 >= c0.last_bump + CAST(@__p_1::text || ' mins' AS interval)
2024-02-29 18:44:20.438 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:44:20.441 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi) in 11.0598ms
2024-02-29 18:44:20.443 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:44:20.444 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - -
2024-02-29 18:44:20.445 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification - - - 200 2 application/json;+charset=utf-8 19.5246ms
2024-02-29 18:44:20.446 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:44:20.448 +03:00 [INF] Route matched with {action = "CheckExpiredSubscriptions", controller = "Subscription"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] CheckExpiredSubscriptions() on controller TgCheckerApi.Controllers.SubscriptionController (TgCheckerApi).
2024-02-29 18:44:20.453 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", s.id, s.multiplier, s.name, s.price, s.tag_limit
FROM "ChannelHasSubscription" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "SubType" AS s ON c.type_id = s.id
WHERE c.expires IS NOT NULL AND c.expires <= now()::timestamp
2024-02-29 18:44:20.460 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__channelAccessIds_0='?' (DbType = Object)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c.channel_id = ANY (@__channelAccessIds_0) OR (c.channel_id IS NULL AND array_position(@__channelAccessIds_0, NULL) IS NOT NULL)
2024-02-29 18:44:20.464 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:44:20.465 +03:00 [INF] Executed action TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi) in 14.3396ms
2024-02-29 18:44:20.467 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:44:20.468 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - -
2024-02-29 18:44:20.468 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - - - 200 2 application/json;+charset=utf-8 24.4002ms
2024-02-29 18:44:20.471 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:44:20.474 +03:00 [INF] Route matched with {action = "GetEligiblePromoPosts", controller = "Notification"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.PromoPost]] GetEligiblePromoPosts() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:44:20.478 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__currentTimeOnly_0='?' (DbType = Time), @__currentTime_1='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c."IsPartner", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."TopPos", c."Url", c."user"
FROM "Channel" AS c
WHERE c.promo_post = TRUE AND (c.promo_post_time IS NULL OR c.promo_post_time <= @__currentTimeOnly_0) AND (c.promo_post_last IS NULL OR c.promo_post_last + CAST(COALESCE(c.promo_post_interval, 0)::double precision::text || ' days' AS interval) <= @__currentTime_1)
2024-02-29 18:44:20.482 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.PromoPost, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:44:20.483 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi) in 6.6261ms
2024-02-29 18:44:20.484 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:44:20.488 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - - - 200 2 application/json;+charset=utf-8 19.2902ms
2024-02-29 18:44:25.428 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification - -
2024-02-29 18:44:25.429 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:44:25.430 +03:00 [INF] Route matched with {action = "GetNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] GetNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:44:25.435 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__currentTime_0='?' (DbType = DateTime2), @__p_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c0.notifications = TRUE AND (c0.notification_sent <> TRUE OR c0.notification_sent IS NULL) AND c0.last_bump IS NOT NULL AND c0.last_bump <= @__currentTime_0 AND @__currentTime_0 >= c0.last_bump + CAST(@__p_1::text || ' mins' AS interval)
2024-02-29 18:44:25.440 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:44:25.443 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi) in 9.8289ms
2024-02-29 18:44:25.445 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:44:25.446 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification - - - 200 2 application/json;+charset=utf-8 17.4031ms
2024-02-29 18:44:25.446 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - -
2024-02-29 18:44:25.448 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:44:25.449 +03:00 [INF] Route matched with {action = "CheckExpiredSubscriptions", controller = "Subscription"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] CheckExpiredSubscriptions() on controller TgCheckerApi.Controllers.SubscriptionController (TgCheckerApi).
2024-02-29 18:44:25.454 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", s.id, s.multiplier, s.name, s.price, s.tag_limit
FROM "ChannelHasSubscription" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "SubType" AS s ON c.type_id = s.id
WHERE c.expires IS NOT NULL AND c.expires <= now()::timestamp
2024-02-29 18:44:25.460 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__channelAccessIds_0='?' (DbType = Object)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c.channel_id = ANY (@__channelAccessIds_0) OR (c.channel_id IS NULL AND array_position(@__channelAccessIds_0, NULL) IS NOT NULL)
2024-02-29 18:44:25.464 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:44:25.465 +03:00 [INF] Executed action TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi) in 13.1977ms
2024-02-29 18:44:25.467 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:44:25.468 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - -
2024-02-29 18:44:25.468 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - - - 200 2 application/json;+charset=utf-8 22.1909ms
2024-02-29 18:44:25.469 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:44:25.471 +03:00 [INF] Route matched with {action = "GetEligiblePromoPosts", controller = "Notification"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.PromoPost]] GetEligiblePromoPosts() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:44:25.477 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__currentTimeOnly_0='?' (DbType = Time), @__currentTime_1='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c."IsPartner", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."TopPos", c."Url", c."user"
FROM "Channel" AS c
WHERE c.promo_post = TRUE AND (c.promo_post_time IS NULL OR c.promo_post_time <= @__currentTimeOnly_0) AND (c.promo_post_last IS NULL OR c.promo_post_last + CAST(COALESCE(c.promo_post_interval, 0)::double precision::text || ' days' AS interval) <= @__currentTime_1)
2024-02-29 18:44:25.481 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.PromoPost, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:44:25.482 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi) in 6.3147ms
2024-02-29 18:44:25.484 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:44:25.485 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - - - 200 2 application/json;+charset=utf-8 16.6293ms
2024-02-29 18:44:30.429 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification - -
2024-02-29 18:44:30.430 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:44:30.431 +03:00 [INF] Route matched with {action = "GetNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] GetNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:44:30.437 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__currentTime_0='?' (DbType = DateTime2), @__p_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c0.notifications = TRUE AND (c0.notification_sent <> TRUE OR c0.notification_sent IS NULL) AND c0.last_bump IS NOT NULL AND c0.last_bump <= @__currentTime_0 AND @__currentTime_0 >= c0.last_bump + CAST(@__p_1::text || ' mins' AS interval)
2024-02-29 18:44:30.442 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:44:30.445 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi) in 10.6543ms
2024-02-29 18:44:30.447 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:44:30.448 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification - - - 200 2 application/json;+charset=utf-8 18.7948ms
2024-02-29 18:44:30.448 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - -
2024-02-29 18:44:30.451 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:44:30.452 +03:00 [INF] Route matched with {action = "CheckExpiredSubscriptions", controller = "Subscription"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] CheckExpiredSubscriptions() on controller TgCheckerApi.Controllers.SubscriptionController (TgCheckerApi).
2024-02-29 18:44:30.457 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", s.id, s.multiplier, s.name, s.price, s.tag_limit
FROM "ChannelHasSubscription" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "SubType" AS s ON c.type_id = s.id
WHERE c.expires IS NOT NULL AND c.expires <= now()::timestamp
2024-02-29 18:44:30.464 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__channelAccessIds_0='?' (DbType = Object)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c.channel_id = ANY (@__channelAccessIds_0) OR (c.channel_id IS NULL AND array_position(@__channelAccessIds_0, NULL) IS NOT NULL)
2024-02-29 18:44:30.468 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:44:30.470 +03:00 [INF] Executed action TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi) in 15.5049ms
2024-02-29 18:44:30.471 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:44:30.473 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - -
2024-02-29 18:44:30.475 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - - - 200 2 application/json;+charset=utf-8 27.3651ms
2024-02-29 18:44:30.477 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:44:30.479 +03:00 [INF] Route matched with {action = "GetEligiblePromoPosts", controller = "Notification"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.PromoPost]] GetEligiblePromoPosts() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:44:30.482 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__currentTimeOnly_0='?' (DbType = Time), @__currentTime_1='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c."IsPartner", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."TopPos", c."Url", c."user"
FROM "Channel" AS c
WHERE c.promo_post = TRUE AND (c.promo_post_time IS NULL OR c.promo_post_time <= @__currentTimeOnly_0) AND (c.promo_post_last IS NULL OR c.promo_post_last + CAST(COALESCE(c.promo_post_interval, 0)::double precision::text || ' days' AS interval) <= @__currentTime_1)
2024-02-29 18:44:30.485 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.PromoPost, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:44:30.487 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi) in 5.8554ms
2024-02-29 18:44:30.488 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:44:30.491 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - - - 200 2 application/json;+charset=utf-8 17.8568ms
2024-02-29 18:44:35.436 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification - -
2024-02-29 18:44:35.437 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:44:35.439 +03:00 [INF] Route matched with {action = "GetNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] GetNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:44:35.444 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__currentTime_0='?' (DbType = DateTime2), @__p_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c0.notifications = TRUE AND (c0.notification_sent <> TRUE OR c0.notification_sent IS NULL) AND c0.last_bump IS NOT NULL AND c0.last_bump <= @__currentTime_0 AND @__currentTime_0 >= c0.last_bump + CAST(@__p_1::text || ' mins' AS interval)
2024-02-29 18:44:35.449 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:44:35.452 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi) in 10.5315ms
2024-02-29 18:44:35.454 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:44:35.455 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification - - - 200 2 application/json;+charset=utf-8 18.8824ms
2024-02-29 18:44:35.455 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - -
2024-02-29 18:44:35.457 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:44:35.458 +03:00 [INF] Route matched with {action = "CheckExpiredSubscriptions", controller = "Subscription"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] CheckExpiredSubscriptions() on controller TgCheckerApi.Controllers.SubscriptionController (TgCheckerApi).
2024-02-29 18:44:35.463 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", s.id, s.multiplier, s.name, s.price, s.tag_limit
FROM "ChannelHasSubscription" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "SubType" AS s ON c.type_id = s.id
WHERE c.expires IS NOT NULL AND c.expires <= now()::timestamp
2024-02-29 18:44:35.469 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__channelAccessIds_0='?' (DbType = Object)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c.channel_id = ANY (@__channelAccessIds_0) OR (c.channel_id IS NULL AND array_position(@__channelAccessIds_0, NULL) IS NOT NULL)
2024-02-29 18:44:35.473 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:44:35.475 +03:00 [INF] Executed action TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi) in 13.7461ms
2024-02-29 18:44:35.476 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:44:35.478 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - -
2024-02-29 18:44:35.478 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - - - 200 2 application/json;+charset=utf-8 22.4264ms
2024-02-29 18:44:35.478 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:44:35.483 +03:00 [INF] Route matched with {action = "GetEligiblePromoPosts", controller = "Notification"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.PromoPost]] GetEligiblePromoPosts() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:44:35.486 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__currentTimeOnly_0='?' (DbType = Time), @__currentTime_1='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c."IsPartner", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."TopPos", c."Url", c."user"
FROM "Channel" AS c
WHERE c.promo_post = TRUE AND (c.promo_post_time IS NULL OR c.promo_post_time <= @__currentTimeOnly_0) AND (c.promo_post_last IS NULL OR c.promo_post_last + CAST(COALESCE(c.promo_post_interval, 0)::double precision::text || ' days' AS interval) <= @__currentTime_1)
2024-02-29 18:44:35.489 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.PromoPost, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:44:35.491 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi) in 5.9257ms
2024-02-29 18:44:35.492 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:44:35.493 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - - - 200 2 application/json;+charset=utf-8 15.8635ms
2024-02-29 18:44:40.431 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification - -
2024-02-29 18:44:40.432 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:44:40.434 +03:00 [INF] Route matched with {action = "GetNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] GetNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:44:40.438 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__currentTime_0='?' (DbType = DateTime2), @__p_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c0.notifications = TRUE AND (c0.notification_sent <> TRUE OR c0.notification_sent IS NULL) AND c0.last_bump IS NOT NULL AND c0.last_bump <= @__currentTime_0 AND @__currentTime_0 >= c0.last_bump + CAST(@__p_1::text || ' mins' AS interval)
2024-02-29 18:44:40.443 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:44:40.446 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi) in 10.1043ms
2024-02-29 18:44:40.448 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:44:40.449 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification - - - 200 2 application/json;+charset=utf-8 17.8663ms
2024-02-29 18:44:40.449 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - -
2024-02-29 18:44:40.451 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:44:40.453 +03:00 [INF] Route matched with {action = "CheckExpiredSubscriptions", controller = "Subscription"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] CheckExpiredSubscriptions() on controller TgCheckerApi.Controllers.SubscriptionController (TgCheckerApi).
2024-02-29 18:44:40.456 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", s.id, s.multiplier, s.name, s.price, s.tag_limit
FROM "ChannelHasSubscription" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "SubType" AS s ON c.type_id = s.id
WHERE c.expires IS NOT NULL AND c.expires <= now()::timestamp
2024-02-29 18:44:40.464 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__channelAccessIds_0='?' (DbType = Object)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c.channel_id = ANY (@__channelAccessIds_0) OR (c.channel_id IS NULL AND array_position(@__channelAccessIds_0, NULL) IS NOT NULL)
2024-02-29 18:44:40.467 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:44:40.468 +03:00 [INF] Executed action TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi) in 13.0574ms
2024-02-29 18:44:40.470 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:44:40.471 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - -
2024-02-29 18:44:40.471 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - - - 200 2 application/json;+charset=utf-8 21.9896ms
2024-02-29 18:44:40.472 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:44:40.474 +03:00 [INF] Route matched with {action = "GetEligiblePromoPosts", controller = "Notification"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.PromoPost]] GetEligiblePromoPosts() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:44:40.479 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__currentTimeOnly_0='?' (DbType = Time), @__currentTime_1='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c."IsPartner", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."TopPos", c."Url", c."user"
FROM "Channel" AS c
WHERE c.promo_post = TRUE AND (c.promo_post_time IS NULL OR c.promo_post_time <= @__currentTimeOnly_0) AND (c.promo_post_last IS NULL OR c.promo_post_last + CAST(COALESCE(c.promo_post_interval, 0)::double precision::text || ' days' AS interval) <= @__currentTime_1)
2024-02-29 18:44:40.482 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.PromoPost, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:44:40.484 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi) in 6.3884ms
2024-02-29 18:44:40.486 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:44:40.487 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - - - 200 2 application/json;+charset=utf-8 15.6834ms
2024-02-29 18:44:45.436 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification - -
2024-02-29 18:44:45.437 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:44:45.438 +03:00 [INF] Route matched with {action = "GetNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] GetNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:44:45.443 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__currentTime_0='?' (DbType = DateTime2), @__p_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c0.notifications = TRUE AND (c0.notification_sent <> TRUE OR c0.notification_sent IS NULL) AND c0.last_bump IS NOT NULL AND c0.last_bump <= @__currentTime_0 AND @__currentTime_0 >= c0.last_bump + CAST(@__p_1::text || ' mins' AS interval)
2024-02-29 18:44:45.449 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:44:45.452 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi) in 10.8751ms
2024-02-29 18:44:45.453 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:44:45.455 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification - - - 200 2 application/json;+charset=utf-8 18.7912ms
2024-02-29 18:44:45.455 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - -
2024-02-29 18:44:45.456 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:44:45.458 +03:00 [INF] Route matched with {action = "CheckExpiredSubscriptions", controller = "Subscription"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] CheckExpiredSubscriptions() on controller TgCheckerApi.Controllers.SubscriptionController (TgCheckerApi).
2024-02-29 18:44:45.462 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", s.id, s.multiplier, s.name, s.price, s.tag_limit
FROM "ChannelHasSubscription" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "SubType" AS s ON c.type_id = s.id
WHERE c.expires IS NOT NULL AND c.expires <= now()::timestamp
2024-02-29 18:44:45.469 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__channelAccessIds_0='?' (DbType = Object)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c.channel_id = ANY (@__channelAccessIds_0) OR (c.channel_id IS NULL AND array_position(@__channelAccessIds_0, NULL) IS NOT NULL)
2024-02-29 18:44:45.472 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:44:45.474 +03:00 [INF] Executed action TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi) in 13.5228ms
2024-02-29 18:44:45.476 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:44:45.477 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - -
2024-02-29 18:44:45.477 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - - - 200 2 application/json;+charset=utf-8 22.5957ms
2024-02-29 18:44:45.478 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:44:45.483 +03:00 [INF] Route matched with {action = "GetEligiblePromoPosts", controller = "Notification"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.PromoPost]] GetEligiblePromoPosts() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:44:45.487 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__currentTimeOnly_0='?' (DbType = Time), @__currentTime_1='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c."IsPartner", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."TopPos", c."Url", c."user"
FROM "Channel" AS c
WHERE c.promo_post = TRUE AND (c.promo_post_time IS NULL OR c.promo_post_time <= @__currentTimeOnly_0) AND (c.promo_post_last IS NULL OR c.promo_post_last + CAST(COALESCE(c.promo_post_interval, 0)::double precision::text || ' days' AS interval) <= @__currentTime_1)
2024-02-29 18:44:45.490 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.PromoPost, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:44:45.491 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi) in 5.7741ms
2024-02-29 18:44:45.495 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:44:45.496 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - - - 200 2 application/json;+charset=utf-8 19.0456ms
2024-02-29 18:44:50.433 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification - -
2024-02-29 18:44:50.434 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:44:50.435 +03:00 [INF] Route matched with {action = "GetNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] GetNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:44:50.440 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__currentTime_0='?' (DbType = DateTime2), @__p_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c0.notifications = TRUE AND (c0.notification_sent <> TRUE OR c0.notification_sent IS NULL) AND c0.last_bump IS NOT NULL AND c0.last_bump <= @__currentTime_0 AND @__currentTime_0 >= c0.last_bump + CAST(@__p_1::text || ' mins' AS interval)
2024-02-29 18:44:50.445 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:44:50.448 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi) in 10.4907ms
2024-02-29 18:44:50.450 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:44:50.451 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - -
2024-02-29 18:44:50.451 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification - - - 200 2 application/json;+charset=utf-8 18.3970ms
2024-02-29 18:44:50.452 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:44:50.455 +03:00 [INF] Route matched with {action = "CheckExpiredSubscriptions", controller = "Subscription"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] CheckExpiredSubscriptions() on controller TgCheckerApi.Controllers.SubscriptionController (TgCheckerApi).
2024-02-29 18:44:50.459 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", s.id, s.multiplier, s.name, s.price, s.tag_limit
FROM "ChannelHasSubscription" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "SubType" AS s ON c.type_id = s.id
WHERE c.expires IS NOT NULL AND c.expires <= now()::timestamp
2024-02-29 18:44:50.465 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__channelAccessIds_0='?' (DbType = Object)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c.channel_id = ANY (@__channelAccessIds_0) OR (c.channel_id IS NULL AND array_position(@__channelAccessIds_0, NULL) IS NOT NULL)
2024-02-29 18:44:50.469 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:44:50.470 +03:00 [INF] Executed action TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi) in 13.2057ms
2024-02-29 18:44:50.472 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:44:50.473 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - -
2024-02-29 18:44:50.473 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - - - 200 2 application/json;+charset=utf-8 21.9152ms
2024-02-29 18:44:50.474 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:44:50.479 +03:00 [INF] Route matched with {action = "GetEligiblePromoPosts", controller = "Notification"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.PromoPost]] GetEligiblePromoPosts() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:44:50.482 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__currentTimeOnly_0='?' (DbType = Time), @__currentTime_1='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c."IsPartner", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."TopPos", c."Url", c."user"
FROM "Channel" AS c
WHERE c.promo_post = TRUE AND (c.promo_post_time IS NULL OR c.promo_post_time <= @__currentTimeOnly_0) AND (c.promo_post_last IS NULL OR c.promo_post_last + CAST(COALESCE(c.promo_post_interval, 0)::double precision::text || ' days' AS interval) <= @__currentTime_1)
2024-02-29 18:44:50.486 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.PromoPost, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:44:50.487 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi) in 6.1361ms
2024-02-29 18:44:50.488 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:44:50.490 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - - - 200 2 application/json;+charset=utf-8 16.2769ms
2024-02-29 18:44:52.358 +03:00 [ERR] Error occurred executing UpdateSubscribersJob via HTTP request.
System.Threading.Tasks.TaskCanceledException: The request was canceled due to the configured HttpClient.Timeout of 100 seconds elapsing.
 ---> System.TimeoutException: The operation was canceled.
 ---> System.Threading.Tasks.TaskCanceledException: The operation was canceled.
 ---> System.IO.IOException: Unable to read data from the transport connection: The I/O operation has been aborted because of either a thread exit or an application request..
 ---> System.Net.Sockets.SocketException (995): The I/O operation has been aborted because of either a thread exit or an application request.
   --- End of inner exception stack trace ---
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)
   at System.Net.Security.SslStream.EnsureFullTlsFrameAsync[TIOAdapter](TIOAdapter adapter)
   at System.Net.Security.SslStream.ReadAsyncInternal[TIOAdapter](TIOAdapter adapter, Memory`1 buffer)
   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)
   at System.Net.Http.HttpConnection.SendAsyncCore(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnection.SendAsyncCore(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   --- End of inner exception stack trace ---
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpClient.HandleFailure(Exception e, Boolean telemetryStarted, HttpResponseMessage response, CancellationTokenSource cts, CancellationToken cancellationToken, CancellationTokenSource pendingRequestsCts)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at TgCheckerApi.Job.UpdateSubscribersJob.Execute(IJobExecutionContext context) in C:\Users\timar\source\Repos\goldman2g5\TgCheckerApi\TgCheckerApi\Job\UpdateSubscribersJob.cs:line 49
2024-02-29 18:44:55.429 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification - -
2024-02-29 18:44:55.430 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:44:55.431 +03:00 [INF] Route matched with {action = "GetNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] GetNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:44:55.436 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__currentTime_0='?' (DbType = DateTime2), @__p_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c0.notifications = TRUE AND (c0.notification_sent <> TRUE OR c0.notification_sent IS NULL) AND c0.last_bump IS NOT NULL AND c0.last_bump <= @__currentTime_0 AND @__currentTime_0 >= c0.last_bump + CAST(@__p_1::text || ' mins' AS interval)
2024-02-29 18:44:55.440 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:44:55.444 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi) in 9.6732ms
2024-02-29 18:44:55.445 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:44:55.449 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - -
2024-02-29 18:44:55.449 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification - - - 200 2 application/json;+charset=utf-8 19.8725ms
2024-02-29 18:44:55.450 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:44:55.453 +03:00 [INF] Route matched with {action = "CheckExpiredSubscriptions", controller = "Subscription"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] CheckExpiredSubscriptions() on controller TgCheckerApi.Controllers.SubscriptionController (TgCheckerApi).
2024-02-29 18:44:55.457 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", s.id, s.multiplier, s.name, s.price, s.tag_limit
FROM "ChannelHasSubscription" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "SubType" AS s ON c.type_id = s.id
WHERE c.expires IS NOT NULL AND c.expires <= now()::timestamp
2024-02-29 18:44:55.463 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__channelAccessIds_0='?' (DbType = Object)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c.channel_id = ANY (@__channelAccessIds_0) OR (c.channel_id IS NULL AND array_position(@__channelAccessIds_0, NULL) IS NOT NULL)
2024-02-29 18:44:55.466 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:44:55.468 +03:00 [INF] Executed action TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi) in 12.4332ms
2024-02-29 18:44:55.469 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:44:55.471 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - -
2024-02-29 18:44:55.471 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - - - 200 2 application/json;+charset=utf-8 22.3481ms
2024-02-29 18:44:55.472 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:44:55.479 +03:00 [INF] Route matched with {action = "GetEligiblePromoPosts", controller = "Notification"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.PromoPost]] GetEligiblePromoPosts() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:44:55.482 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__currentTimeOnly_0='?' (DbType = Time), @__currentTime_1='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c."IsPartner", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."TopPos", c."Url", c."user"
FROM "Channel" AS c
WHERE c.promo_post = TRUE AND (c.promo_post_time IS NULL OR c.promo_post_time <= @__currentTimeOnly_0) AND (c.promo_post_last IS NULL OR c.promo_post_last + CAST(COALESCE(c.promo_post_interval, 0)::double precision::text || ' days' AS interval) <= @__currentTime_1)
2024-02-29 18:44:55.487 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.PromoPost, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:44:55.488 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi) in 6.5788ms
2024-02-29 18:44:55.489 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:44:55.492 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - - - 200 2 application/json;+charset=utf-8 20.7724ms
2024-02-29 18:45:00.437 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification - -
2024-02-29 18:45:00.439 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:45:00.442 +03:00 [INF] Route matched with {action = "GetNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] GetNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:45:00.448 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__currentTime_0='?' (DbType = DateTime2), @__p_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c0.notifications = TRUE AND (c0.notification_sent <> TRUE OR c0.notification_sent IS NULL) AND c0.last_bump IS NOT NULL AND c0.last_bump <= @__currentTime_0 AND @__currentTime_0 >= c0.last_bump + CAST(@__p_1::text || ' mins' AS interval)
2024-02-29 18:45:00.454 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:45:00.456 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi) in 10.8776ms
2024-02-29 18:45:00.457 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:45:00.459 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - -
2024-02-29 18:45:00.459 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification - - - 200 2 application/json;+charset=utf-8 21.4903ms
2024-02-29 18:45:00.460 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:45:00.462 +03:00 [INF] Route matched with {action = "CheckExpiredSubscriptions", controller = "Subscription"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] CheckExpiredSubscriptions() on controller TgCheckerApi.Controllers.SubscriptionController (TgCheckerApi).
2024-02-29 18:45:00.467 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", s.id, s.multiplier, s.name, s.price, s.tag_limit
FROM "ChannelHasSubscription" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "SubType" AS s ON c.type_id = s.id
WHERE c.expires IS NOT NULL AND c.expires <= now()::timestamp
2024-02-29 18:45:00.473 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__channelAccessIds_0='?' (DbType = Object)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c.channel_id = ANY (@__channelAccessIds_0) OR (c.channel_id IS NULL AND array_position(@__channelAccessIds_0, NULL) IS NOT NULL)
2024-02-29 18:45:00.476 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:45:00.478 +03:00 [INF] Executed action TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi) in 13.2363ms
2024-02-29 18:45:00.479 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:45:00.480 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - -
2024-02-29 18:45:00.480 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - - - 200 2 application/json;+charset=utf-8 21.7277ms
2024-02-29 18:45:00.484 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:45:00.486 +03:00 [INF] Route matched with {action = "GetEligiblePromoPosts", controller = "Notification"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.PromoPost]] GetEligiblePromoPosts() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:45:00.490 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__currentTimeOnly_0='?' (DbType = Time), @__currentTime_1='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c."IsPartner", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."TopPos", c."Url", c."user"
FROM "Channel" AS c
WHERE c.promo_post = TRUE AND (c.promo_post_time IS NULL OR c.promo_post_time <= @__currentTimeOnly_0) AND (c.promo_post_last IS NULL OR c.promo_post_last + CAST(COALESCE(c.promo_post_interval, 0)::double precision::text || ' days' AS interval) <= @__currentTime_1)
2024-02-29 18:45:00.493 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.PromoPost, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:45:00.494 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi) in 6.0398ms
2024-02-29 18:45:00.496 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:45:00.497 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - - - 200 2 application/json;+charset=utf-8 16.4994ms
2024-02-29 18:45:05.433 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification - -
2024-02-29 18:45:05.434 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:45:05.436 +03:00 [INF] Route matched with {action = "GetNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] GetNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:45:05.441 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__currentTime_0='?' (DbType = DateTime2), @__p_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c0.notifications = TRUE AND (c0.notification_sent <> TRUE OR c0.notification_sent IS NULL) AND c0.last_bump IS NOT NULL AND c0.last_bump <= @__currentTime_0 AND @__currentTime_0 >= c0.last_bump + CAST(@__p_1::text || ' mins' AS interval)
2024-02-29 18:45:05.474 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:45:05.477 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi) in 38.0592ms
2024-02-29 18:45:05.480 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:45:05.480 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - -
2024-02-29 18:45:05.481 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification - - - 200 2 application/json;+charset=utf-8 47.8060ms
2024-02-29 18:45:05.482 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:45:05.485 +03:00 [INF] Route matched with {action = "CheckExpiredSubscriptions", controller = "Subscription"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] CheckExpiredSubscriptions() on controller TgCheckerApi.Controllers.SubscriptionController (TgCheckerApi).
2024-02-29 18:45:05.489 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", s.id, s.multiplier, s.name, s.price, s.tag_limit
FROM "ChannelHasSubscription" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "SubType" AS s ON c.type_id = s.id
WHERE c.expires IS NOT NULL AND c.expires <= now()::timestamp
2024-02-29 18:45:05.493 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__channelAccessIds_0='?' (DbType = Object)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c.channel_id = ANY (@__channelAccessIds_0) OR (c.channel_id IS NULL AND array_position(@__channelAccessIds_0, NULL) IS NOT NULL)
2024-02-29 18:45:05.498 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:45:05.499 +03:00 [INF] Executed action TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi) in 12.1484ms
2024-02-29 18:45:05.500 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:45:05.502 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - -
2024-02-29 18:45:05.502 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - - - 200 2 application/json;+charset=utf-8 22.1351ms
2024-02-29 18:45:05.503 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:45:05.505 +03:00 [INF] Route matched with {action = "GetEligiblePromoPosts", controller = "Notification"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.PromoPost]] GetEligiblePromoPosts() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:45:05.508 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__currentTimeOnly_0='?' (DbType = Time), @__currentTime_1='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c."IsPartner", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."TopPos", c."Url", c."user"
FROM "Channel" AS c
WHERE c.promo_post = TRUE AND (c.promo_post_time IS NULL OR c.promo_post_time <= @__currentTimeOnly_0) AND (c.promo_post_last IS NULL OR c.promo_post_last + CAST(COALESCE(c.promo_post_interval, 0)::double precision::text || ' days' AS interval) <= @__currentTime_1)
2024-02-29 18:45:05.513 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.PromoPost, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:45:05.515 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi) in 7.983ms
2024-02-29 18:45:05.516 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:45:05.517 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - - - 200 2 application/json;+charset=utf-8 15.5328ms
2024-02-29 18:45:10.424 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification - -
2024-02-29 18:45:10.425 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:45:10.426 +03:00 [INF] Route matched with {action = "GetNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] GetNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:45:10.430 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__currentTime_0='?' (DbType = DateTime2), @__p_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c0.notifications = TRUE AND (c0.notification_sent <> TRUE OR c0.notification_sent IS NULL) AND c0.last_bump IS NOT NULL AND c0.last_bump <= @__currentTime_0 AND @__currentTime_0 >= c0.last_bump + CAST(@__p_1::text || ' mins' AS interval)
2024-02-29 18:45:10.435 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:45:10.436 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi) in 8.1071ms
2024-02-29 18:45:10.439 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - -
2024-02-29 18:45:10.440 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:45:10.441 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:45:10.442 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification - - - 200 2 application/json;+charset=utf-8 17.9840ms
2024-02-29 18:45:10.443 +03:00 [INF] Route matched with {action = "CheckExpiredSubscriptions", controller = "Subscription"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] CheckExpiredSubscriptions() on controller TgCheckerApi.Controllers.SubscriptionController (TgCheckerApi).
2024-02-29 18:45:10.449 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", s.id, s.multiplier, s.name, s.price, s.tag_limit
FROM "ChannelHasSubscription" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "SubType" AS s ON c.type_id = s.id
WHERE c.expires IS NOT NULL AND c.expires <= now()::timestamp
2024-02-29 18:45:10.454 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__channelAccessIds_0='?' (DbType = Object)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c.channel_id = ANY (@__channelAccessIds_0) OR (c.channel_id IS NULL AND array_position(@__channelAccessIds_0, NULL) IS NOT NULL)
2024-02-29 18:45:10.458 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:45:10.459 +03:00 [INF] Executed action TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi) in 12.466ms
2024-02-29 18:45:10.461 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:45:10.462 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - -
2024-02-29 18:45:10.462 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - - - 200 2 application/json;+charset=utf-8 23.1321ms
2024-02-29 18:45:10.463 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:45:10.465 +03:00 [INF] Route matched with {action = "GetEligiblePromoPosts", controller = "Notification"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.PromoPost]] GetEligiblePromoPosts() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:45:10.469 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__currentTimeOnly_0='?' (DbType = Time), @__currentTime_1='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c."IsPartner", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."TopPos", c."Url", c."user"
FROM "Channel" AS c
WHERE c.promo_post = TRUE AND (c.promo_post_time IS NULL OR c.promo_post_time <= @__currentTimeOnly_0) AND (c.promo_post_last IS NULL OR c.promo_post_last + CAST(COALESCE(c.promo_post_interval, 0)::double precision::text || ' days' AS interval) <= @__currentTime_1)
2024-02-29 18:45:10.474 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.PromoPost, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:45:10.475 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi) in 7.7212ms
2024-02-29 18:45:10.477 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:45:10.478 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - - - 200 2 application/json;+charset=utf-8 15.3410ms
2024-02-29 18:45:15.442 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification - -
2024-02-29 18:45:15.444 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:45:15.445 +03:00 [INF] Route matched with {action = "GetNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] GetNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:45:15.448 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__currentTime_0='?' (DbType = DateTime2), @__p_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c0.notifications = TRUE AND (c0.notification_sent <> TRUE OR c0.notification_sent IS NULL) AND c0.last_bump IS NOT NULL AND c0.last_bump <= @__currentTime_0 AND @__currentTime_0 >= c0.last_bump + CAST(@__p_1::text || ' mins' AS interval)
2024-02-29 18:45:15.451 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:45:15.453 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi) in 6.3187ms
2024-02-29 18:45:15.454 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:45:15.454 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification - - - 200 2 application/json;+charset=utf-8 12.1719ms
2024-02-29 18:45:15.456 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - -
2024-02-29 18:45:15.457 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:45:15.457 +03:00 [INF] Route matched with {action = "CheckExpiredSubscriptions", controller = "Subscription"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] CheckExpiredSubscriptions() on controller TgCheckerApi.Controllers.SubscriptionController (TgCheckerApi).
2024-02-29 18:45:15.464 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", s.id, s.multiplier, s.name, s.price, s.tag_limit
FROM "ChannelHasSubscription" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "SubType" AS s ON c.type_id = s.id
WHERE c.expires IS NOT NULL AND c.expires <= now()::timestamp
2024-02-29 18:45:15.469 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__channelAccessIds_0='?' (DbType = Object)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c.channel_id = ANY (@__channelAccessIds_0) OR (c.channel_id IS NULL AND array_position(@__channelAccessIds_0, NULL) IS NOT NULL)
2024-02-29 18:45:15.472 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:45:15.473 +03:00 [INF] Executed action TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi) in 13.9728ms
2024-02-29 18:45:15.474 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:45:15.475 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - - - 200 2 application/json;+charset=utf-8 18.7660ms
2024-02-29 18:45:15.477 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - -
2024-02-29 18:45:15.478 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:45:15.478 +03:00 [INF] Route matched with {action = "GetEligiblePromoPosts", controller = "Notification"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.PromoPost]] GetEligiblePromoPosts() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:45:15.481 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__currentTimeOnly_0='?' (DbType = Time), @__currentTime_1='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c."IsPartner", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."TopPos", c."Url", c."user"
FROM "Channel" AS c
WHERE c.promo_post = TRUE AND (c.promo_post_time IS NULL OR c.promo_post_time <= @__currentTimeOnly_0) AND (c.promo_post_last IS NULL OR c.promo_post_last + CAST(COALESCE(c.promo_post_interval, 0)::double precision::text || ' days' AS interval) <= @__currentTime_1)
2024-02-29 18:45:15.482 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.PromoPost, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:45:15.483 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi) in 3.5526ms
2024-02-29 18:45:15.484 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:45:15.485 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - - - 200 2 application/json;+charset=utf-8 7.4777ms
2024-02-29 18:45:20.439 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification - -
2024-02-29 18:45:20.440 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:45:20.441 +03:00 [INF] Route matched with {action = "GetNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] GetNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:45:20.445 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__currentTime_0='?' (DbType = DateTime2), @__p_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c0.notifications = TRUE AND (c0.notification_sent <> TRUE OR c0.notification_sent IS NULL) AND c0.last_bump IS NOT NULL AND c0.last_bump <= @__currentTime_0 AND @__currentTime_0 >= c0.last_bump + CAST(@__p_1::text || ' mins' AS interval)
2024-02-29 18:45:20.448 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:45:20.449 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi) in 6.5524ms
2024-02-29 18:45:20.451 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:45:20.452 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification - - - 200 2 application/json;+charset=utf-8 12.7896ms
2024-02-29 18:45:20.453 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - -
2024-02-29 18:45:20.454 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:45:20.455 +03:00 [INF] Route matched with {action = "CheckExpiredSubscriptions", controller = "Subscription"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] CheckExpiredSubscriptions() on controller TgCheckerApi.Controllers.SubscriptionController (TgCheckerApi).
2024-02-29 18:45:20.458 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", s.id, s.multiplier, s.name, s.price, s.tag_limit
FROM "ChannelHasSubscription" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "SubType" AS s ON c.type_id = s.id
WHERE c.expires IS NOT NULL AND c.expires <= now()::timestamp
2024-02-29 18:45:20.463 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__channelAccessIds_0='?' (DbType = Object)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c.channel_id = ANY (@__channelAccessIds_0) OR (c.channel_id IS NULL AND array_position(@__channelAccessIds_0, NULL) IS NOT NULL)
2024-02-29 18:45:20.465 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:45:20.466 +03:00 [INF] Executed action TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi) in 9.6173ms
2024-02-29 18:45:20.468 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:45:20.469 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - -
2024-02-29 18:45:20.469 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - - - 200 2 application/json;+charset=utf-8 16.8176ms
2024-02-29 18:45:20.470 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:45:20.472 +03:00 [INF] Route matched with {action = "GetEligiblePromoPosts", controller = "Notification"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.PromoPost]] GetEligiblePromoPosts() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:45:20.474 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__currentTimeOnly_0='?' (DbType = Time), @__currentTime_1='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c."IsPartner", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."TopPos", c."Url", c."user"
FROM "Channel" AS c
WHERE c.promo_post = TRUE AND (c.promo_post_time IS NULL OR c.promo_post_time <= @__currentTimeOnly_0) AND (c.promo_post_last IS NULL OR c.promo_post_last + CAST(COALESCE(c.promo_post_interval, 0)::double precision::text || ' days' AS interval) <= @__currentTime_1)
2024-02-29 18:45:20.477 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.PromoPost, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:45:20.478 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi) in 4.401ms
2024-02-29 18:45:20.479 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:45:20.480 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - - - 200 2 application/json;+charset=utf-8 10.6661ms
2024-02-29 18:45:25.433 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification - -
2024-02-29 18:45:25.434 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:45:25.435 +03:00 [INF] Route matched with {action = "GetNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] GetNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:45:25.438 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__currentTime_0='?' (DbType = DateTime2), @__p_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c0.notifications = TRUE AND (c0.notification_sent <> TRUE OR c0.notification_sent IS NULL) AND c0.last_bump IS NOT NULL AND c0.last_bump <= @__currentTime_0 AND @__currentTime_0 >= c0.last_bump + CAST(@__p_1::text || ' mins' AS interval)
2024-02-29 18:45:25.441 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:45:25.442 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi) in 5.9855ms
2024-02-29 18:45:25.443 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:45:25.444 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - -
2024-02-29 18:45:25.444 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification - - - 200 2 application/json;+charset=utf-8 11.6067ms
2024-02-29 18:45:25.445 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:45:25.447 +03:00 [INF] Route matched with {action = "CheckExpiredSubscriptions", controller = "Subscription"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] CheckExpiredSubscriptions() on controller TgCheckerApi.Controllers.SubscriptionController (TgCheckerApi).
2024-02-29 18:45:25.450 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", s.id, s.multiplier, s.name, s.price, s.tag_limit
FROM "ChannelHasSubscription" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "SubType" AS s ON c.type_id = s.id
WHERE c.expires IS NOT NULL AND c.expires <= now()::timestamp
2024-02-29 18:45:25.454 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__channelAccessIds_0='?' (DbType = Object)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c.channel_id = ANY (@__channelAccessIds_0) OR (c.channel_id IS NULL AND array_position(@__channelAccessIds_0, NULL) IS NOT NULL)
2024-02-29 18:45:25.456 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:45:25.457 +03:00 [INF] Executed action TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi) in 8.8554ms
2024-02-29 18:45:25.458 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:45:25.459 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - -
2024-02-29 18:45:25.460 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - - - 200 2 application/json;+charset=utf-8 15.4055ms
2024-02-29 18:45:25.460 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:45:25.462 +03:00 [INF] Route matched with {action = "GetEligiblePromoPosts", controller = "Notification"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.PromoPost]] GetEligiblePromoPosts() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:45:25.465 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__currentTimeOnly_0='?' (DbType = Time), @__currentTime_1='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c."IsPartner", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."TopPos", c."Url", c."user"
FROM "Channel" AS c
WHERE c.promo_post = TRUE AND (c.promo_post_time IS NULL OR c.promo_post_time <= @__currentTimeOnly_0) AND (c.promo_post_last IS NULL OR c.promo_post_last + CAST(COALESCE(c.promo_post_interval, 0)::double precision::text || ' days' AS interval) <= @__currentTime_1)
2024-02-29 18:45:25.467 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.PromoPost, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:45:25.468 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi) in 4.5587ms
2024-02-29 18:45:25.472 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:45:25.474 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - - - 200 2 application/json;+charset=utf-8 14.9835ms
2024-02-29 18:45:30.429 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification - -
2024-02-29 18:45:30.430 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:45:30.431 +03:00 [INF] Route matched with {action = "GetNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] GetNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:45:30.434 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__currentTime_0='?' (DbType = DateTime2), @__p_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c0.notifications = TRUE AND (c0.notification_sent <> TRUE OR c0.notification_sent IS NULL) AND c0.last_bump IS NOT NULL AND c0.last_bump <= @__currentTime_0 AND @__currentTime_0 >= c0.last_bump + CAST(@__p_1::text || ' mins' AS interval)
2024-02-29 18:45:30.439 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:45:30.440 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi) in 7.2831ms
2024-02-29 18:45:30.441 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:45:30.442 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - -
2024-02-29 18:45:30.442 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification - - - 200 2 application/json;+charset=utf-8 13.2228ms
2024-02-29 18:45:30.443 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:45:30.445 +03:00 [INF] Route matched with {action = "CheckExpiredSubscriptions", controller = "Subscription"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] CheckExpiredSubscriptions() on controller TgCheckerApi.Controllers.SubscriptionController (TgCheckerApi).
2024-02-29 18:45:30.448 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", s.id, s.multiplier, s.name, s.price, s.tag_limit
FROM "ChannelHasSubscription" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "SubType" AS s ON c.type_id = s.id
WHERE c.expires IS NOT NULL AND c.expires <= now()::timestamp
2024-02-29 18:45:30.451 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__channelAccessIds_0='?' (DbType = Object)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c.channel_id = ANY (@__channelAccessIds_0) OR (c.channel_id IS NULL AND array_position(@__channelAccessIds_0, NULL) IS NOT NULL)
2024-02-29 18:45:30.454 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:45:30.455 +03:00 [INF] Executed action TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi) in 8.5371ms
2024-02-29 18:45:30.456 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:45:30.457 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - -
2024-02-29 18:45:30.457 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - - - 200 2 application/json;+charset=utf-8 15.4231ms
2024-02-29 18:45:30.457 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:45:30.458 +03:00 [INF] Route matched with {action = "GetEligiblePromoPosts", controller = "Notification"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.PromoPost]] GetEligiblePromoPosts() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:45:30.461 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__currentTimeOnly_0='?' (DbType = Time), @__currentTime_1='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c."IsPartner", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."TopPos", c."Url", c."user"
FROM "Channel" AS c
WHERE c.promo_post = TRUE AND (c.promo_post_time IS NULL OR c.promo_post_time <= @__currentTimeOnly_0) AND (c.promo_post_last IS NULL OR c.promo_post_last + CAST(COALESCE(c.promo_post_interval, 0)::double precision::text || ' days' AS interval) <= @__currentTime_1)
2024-02-29 18:45:30.462 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.PromoPost, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:45:30.463 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi) in 3.2363ms
2024-02-29 18:45:30.464 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:45:30.465 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - - - 200 2 application/json;+charset=utf-8 8.0116ms
2024-02-29 18:45:35.430 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification - -
2024-02-29 18:45:35.431 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:45:35.433 +03:00 [INF] Route matched with {action = "GetNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] GetNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:45:35.440 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__currentTime_0='?' (DbType = DateTime2), @__p_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c0.notifications = TRUE AND (c0.notification_sent <> TRUE OR c0.notification_sent IS NULL) AND c0.last_bump IS NOT NULL AND c0.last_bump <= @__currentTime_0 AND @__currentTime_0 >= c0.last_bump + CAST(@__p_1::text || ' mins' AS interval)
2024-02-29 18:45:35.444 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:45:35.446 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi) in 7.975ms
2024-02-29 18:45:35.447 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:45:35.448 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - -
2024-02-29 18:45:35.448 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification - - - 200 2 application/json;+charset=utf-8 17.9317ms
2024-02-29 18:45:35.449 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:45:35.450 +03:00 [INF] Route matched with {action = "CheckExpiredSubscriptions", controller = "Subscription"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] CheckExpiredSubscriptions() on controller TgCheckerApi.Controllers.SubscriptionController (TgCheckerApi).
2024-02-29 18:45:35.453 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", s.id, s.multiplier, s.name, s.price, s.tag_limit
FROM "ChannelHasSubscription" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "SubType" AS s ON c.type_id = s.id
WHERE c.expires IS NOT NULL AND c.expires <= now()::timestamp
2024-02-29 18:45:35.457 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__channelAccessIds_0='?' (DbType = Object)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c.channel_id = ANY (@__channelAccessIds_0) OR (c.channel_id IS NULL AND array_position(@__channelAccessIds_0, NULL) IS NOT NULL)
2024-02-29 18:45:35.458 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:45:35.459 +03:00 [INF] Executed action TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi) in 7.5158ms
2024-02-29 18:45:35.461 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:45:35.461 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - -
2024-02-29 18:45:35.462 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - - - 200 2 application/json;+charset=utf-8 14.0039ms
2024-02-29 18:45:35.462 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:45:35.464 +03:00 [INF] Route matched with {action = "GetEligiblePromoPosts", controller = "Notification"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.PromoPost]] GetEligiblePromoPosts() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:45:35.466 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__currentTimeOnly_0='?' (DbType = Time), @__currentTime_1='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c."IsPartner", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."TopPos", c."Url", c."user"
FROM "Channel" AS c
WHERE c.promo_post = TRUE AND (c.promo_post_time IS NULL OR c.promo_post_time <= @__currentTimeOnly_0) AND (c.promo_post_last IS NULL OR c.promo_post_last + CAST(COALESCE(c.promo_post_interval, 0)::double precision::text || ' days' AS interval) <= @__currentTime_1)
2024-02-29 18:45:35.467 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.PromoPost, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:45:35.468 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi) in 3.18ms
2024-02-29 18:45:35.469 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:45:35.470 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - - - 200 2 application/json;+charset=utf-8 8.8053ms
2024-02-29 18:45:40.426 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification - -
2024-02-29 18:45:40.427 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:45:40.428 +03:00 [INF] Route matched with {action = "GetNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] GetNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:45:40.432 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__currentTime_0='?' (DbType = DateTime2), @__p_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c0.notifications = TRUE AND (c0.notification_sent <> TRUE OR c0.notification_sent IS NULL) AND c0.last_bump IS NOT NULL AND c0.last_bump <= @__currentTime_0 AND @__currentTime_0 >= c0.last_bump + CAST(@__p_1::text || ' mins' AS interval)
2024-02-29 18:45:40.435 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:45:40.437 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi) in 6.7251ms
2024-02-29 18:45:40.438 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:45:40.439 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - -
2024-02-29 18:45:40.440 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification - - - 200 2 application/json;+charset=utf-8 14.1661ms
2024-02-29 18:45:40.441 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:45:40.443 +03:00 [INF] Route matched with {action = "CheckExpiredSubscriptions", controller = "Subscription"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] CheckExpiredSubscriptions() on controller TgCheckerApi.Controllers.SubscriptionController (TgCheckerApi).
2024-02-29 18:45:40.446 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", s.id, s.multiplier, s.name, s.price, s.tag_limit
FROM "ChannelHasSubscription" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "SubType" AS s ON c.type_id = s.id
WHERE c.expires IS NOT NULL AND c.expires <= now()::timestamp
2024-02-29 18:45:40.450 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__channelAccessIds_0='?' (DbType = Object)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c.channel_id = ANY (@__channelAccessIds_0) OR (c.channel_id IS NULL AND array_position(@__channelAccessIds_0, NULL) IS NOT NULL)
2024-02-29 18:45:40.452 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:45:40.454 +03:00 [INF] Executed action TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi) in 9.3555ms
2024-02-29 18:45:40.456 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:45:40.456 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - -
2024-02-29 18:45:40.457 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - - - 200 2 application/json;+charset=utf-8 17.7242ms
2024-02-29 18:45:40.458 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:45:40.460 +03:00 [INF] Route matched with {action = "GetEligiblePromoPosts", controller = "Notification"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.PromoPost]] GetEligiblePromoPosts() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:45:40.462 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__currentTimeOnly_0='?' (DbType = Time), @__currentTime_1='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c."IsPartner", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."TopPos", c."Url", c."user"
FROM "Channel" AS c
WHERE c.promo_post = TRUE AND (c.promo_post_time IS NULL OR c.promo_post_time <= @__currentTimeOnly_0) AND (c.promo_post_last IS NULL OR c.promo_post_last + CAST(COALESCE(c.promo_post_interval, 0)::double precision::text || ' days' AS interval) <= @__currentTime_1)
2024-02-29 18:45:40.464 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.PromoPost, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:45:40.465 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi) in 3.8503ms
2024-02-29 18:45:40.466 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:45:40.466 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - - - 200 2 application/json;+charset=utf-8 10.4284ms
2024-02-29 18:45:45.435 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification - -
2024-02-29 18:45:45.436 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:45:45.436 +03:00 [INF] Route matched with {action = "GetNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] GetNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:45:45.442 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__currentTime_0='?' (DbType = DateTime2), @__p_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c0.notifications = TRUE AND (c0.notification_sent <> TRUE OR c0.notification_sent IS NULL) AND c0.last_bump IS NOT NULL AND c0.last_bump <= @__currentTime_0 AND @__currentTime_0 >= c0.last_bump + CAST(@__p_1::text || ' mins' AS interval)
2024-02-29 18:45:45.445 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:45:45.447 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi) in 6.2135ms
2024-02-29 18:45:45.448 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:45:45.448 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - -
2024-02-29 18:45:45.449 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification - - - 200 2 application/json;+charset=utf-8 14.0094ms
2024-02-29 18:45:45.450 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:45:45.452 +03:00 [INF] Route matched with {action = "CheckExpiredSubscriptions", controller = "Subscription"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] CheckExpiredSubscriptions() on controller TgCheckerApi.Controllers.SubscriptionController (TgCheckerApi).
2024-02-29 18:45:45.455 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", s.id, s.multiplier, s.name, s.price, s.tag_limit
FROM "ChannelHasSubscription" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "SubType" AS s ON c.type_id = s.id
WHERE c.expires IS NOT NULL AND c.expires <= now()::timestamp
2024-02-29 18:45:45.458 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__channelAccessIds_0='?' (DbType = Object)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c.channel_id = ANY (@__channelAccessIds_0) OR (c.channel_id IS NULL AND array_position(@__channelAccessIds_0, NULL) IS NOT NULL)
2024-02-29 18:45:45.460 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:45:45.461 +03:00 [INF] Executed action TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi) in 7.7368ms
2024-02-29 18:45:45.462 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:45:45.463 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - -
2024-02-29 18:45:45.463 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - - - 200 2 application/json;+charset=utf-8 14.9623ms
2024-02-29 18:45:45.464 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:45:45.465 +03:00 [INF] Route matched with {action = "GetEligiblePromoPosts", controller = "Notification"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.PromoPost]] GetEligiblePromoPosts() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:45:45.467 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__currentTimeOnly_0='?' (DbType = Time), @__currentTime_1='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c."IsPartner", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."TopPos", c."Url", c."user"
FROM "Channel" AS c
WHERE c.promo_post = TRUE AND (c.promo_post_time IS NULL OR c.promo_post_time <= @__currentTimeOnly_0) AND (c.promo_post_last IS NULL OR c.promo_post_last + CAST(COALESCE(c.promo_post_interval, 0)::double precision::text || ' days' AS interval) <= @__currentTime_1)
2024-02-29 18:45:45.469 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.PromoPost, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:45:45.470 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi) in 3.7241ms
2024-02-29 18:45:45.471 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:45:45.472 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - - - 200 2 application/json;+charset=utf-8 8.8535ms
2024-02-29 18:45:50.430 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification - -
2024-02-29 18:45:50.431 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:45:50.433 +03:00 [INF] Route matched with {action = "GetNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] GetNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:45:50.440 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__currentTime_0='?' (DbType = DateTime2), @__p_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c0.notifications = TRUE AND (c0.notification_sent <> TRUE OR c0.notification_sent IS NULL) AND c0.last_bump IS NOT NULL AND c0.last_bump <= @__currentTime_0 AND @__currentTime_0 >= c0.last_bump + CAST(@__p_1::text || ' mins' AS interval)
2024-02-29 18:45:50.448 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:45:50.449 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi) in 11.1039ms
2024-02-29 18:45:50.452 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:45:50.454 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - -
2024-02-29 18:45:50.455 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification - - - 200 2 application/json;+charset=utf-8 25.7717ms
2024-02-29 18:45:50.457 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:45:50.460 +03:00 [INF] Route matched with {action = "CheckExpiredSubscriptions", controller = "Subscription"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] CheckExpiredSubscriptions() on controller TgCheckerApi.Controllers.SubscriptionController (TgCheckerApi).
2024-02-29 18:45:50.464 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", s.id, s.multiplier, s.name, s.price, s.tag_limit
FROM "ChannelHasSubscription" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "SubType" AS s ON c.type_id = s.id
WHERE c.expires IS NOT NULL AND c.expires <= now()::timestamp
2024-02-29 18:45:50.470 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__channelAccessIds_0='?' (DbType = Object)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c.channel_id = ANY (@__channelAccessIds_0) OR (c.channel_id IS NULL AND array_position(@__channelAccessIds_0, NULL) IS NOT NULL)
2024-02-29 18:45:50.474 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:45:50.475 +03:00 [INF] Executed action TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi) in 12.123ms
2024-02-29 18:45:50.477 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:45:50.477 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - -
2024-02-29 18:45:50.479 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - - - 200 2 application/json;+charset=utf-8 24.4431ms
2024-02-29 18:45:50.479 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:45:50.482 +03:00 [INF] Route matched with {action = "GetEligiblePromoPosts", controller = "Notification"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.PromoPost]] GetEligiblePromoPosts() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:45:50.484 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__currentTimeOnly_0='?' (DbType = Time), @__currentTime_1='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c."IsPartner", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."TopPos", c."Url", c."user"
FROM "Channel" AS c
WHERE c.promo_post = TRUE AND (c.promo_post_time IS NULL OR c.promo_post_time <= @__currentTimeOnly_0) AND (c.promo_post_last IS NULL OR c.promo_post_last + CAST(COALESCE(c.promo_post_interval, 0)::double precision::text || ' days' AS interval) <= @__currentTime_1)
2024-02-29 18:45:50.488 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.PromoPost, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:45:50.490 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi) in 7.0654ms
2024-02-29 18:45:50.492 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:45:50.493 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - - - 200 2 application/json;+charset=utf-8 16.0172ms
2024-02-29 18:45:55.443 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification - -
2024-02-29 18:45:55.445 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:45:55.448 +03:00 [INF] Route matched with {action = "GetNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] GetNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:45:55.453 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__currentTime_0='?' (DbType = DateTime2), @__p_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c0.notifications = TRUE AND (c0.notification_sent <> TRUE OR c0.notification_sent IS NULL) AND c0.last_bump IS NOT NULL AND c0.last_bump <= @__currentTime_0 AND @__currentTime_0 >= c0.last_bump + CAST(@__p_1::text || ' mins' AS interval)
2024-02-29 18:45:55.456 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:45:55.457 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi) in 6.1605ms
2024-02-29 18:45:55.459 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:45:55.460 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - -
2024-02-29 18:45:55.460 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification - - - 200 2 application/json;+charset=utf-8 16.6737ms
2024-02-29 18:45:55.460 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:45:55.462 +03:00 [INF] Route matched with {action = "CheckExpiredSubscriptions", controller = "Subscription"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] CheckExpiredSubscriptions() on controller TgCheckerApi.Controllers.SubscriptionController (TgCheckerApi).
2024-02-29 18:45:55.488 +03:00 [INF] Executed DbCommand (24ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", s.id, s.multiplier, s.name, s.price, s.tag_limit
FROM "ChannelHasSubscription" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "SubType" AS s ON c.type_id = s.id
WHERE c.expires IS NOT NULL AND c.expires <= now()::timestamp
2024-02-29 18:45:55.493 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__channelAccessIds_0='?' (DbType = Object)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c.channel_id = ANY (@__channelAccessIds_0) OR (c.channel_id IS NULL AND array_position(@__channelAccessIds_0, NULL) IS NOT NULL)
2024-02-29 18:45:55.495 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:45:55.498 +03:00 [INF] Executed action TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi) in 34.5295ms
2024-02-29 18:45:55.500 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - -
2024-02-29 18:45:55.500 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:45:55.501 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:45:55.503 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - - - 200 2 application/json;+charset=utf-8 42.9001ms
2024-02-29 18:45:55.503 +03:00 [INF] Route matched with {action = "GetEligiblePromoPosts", controller = "Notification"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.PromoPost]] GetEligiblePromoPosts() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:45:55.516 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__currentTimeOnly_0='?' (DbType = Time), @__currentTime_1='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c."IsPartner", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."TopPos", c."Url", c."user"
FROM "Channel" AS c
WHERE c.promo_post = TRUE AND (c.promo_post_time IS NULL OR c.promo_post_time <= @__currentTimeOnly_0) AND (c.promo_post_last IS NULL OR c.promo_post_last + CAST(COALESCE(c.promo_post_interval, 0)::double precision::text || ' days' AS interval) <= @__currentTime_1)
2024-02-29 18:45:55.521 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.PromoPost, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:45:55.523 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi) in 8.4823ms
2024-02-29 18:45:55.524 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:45:55.525 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - - - 200 2 application/json;+charset=utf-8 24.3985ms
2024-02-29 18:46:00.431 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification - -
2024-02-29 18:46:00.432 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:46:00.433 +03:00 [INF] Route matched with {action = "GetNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] GetNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:46:00.436 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__currentTime_0='?' (DbType = DateTime2), @__p_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c0.notifications = TRUE AND (c0.notification_sent <> TRUE OR c0.notification_sent IS NULL) AND c0.last_bump IS NOT NULL AND c0.last_bump <= @__currentTime_0 AND @__currentTime_0 >= c0.last_bump + CAST(@__p_1::text || ' mins' AS interval)
2024-02-29 18:46:00.440 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:46:00.441 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi) in 6.0473ms
2024-02-29 18:46:00.442 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:46:00.442 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification - - - 200 2 application/json;+charset=utf-8 11.1039ms
2024-02-29 18:46:00.444 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - -
2024-02-29 18:46:00.444 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:46:00.445 +03:00 [INF] Route matched with {action = "CheckExpiredSubscriptions", controller = "Subscription"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] CheckExpiredSubscriptions() on controller TgCheckerApi.Controllers.SubscriptionController (TgCheckerApi).
2024-02-29 18:46:00.448 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", s.id, s.multiplier, s.name, s.price, s.tag_limit
FROM "ChannelHasSubscription" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "SubType" AS s ON c.type_id = s.id
WHERE c.expires IS NOT NULL AND c.expires <= now()::timestamp
2024-02-29 18:46:00.453 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__channelAccessIds_0='?' (DbType = Object)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c.channel_id = ANY (@__channelAccessIds_0) OR (c.channel_id IS NULL AND array_position(@__channelAccessIds_0, NULL) IS NOT NULL)
2024-02-29 18:46:00.454 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:46:00.455 +03:00 [INF] Executed action TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi) in 8.3548ms
2024-02-29 18:46:00.456 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:46:00.457 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - - - 200 2 application/json;+charset=utf-8 13.4092ms
2024-02-29 18:46:00.458 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - -
2024-02-29 18:46:00.459 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:46:00.459 +03:00 [INF] Route matched with {action = "GetEligiblePromoPosts", controller = "Notification"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.PromoPost]] GetEligiblePromoPosts() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:46:00.462 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__currentTimeOnly_0='?' (DbType = Time), @__currentTime_1='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c."IsPartner", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."TopPos", c."Url", c."user"
FROM "Channel" AS c
WHERE c.promo_post = TRUE AND (c.promo_post_time IS NULL OR c.promo_post_time <= @__currentTimeOnly_0) AND (c.promo_post_last IS NULL OR c.promo_post_last + CAST(COALESCE(c.promo_post_interval, 0)::double precision::text || ' days' AS interval) <= @__currentTime_1)
2024-02-29 18:46:00.464 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.PromoPost, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:46:00.465 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi) in 4.3192ms
2024-02-29 18:46:00.466 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:46:00.467 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - - - 200 2 application/json;+charset=utf-8 9.1341ms
2024-02-29 18:46:05.424 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification - -
2024-02-29 18:46:05.425 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:46:05.426 +03:00 [INF] Route matched with {action = "GetNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] GetNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:46:05.431 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__currentTime_0='?' (DbType = DateTime2), @__p_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c0.notifications = TRUE AND (c0.notification_sent <> TRUE OR c0.notification_sent IS NULL) AND c0.last_bump IS NOT NULL AND c0.last_bump <= @__currentTime_0 AND @__currentTime_0 >= c0.last_bump + CAST(@__p_1::text || ' mins' AS interval)
2024-02-29 18:46:05.434 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:46:05.435 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi) in 6.1818ms
2024-02-29 18:46:05.437 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:46:05.438 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification - - - 200 2 application/json;+charset=utf-8 14.1490ms
2024-02-29 18:46:05.438 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - -
2024-02-29 18:46:05.440 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:46:05.441 +03:00 [INF] Route matched with {action = "CheckExpiredSubscriptions", controller = "Subscription"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] CheckExpiredSubscriptions() on controller TgCheckerApi.Controllers.SubscriptionController (TgCheckerApi).
2024-02-29 18:46:05.444 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", s.id, s.multiplier, s.name, s.price, s.tag_limit
FROM "ChannelHasSubscription" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "SubType" AS s ON c.type_id = s.id
WHERE c.expires IS NOT NULL AND c.expires <= now()::timestamp
2024-02-29 18:46:05.449 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__channelAccessIds_0='?' (DbType = Object)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c.channel_id = ANY (@__channelAccessIds_0) OR (c.channel_id IS NULL AND array_position(@__channelAccessIds_0, NULL) IS NOT NULL)
2024-02-29 18:46:05.450 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:46:05.451 +03:00 [INF] Executed action TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi) in 8.4439ms
2024-02-29 18:46:05.452 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:46:05.453 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - - - 200 2 application/json;+charset=utf-8 14.9111ms
2024-02-29 18:46:05.454 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - -
2024-02-29 18:46:05.455 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:46:05.455 +03:00 [INF] Route matched with {action = "GetEligiblePromoPosts", controller = "Notification"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.PromoPost]] GetEligiblePromoPosts() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:46:05.457 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__currentTimeOnly_0='?' (DbType = Time), @__currentTime_1='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c."IsPartner", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."TopPos", c."Url", c."user"
FROM "Channel" AS c
WHERE c.promo_post = TRUE AND (c.promo_post_time IS NULL OR c.promo_post_time <= @__currentTimeOnly_0) AND (c.promo_post_last IS NULL OR c.promo_post_last + CAST(COALESCE(c.promo_post_interval, 0)::double precision::text || ' days' AS interval) <= @__currentTime_1)
2024-02-29 18:46:05.459 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.PromoPost, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:46:05.460 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi) in 3.2118ms
2024-02-29 18:46:05.460 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:46:05.461 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - - - 200 2 application/json;+charset=utf-8 6.9606ms
2024-02-29 18:46:10.436 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification - -
2024-02-29 18:46:10.437 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:46:10.438 +03:00 [INF] Route matched with {action = "GetNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] GetNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:46:10.442 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__currentTime_0='?' (DbType = DateTime2), @__p_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c0.notifications = TRUE AND (c0.notification_sent <> TRUE OR c0.notification_sent IS NULL) AND c0.last_bump IS NOT NULL AND c0.last_bump <= @__currentTime_0 AND @__currentTime_0 >= c0.last_bump + CAST(@__p_1::text || ' mins' AS interval)
2024-02-29 18:46:10.446 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:46:10.447 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi) in 7.2088ms
2024-02-29 18:46:10.448 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:46:10.450 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification - - - 200 2 application/json;+charset=utf-8 13.9842ms
2024-02-29 18:46:10.450 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - -
2024-02-29 18:46:10.452 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:46:10.453 +03:00 [INF] Route matched with {action = "CheckExpiredSubscriptions", controller = "Subscription"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] CheckExpiredSubscriptions() on controller TgCheckerApi.Controllers.SubscriptionController (TgCheckerApi).
2024-02-29 18:46:10.457 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", s.id, s.multiplier, s.name, s.price, s.tag_limit
FROM "ChannelHasSubscription" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "SubType" AS s ON c.type_id = s.id
WHERE c.expires IS NOT NULL AND c.expires <= now()::timestamp
2024-02-29 18:46:10.461 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__channelAccessIds_0='?' (DbType = Object)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c.channel_id = ANY (@__channelAccessIds_0) OR (c.channel_id IS NULL AND array_position(@__channelAccessIds_0, NULL) IS NOT NULL)
2024-02-29 18:46:10.464 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:46:10.465 +03:00 [INF] Executed action TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi) in 9.712ms
2024-02-29 18:46:10.466 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:46:10.467 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - - - 200 2 application/json;+charset=utf-8 17.4906ms
2024-02-29 18:46:10.468 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - -
2024-02-29 18:46:10.469 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:46:10.470 +03:00 [INF] Route matched with {action = "GetEligiblePromoPosts", controller = "Notification"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.PromoPost]] GetEligiblePromoPosts() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:46:10.472 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__currentTimeOnly_0='?' (DbType = Time), @__currentTime_1='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c."IsPartner", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."TopPos", c."Url", c."user"
FROM "Channel" AS c
WHERE c.promo_post = TRUE AND (c.promo_post_time IS NULL OR c.promo_post_time <= @__currentTimeOnly_0) AND (c.promo_post_last IS NULL OR c.promo_post_last + CAST(COALESCE(c.promo_post_interval, 0)::double precision::text || ' days' AS interval) <= @__currentTime_1)
2024-02-29 18:46:10.474 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.PromoPost, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:46:10.475 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi) in 3.9114ms
2024-02-29 18:46:10.476 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:46:10.477 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - - - 200 2 application/json;+charset=utf-8 9.2861ms
2024-02-29 18:46:15.424 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification - -
2024-02-29 18:46:15.426 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:46:15.427 +03:00 [INF] Route matched with {action = "GetNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] GetNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:46:15.435 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__currentTime_0='?' (DbType = DateTime2), @__p_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c0.notifications = TRUE AND (c0.notification_sent <> TRUE OR c0.notification_sent IS NULL) AND c0.last_bump IS NOT NULL AND c0.last_bump <= @__currentTime_0 AND @__currentTime_0 >= c0.last_bump + CAST(@__p_1::text || ' mins' AS interval)
2024-02-29 18:46:15.439 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:46:15.439 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi) in 6.9101ms
2024-02-29 18:46:15.440 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:46:15.441 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification - - - 200 2 application/json;+charset=utf-8 17.0151ms
2024-02-29 18:46:15.442 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - -
2024-02-29 18:46:15.442 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:46:15.443 +03:00 [INF] Route matched with {action = "CheckExpiredSubscriptions", controller = "Subscription"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] CheckExpiredSubscriptions() on controller TgCheckerApi.Controllers.SubscriptionController (TgCheckerApi).
2024-02-29 18:46:15.445 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", s.id, s.multiplier, s.name, s.price, s.tag_limit
FROM "ChannelHasSubscription" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "SubType" AS s ON c.type_id = s.id
WHERE c.expires IS NOT NULL AND c.expires <= now()::timestamp
2024-02-29 18:46:15.450 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__channelAccessIds_0='?' (DbType = Object)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c.channel_id = ANY (@__channelAccessIds_0) OR (c.channel_id IS NULL AND array_position(@__channelAccessIds_0, NULL) IS NOT NULL)
2024-02-29 18:46:15.451 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:46:15.452 +03:00 [INF] Executed action TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi) in 8.0331ms
2024-02-29 18:46:15.453 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:46:15.454 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - - - 200 2 application/json;+charset=utf-8 11.6494ms
2024-02-29 18:46:15.455 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - -
2024-02-29 18:46:15.455 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:46:15.456 +03:00 [INF] Route matched with {action = "GetEligiblePromoPosts", controller = "Notification"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.PromoPost]] GetEligiblePromoPosts() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:46:15.458 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__currentTimeOnly_0='?' (DbType = Time), @__currentTime_1='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c."IsPartner", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."TopPos", c."Url", c."user"
FROM "Channel" AS c
WHERE c.promo_post = TRUE AND (c.promo_post_time IS NULL OR c.promo_post_time <= @__currentTimeOnly_0) AND (c.promo_post_last IS NULL OR c.promo_post_last + CAST(COALESCE(c.promo_post_interval, 0)::double precision::text || ' days' AS interval) <= @__currentTime_1)
2024-02-29 18:46:15.459 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.PromoPost, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:46:15.460 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi) in 3.0094ms
2024-02-29 18:46:15.461 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:46:15.462 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - - - 200 2 application/json;+charset=utf-8 6.8055ms
2024-02-29 18:46:20.432 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification - -
2024-02-29 18:46:20.433 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:46:20.433 +03:00 [INF] Route matched with {action = "GetNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] GetNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:46:20.437 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__currentTime_0='?' (DbType = DateTime2), @__p_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c0.notifications = TRUE AND (c0.notification_sent <> TRUE OR c0.notification_sent IS NULL) AND c0.last_bump IS NOT NULL AND c0.last_bump <= @__currentTime_0 AND @__currentTime_0 >= c0.last_bump + CAST(@__p_1::text || ' mins' AS interval)
2024-02-29 18:46:20.441 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:46:20.442 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi) in 6.578ms
2024-02-29 18:46:20.443 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:46:20.444 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification - - - 200 2 application/json;+charset=utf-8 12.7802ms
2024-02-29 18:46:20.445 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - -
2024-02-29 18:46:20.446 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:46:20.447 +03:00 [INF] Route matched with {action = "CheckExpiredSubscriptions", controller = "Subscription"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] CheckExpiredSubscriptions() on controller TgCheckerApi.Controllers.SubscriptionController (TgCheckerApi).
2024-02-29 18:46:20.451 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", s.id, s.multiplier, s.name, s.price, s.tag_limit
FROM "ChannelHasSubscription" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "SubType" AS s ON c.type_id = s.id
WHERE c.expires IS NOT NULL AND c.expires <= now()::timestamp
2024-02-29 18:46:20.455 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__channelAccessIds_0='?' (DbType = Object)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c.channel_id = ANY (@__channelAccessIds_0) OR (c.channel_id IS NULL AND array_position(@__channelAccessIds_0, NULL) IS NOT NULL)
2024-02-29 18:46:20.457 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:46:20.458 +03:00 [INF] Executed action TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi) in 8.8649ms
2024-02-29 18:46:20.460 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:46:20.461 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - - - 200 2 application/json;+charset=utf-8 16.0028ms
2024-02-29 18:46:20.461 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - -
2024-02-29 18:46:20.462 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:46:20.463 +03:00 [INF] Route matched with {action = "GetEligiblePromoPosts", controller = "Notification"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.PromoPost]] GetEligiblePromoPosts() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:46:20.465 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__currentTimeOnly_0='?' (DbType = Time), @__currentTime_1='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c."IsPartner", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."TopPos", c."Url", c."user"
FROM "Channel" AS c
WHERE c.promo_post = TRUE AND (c.promo_post_time IS NULL OR c.promo_post_time <= @__currentTimeOnly_0) AND (c.promo_post_last IS NULL OR c.promo_post_last + CAST(COALESCE(c.promo_post_interval, 0)::double precision::text || ' days' AS interval) <= @__currentTime_1)
2024-02-29 18:46:20.466 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.PromoPost, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:46:20.467 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi) in 3.2807ms
2024-02-29 18:46:20.468 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:46:20.469 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - - - 200 2 application/json;+charset=utf-8 7.3108ms
2024-02-29 18:46:25.423 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification - -
2024-02-29 18:46:25.425 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:46:25.426 +03:00 [INF] Route matched with {action = "GetNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] GetNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:46:25.431 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__currentTime_0='?' (DbType = DateTime2), @__p_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c0.notifications = TRUE AND (c0.notification_sent <> TRUE OR c0.notification_sent IS NULL) AND c0.last_bump IS NOT NULL AND c0.last_bump <= @__currentTime_0 AND @__currentTime_0 >= c0.last_bump + CAST(@__p_1::text || ' mins' AS interval)
2024-02-29 18:46:25.438 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:46:25.439 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi) in 9.9902ms
2024-02-29 18:46:25.440 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:46:25.441 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification - - - 200 2 application/json;+charset=utf-8 18.0758ms
2024-02-29 18:46:25.442 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - -
2024-02-29 18:46:25.443 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:46:25.444 +03:00 [INF] Route matched with {action = "CheckExpiredSubscriptions", controller = "Subscription"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] CheckExpiredSubscriptions() on controller TgCheckerApi.Controllers.SubscriptionController (TgCheckerApi).
2024-02-29 18:46:25.447 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", s.id, s.multiplier, s.name, s.price, s.tag_limit
FROM "ChannelHasSubscription" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "SubType" AS s ON c.type_id = s.id
WHERE c.expires IS NOT NULL AND c.expires <= now()::timestamp
2024-02-29 18:46:25.450 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__channelAccessIds_0='?' (DbType = Object)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c.channel_id = ANY (@__channelAccessIds_0) OR (c.channel_id IS NULL AND array_position(@__channelAccessIds_0, NULL) IS NOT NULL)
2024-02-29 18:46:25.452 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:46:25.453 +03:00 [INF] Executed action TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi) in 7.5873ms
2024-02-29 18:46:25.454 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:46:25.454 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - - - 200 2 application/json;+charset=utf-8 12.2128ms
2024-02-29 18:46:25.455 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - -
2024-02-29 18:46:25.456 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:46:25.456 +03:00 [INF] Route matched with {action = "GetEligiblePromoPosts", controller = "Notification"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.PromoPost]] GetEligiblePromoPosts() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:46:25.458 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__currentTimeOnly_0='?' (DbType = Time), @__currentTime_1='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c."IsPartner", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."TopPos", c."Url", c."user"
FROM "Channel" AS c
WHERE c.promo_post = TRUE AND (c.promo_post_time IS NULL OR c.promo_post_time <= @__currentTimeOnly_0) AND (c.promo_post_last IS NULL OR c.promo_post_last + CAST(COALESCE(c.promo_post_interval, 0)::double precision::text || ' days' AS interval) <= @__currentTime_1)
2024-02-29 18:46:25.460 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.PromoPost, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:46:25.461 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi) in 3.1203ms
2024-02-29 18:46:25.461 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:46:25.462 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - - - 200 2 application/json;+charset=utf-8 6.3906ms
2024-02-29 18:46:30.437 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification - -
2024-02-29 18:46:30.438 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:46:30.439 +03:00 [INF] Route matched with {action = "GetNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] GetNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:46:30.443 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__currentTime_0='?' (DbType = DateTime2), @__p_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c0.notifications = TRUE AND (c0.notification_sent <> TRUE OR c0.notification_sent IS NULL) AND c0.last_bump IS NOT NULL AND c0.last_bump <= @__currentTime_0 AND @__currentTime_0 >= c0.last_bump + CAST(@__p_1::text || ' mins' AS interval)
2024-02-29 18:46:30.446 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:46:30.448 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi) in 6.5623ms
2024-02-29 18:46:30.449 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:46:30.450 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - -
2024-02-29 18:46:30.450 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification - - - 200 2 application/json;+charset=utf-8 13.5650ms
2024-02-29 18:46:30.451 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:46:30.453 +03:00 [INF] Route matched with {action = "CheckExpiredSubscriptions", controller = "Subscription"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] CheckExpiredSubscriptions() on controller TgCheckerApi.Controllers.SubscriptionController (TgCheckerApi).
2024-02-29 18:46:30.456 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", s.id, s.multiplier, s.name, s.price, s.tag_limit
FROM "ChannelHasSubscription" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "SubType" AS s ON c.type_id = s.id
WHERE c.expires IS NOT NULL AND c.expires <= now()::timestamp
2024-02-29 18:46:30.460 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__channelAccessIds_0='?' (DbType = Object)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c.channel_id = ANY (@__channelAccessIds_0) OR (c.channel_id IS NULL AND array_position(@__channelAccessIds_0, NULL) IS NOT NULL)
2024-02-29 18:46:30.462 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:46:30.463 +03:00 [INF] Executed action TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi) in 8.6067ms
2024-02-29 18:46:30.465 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:46:30.465 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - - - 200 2 application/json;+charset=utf-8 15.1507ms
2024-02-29 18:46:30.466 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - -
2024-02-29 18:46:30.467 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:46:30.468 +03:00 [INF] Route matched with {action = "GetEligiblePromoPosts", controller = "Notification"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.PromoPost]] GetEligiblePromoPosts() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:46:30.470 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__currentTimeOnly_0='?' (DbType = Time), @__currentTime_1='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c."IsPartner", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."TopPos", c."Url", c."user"
FROM "Channel" AS c
WHERE c.promo_post = TRUE AND (c.promo_post_time IS NULL OR c.promo_post_time <= @__currentTimeOnly_0) AND (c.promo_post_last IS NULL OR c.promo_post_last + CAST(COALESCE(c.promo_post_interval, 0)::double precision::text || ' days' AS interval) <= @__currentTime_1)
2024-02-29 18:46:30.472 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.PromoPost, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:46:30.473 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi) in 3.9469ms
2024-02-29 18:46:30.474 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:46:30.475 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - - - 200 2 application/json;+charset=utf-8 8.9490ms
2024-02-29 18:46:35.433 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification - -
2024-02-29 18:46:35.434 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:46:35.435 +03:00 [INF] Route matched with {action = "GetNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] GetNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:46:35.439 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__currentTime_0='?' (DbType = DateTime2), @__p_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c0.notifications = TRUE AND (c0.notification_sent <> TRUE OR c0.notification_sent IS NULL) AND c0.last_bump IS NOT NULL AND c0.last_bump <= @__currentTime_0 AND @__currentTime_0 >= c0.last_bump + CAST(@__p_1::text || ' mins' AS interval)
2024-02-29 18:46:35.442 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:46:35.444 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi) in 6.6195ms
2024-02-29 18:46:35.445 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:46:35.448 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - -
2024-02-29 18:46:35.448 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification - - - 200 2 application/json;+charset=utf-8 14.9046ms
2024-02-29 18:46:35.449 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:46:35.450 +03:00 [INF] Route matched with {action = "CheckExpiredSubscriptions", controller = "Subscription"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] CheckExpiredSubscriptions() on controller TgCheckerApi.Controllers.SubscriptionController (TgCheckerApi).
2024-02-29 18:46:35.454 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", s.id, s.multiplier, s.name, s.price, s.tag_limit
FROM "ChannelHasSubscription" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "SubType" AS s ON c.type_id = s.id
WHERE c.expires IS NOT NULL AND c.expires <= now()::timestamp
2024-02-29 18:46:35.458 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__channelAccessIds_0='?' (DbType = Object)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c.channel_id = ANY (@__channelAccessIds_0) OR (c.channel_id IS NULL AND array_position(@__channelAccessIds_0, NULL) IS NOT NULL)
2024-02-29 18:46:35.460 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:46:35.461 +03:00 [INF] Executed action TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi) in 9.1937ms
2024-02-29 18:46:35.463 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:46:35.464 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - - - 200 2 application/json;+charset=utf-8 15.7684ms
2024-02-29 18:46:35.464 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - -
2024-02-29 18:46:35.465 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:46:35.465 +03:00 [INF] Route matched with {action = "GetEligiblePromoPosts", controller = "Notification"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.PromoPost]] GetEligiblePromoPosts() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:46:35.467 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__currentTimeOnly_0='?' (DbType = Time), @__currentTime_1='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c."IsPartner", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."TopPos", c."Url", c."user"
FROM "Channel" AS c
WHERE c.promo_post = TRUE AND (c.promo_post_time IS NULL OR c.promo_post_time <= @__currentTimeOnly_0) AND (c.promo_post_last IS NULL OR c.promo_post_last + CAST(COALESCE(c.promo_post_interval, 0)::double precision::text || ' days' AS interval) <= @__currentTime_1)
2024-02-29 18:46:35.469 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.PromoPost, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:46:35.470 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi) in 3.8557ms
2024-02-29 18:46:35.471 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:46:35.472 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - - - 200 2 application/json;+charset=utf-8 7.9895ms
2024-02-29 18:46:40.429 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification - -
2024-02-29 18:46:40.430 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:46:40.430 +03:00 [INF] Route matched with {action = "GetNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] GetNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:46:40.434 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__currentTime_0='?' (DbType = DateTime2), @__p_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c0.notifications = TRUE AND (c0.notification_sent <> TRUE OR c0.notification_sent IS NULL) AND c0.last_bump IS NOT NULL AND c0.last_bump <= @__currentTime_0 AND @__currentTime_0 >= c0.last_bump + CAST(@__p_1::text || ' mins' AS interval)
2024-02-29 18:46:40.437 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:46:40.438 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi) in 5.7409ms
2024-02-29 18:46:40.439 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:46:40.439 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification - - - 200 2 application/json;+charset=utf-8 10.6233ms
2024-02-29 18:46:40.440 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - -
2024-02-29 18:46:40.441 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:46:40.442 +03:00 [INF] Route matched with {action = "CheckExpiredSubscriptions", controller = "Subscription"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] CheckExpiredSubscriptions() on controller TgCheckerApi.Controllers.SubscriptionController (TgCheckerApi).
2024-02-29 18:46:40.445 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", s.id, s.multiplier, s.name, s.price, s.tag_limit
FROM "ChannelHasSubscription" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "SubType" AS s ON c.type_id = s.id
WHERE c.expires IS NOT NULL AND c.expires <= now()::timestamp
2024-02-29 18:46:40.449 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__channelAccessIds_0='?' (DbType = Object)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c.channel_id = ANY (@__channelAccessIds_0) OR (c.channel_id IS NULL AND array_position(@__channelAccessIds_0, NULL) IS NOT NULL)
2024-02-29 18:46:40.452 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:46:40.453 +03:00 [INF] Executed action TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi) in 8.8768ms
2024-02-29 18:46:40.454 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:46:40.455 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - - - 200 2 application/json;+charset=utf-8 14.9021ms
2024-02-29 18:46:40.456 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - -
2024-02-29 18:46:40.457 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:46:40.458 +03:00 [INF] Route matched with {action = "GetEligiblePromoPosts", controller = "Notification"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.PromoPost]] GetEligiblePromoPosts() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:46:40.461 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__currentTimeOnly_0='?' (DbType = Time), @__currentTime_1='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c."IsPartner", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."TopPos", c."Url", c."user"
FROM "Channel" AS c
WHERE c.promo_post = TRUE AND (c.promo_post_time IS NULL OR c.promo_post_time <= @__currentTimeOnly_0) AND (c.promo_post_last IS NULL OR c.promo_post_last + CAST(COALESCE(c.promo_post_interval, 0)::double precision::text || ' days' AS interval) <= @__currentTime_1)
2024-02-29 18:46:40.463 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.PromoPost, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:46:40.464 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi) in 4.6678ms
2024-02-29 18:46:40.466 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:46:40.466 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - - - 200 2 application/json;+charset=utf-8 10.8553ms
2024-02-29 18:46:45.437 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification - -
2024-02-29 18:46:45.438 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:46:45.439 +03:00 [INF] Route matched with {action = "GetNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] GetNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:46:45.442 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__currentTime_0='?' (DbType = DateTime2), @__p_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c0.notifications = TRUE AND (c0.notification_sent <> TRUE OR c0.notification_sent IS NULL) AND c0.last_bump IS NOT NULL AND c0.last_bump <= @__currentTime_0 AND @__currentTime_0 >= c0.last_bump + CAST(@__p_1::text || ' mins' AS interval)
2024-02-29 18:46:45.448 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:46:45.449 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi) in 8.6035ms
2024-02-29 18:46:45.452 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:46:45.452 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - -
2024-02-29 18:46:45.453 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification - - - 200 2 application/json;+charset=utf-8 16.5226ms
2024-02-29 18:46:45.454 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:46:45.456 +03:00 [INF] Route matched with {action = "CheckExpiredSubscriptions", controller = "Subscription"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] CheckExpiredSubscriptions() on controller TgCheckerApi.Controllers.SubscriptionController (TgCheckerApi).
2024-02-29 18:46:45.459 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", s.id, s.multiplier, s.name, s.price, s.tag_limit
FROM "ChannelHasSubscription" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "SubType" AS s ON c.type_id = s.id
WHERE c.expires IS NOT NULL AND c.expires <= now()::timestamp
2024-02-29 18:46:45.463 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__channelAccessIds_0='?' (DbType = Object)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c.channel_id = ANY (@__channelAccessIds_0) OR (c.channel_id IS NULL AND array_position(@__channelAccessIds_0, NULL) IS NOT NULL)
2024-02-29 18:46:45.469 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:46:45.471 +03:00 [INF] Executed action TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi) in 13.4199ms
2024-02-29 18:46:45.474 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:46:45.474 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - -
2024-02-29 18:46:45.475 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - - - 200 2 application/json;+charset=utf-8 23.1274ms
2024-02-29 18:46:45.476 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:46:45.478 +03:00 [INF] Route matched with {action = "GetEligiblePromoPosts", controller = "Notification"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.PromoPost]] GetEligiblePromoPosts() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:46:45.483 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__currentTimeOnly_0='?' (DbType = Time), @__currentTime_1='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c."IsPartner", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."TopPos", c."Url", c."user"
FROM "Channel" AS c
WHERE c.promo_post = TRUE AND (c.promo_post_time IS NULL OR c.promo_post_time <= @__currentTimeOnly_0) AND (c.promo_post_last IS NULL OR c.promo_post_last + CAST(COALESCE(c.promo_post_interval, 0)::double precision::text || ' days' AS interval) <= @__currentTime_1)
2024-02-29 18:46:45.486 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.PromoPost, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:46:45.487 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi) in 5.5327ms
2024-02-29 18:46:45.489 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:46:45.490 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - - - 200 2 application/json;+charset=utf-8 15.1471ms
2024-02-29 18:46:50.422 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification - -
2024-02-29 18:46:50.422 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:46:50.423 +03:00 [INF] Route matched with {action = "GetNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] GetNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:46:50.428 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__currentTime_0='?' (DbType = DateTime2), @__p_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c0.notifications = TRUE AND (c0.notification_sent <> TRUE OR c0.notification_sent IS NULL) AND c0.last_bump IS NOT NULL AND c0.last_bump <= @__currentTime_0 AND @__currentTime_0 >= c0.last_bump + CAST(@__p_1::text || ' mins' AS interval)
2024-02-29 18:46:50.432 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:46:50.434 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi) in 7.4378ms
2024-02-29 18:46:50.436 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:46:50.437 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - -
2024-02-29 18:46:50.437 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification - - - 200 2 application/json;+charset=utf-8 15.6169ms
2024-02-29 18:46:50.438 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:46:50.440 +03:00 [INF] Route matched with {action = "CheckExpiredSubscriptions", controller = "Subscription"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] CheckExpiredSubscriptions() on controller TgCheckerApi.Controllers.SubscriptionController (TgCheckerApi).
2024-02-29 18:46:50.443 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", s.id, s.multiplier, s.name, s.price, s.tag_limit
FROM "ChannelHasSubscription" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "SubType" AS s ON c.type_id = s.id
WHERE c.expires IS NOT NULL AND c.expires <= now()::timestamp
2024-02-29 18:46:50.447 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__channelAccessIds_0='?' (DbType = Object)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c.channel_id = ANY (@__channelAccessIds_0) OR (c.channel_id IS NULL AND array_position(@__channelAccessIds_0, NULL) IS NOT NULL)
2024-02-29 18:46:50.450 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:46:50.452 +03:00 [INF] Executed action TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi) in 10.8846ms
2024-02-29 18:46:50.454 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:46:50.455 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - -
2024-02-29 18:46:50.465 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - - - 200 2 application/json;+charset=utf-8 28.1903ms
2024-02-29 18:46:50.466 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:46:50.469 +03:00 [INF] Route matched with {action = "GetEligiblePromoPosts", controller = "Notification"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.PromoPost]] GetEligiblePromoPosts() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:46:50.471 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__currentTimeOnly_0='?' (DbType = Time), @__currentTime_1='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c."IsPartner", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."TopPos", c."Url", c."user"
FROM "Channel" AS c
WHERE c.promo_post = TRUE AND (c.promo_post_time IS NULL OR c.promo_post_time <= @__currentTimeOnly_0) AND (c.promo_post_last IS NULL OR c.promo_post_last + CAST(COALESCE(c.promo_post_interval, 0)::double precision::text || ' days' AS interval) <= @__currentTime_1)
2024-02-29 18:46:50.474 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.PromoPost, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:46:50.475 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi) in 5.0559ms
2024-02-29 18:46:50.476 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:46:50.477 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - - - 200 2 application/json;+charset=utf-8 21.7253ms
2024-02-29 18:46:55.431 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification - -
2024-02-29 18:46:55.433 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:46:55.434 +03:00 [INF] Route matched with {action = "GetNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] GetNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:46:55.438 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__currentTime_0='?' (DbType = DateTime2), @__p_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c0.notifications = TRUE AND (c0.notification_sent <> TRUE OR c0.notification_sent IS NULL) AND c0.last_bump IS NOT NULL AND c0.last_bump <= @__currentTime_0 AND @__currentTime_0 >= c0.last_bump + CAST(@__p_1::text || ' mins' AS interval)
2024-02-29 18:46:55.441 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:46:55.443 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi) in 7.1837ms
2024-02-29 18:46:55.444 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:46:55.445 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - -
2024-02-29 18:46:55.446 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification - - - 200 2 application/json;+charset=utf-8 14.2496ms
2024-02-29 18:46:55.446 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:46:55.448 +03:00 [INF] Route matched with {action = "CheckExpiredSubscriptions", controller = "Subscription"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] CheckExpiredSubscriptions() on controller TgCheckerApi.Controllers.SubscriptionController (TgCheckerApi).
2024-02-29 18:46:55.452 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", s.id, s.multiplier, s.name, s.price, s.tag_limit
FROM "ChannelHasSubscription" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "SubType" AS s ON c.type_id = s.id
WHERE c.expires IS NOT NULL AND c.expires <= now()::timestamp
2024-02-29 18:46:55.455 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__channelAccessIds_0='?' (DbType = Object)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c.channel_id = ANY (@__channelAccessIds_0) OR (c.channel_id IS NULL AND array_position(@__channelAccessIds_0, NULL) IS NOT NULL)
2024-02-29 18:46:55.457 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:46:55.458 +03:00 [INF] Executed action TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi) in 7.8831ms
2024-02-29 18:46:55.459 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:46:55.459 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - - - 200 2 application/json;+charset=utf-8 14.8750ms
2024-02-29 18:46:55.460 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - -
2024-02-29 18:46:55.461 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:46:55.461 +03:00 [INF] Route matched with {action = "GetEligiblePromoPosts", controller = "Notification"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.PromoPost]] GetEligiblePromoPosts() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:46:55.463 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__currentTimeOnly_0='?' (DbType = Time), @__currentTime_1='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c."IsPartner", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."TopPos", c."Url", c."user"
FROM "Channel" AS c
WHERE c.promo_post = TRUE AND (c.promo_post_time IS NULL OR c.promo_post_time <= @__currentTimeOnly_0) AND (c.promo_post_last IS NULL OR c.promo_post_last + CAST(COALESCE(c.promo_post_interval, 0)::double precision::text || ' days' AS interval) <= @__currentTime_1)
2024-02-29 18:46:55.465 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.PromoPost, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:46:55.465 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi) in 2.9229ms
2024-02-29 18:46:55.466 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:46:55.467 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - - - 200 2 application/json;+charset=utf-8 6.9189ms
2024-02-29 18:47:00.429 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification - -
2024-02-29 18:47:00.430 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:47:00.431 +03:00 [INF] Route matched with {action = "GetNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] GetNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:47:00.434 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__currentTime_0='?' (DbType = DateTime2), @__p_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c0.notifications = TRUE AND (c0.notification_sent <> TRUE OR c0.notification_sent IS NULL) AND c0.last_bump IS NOT NULL AND c0.last_bump <= @__currentTime_0 AND @__currentTime_0 >= c0.last_bump + CAST(@__p_1::text || ' mins' AS interval)
2024-02-29 18:47:00.438 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:47:00.439 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi) in 7.0059ms
2024-02-29 18:47:00.441 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:47:00.441 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - -
2024-02-29 18:47:00.442 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification - - - 200 2 application/json;+charset=utf-8 12.8634ms
2024-02-29 18:47:00.442 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:47:00.444 +03:00 [INF] Route matched with {action = "CheckExpiredSubscriptions", controller = "Subscription"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] CheckExpiredSubscriptions() on controller TgCheckerApi.Controllers.SubscriptionController (TgCheckerApi).
2024-02-29 18:47:00.448 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", s.id, s.multiplier, s.name, s.price, s.tag_limit
FROM "ChannelHasSubscription" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "SubType" AS s ON c.type_id = s.id
WHERE c.expires IS NOT NULL AND c.expires <= now()::timestamp
2024-02-29 18:47:00.452 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__channelAccessIds_0='?' (DbType = Object)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c.channel_id = ANY (@__channelAccessIds_0) OR (c.channel_id IS NULL AND array_position(@__channelAccessIds_0, NULL) IS NOT NULL)
2024-02-29 18:47:00.454 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:47:00.456 +03:00 [INF] Executed action TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi) in 9.8263ms
2024-02-29 18:47:00.458 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:47:00.458 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - -
2024-02-29 18:47:00.459 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - - - 200 2 application/json;+charset=utf-8 17.7344ms
2024-02-29 18:47:00.460 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:47:00.463 +03:00 [INF] Route matched with {action = "GetEligiblePromoPosts", controller = "Notification"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.PromoPost]] GetEligiblePromoPosts() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:47:00.466 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__currentTimeOnly_0='?' (DbType = Time), @__currentTime_1='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c."IsPartner", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."TopPos", c."Url", c."user"
FROM "Channel" AS c
WHERE c.promo_post = TRUE AND (c.promo_post_time IS NULL OR c.promo_post_time <= @__currentTimeOnly_0) AND (c.promo_post_last IS NULL OR c.promo_post_last + CAST(COALESCE(c.promo_post_interval, 0)::double precision::text || ' days' AS interval) <= @__currentTime_1)
2024-02-29 18:47:00.469 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.PromoPost, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:47:00.470 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi) in 4.9266ms
2024-02-29 18:47:00.471 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:47:00.472 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - - - 200 2 application/json;+charset=utf-8 14.2990ms
2024-02-29 18:47:05.425 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification - -
2024-02-29 18:47:05.428 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:47:05.429 +03:00 [INF] Route matched with {action = "GetNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] GetNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:47:05.434 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__currentTime_0='?' (DbType = DateTime2), @__p_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c0.notifications = TRUE AND (c0.notification_sent <> TRUE OR c0.notification_sent IS NULL) AND c0.last_bump IS NOT NULL AND c0.last_bump <= @__currentTime_0 AND @__currentTime_0 >= c0.last_bump + CAST(@__p_1::text || ' mins' AS interval)
2024-02-29 18:47:05.437 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:47:05.439 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi) in 7.1684ms
2024-02-29 18:47:05.440 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:47:05.440 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - -
2024-02-29 18:47:05.441 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification - - - 200 2 application/json;+charset=utf-8 15.3107ms
2024-02-29 18:47:05.441 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:47:05.443 +03:00 [INF] Route matched with {action = "CheckExpiredSubscriptions", controller = "Subscription"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] CheckExpiredSubscriptions() on controller TgCheckerApi.Controllers.SubscriptionController (TgCheckerApi).
2024-02-29 18:47:05.446 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", s.id, s.multiplier, s.name, s.price, s.tag_limit
FROM "ChannelHasSubscription" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "SubType" AS s ON c.type_id = s.id
WHERE c.expires IS NOT NULL AND c.expires <= now()::timestamp
2024-02-29 18:47:05.450 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__channelAccessIds_0='?' (DbType = Object)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c.channel_id = ANY (@__channelAccessIds_0) OR (c.channel_id IS NULL AND array_position(@__channelAccessIds_0, NULL) IS NOT NULL)
2024-02-29 18:47:05.453 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:47:05.454 +03:00 [INF] Executed action TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi) in 9.118ms
2024-02-29 18:47:05.455 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:47:05.456 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - -
2024-02-29 18:47:05.456 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - - - 200 2 application/json;+charset=utf-8 15.8330ms
2024-02-29 18:47:05.457 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:47:05.459 +03:00 [INF] Route matched with {action = "GetEligiblePromoPosts", controller = "Notification"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.PromoPost]] GetEligiblePromoPosts() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:47:05.461 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__currentTimeOnly_0='?' (DbType = Time), @__currentTime_1='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c."IsPartner", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."TopPos", c."Url", c."user"
FROM "Channel" AS c
WHERE c.promo_post = TRUE AND (c.promo_post_time IS NULL OR c.promo_post_time <= @__currentTimeOnly_0) AND (c.promo_post_last IS NULL OR c.promo_post_last + CAST(COALESCE(c.promo_post_interval, 0)::double precision::text || ' days' AS interval) <= @__currentTime_1)
2024-02-29 18:47:05.464 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.PromoPost, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:47:05.465 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi) in 4.4813ms
2024-02-29 18:47:05.466 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:47:05.467 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - - - 200 2 application/json;+charset=utf-8 11.1691ms
2024-02-29 18:47:10.428 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification - -
2024-02-29 18:47:10.429 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:47:10.429 +03:00 [INF] Route matched with {action = "GetNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] GetNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:47:10.433 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__currentTime_0='?' (DbType = DateTime2), @__p_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c0.notifications = TRUE AND (c0.notification_sent <> TRUE OR c0.notification_sent IS NULL) AND c0.last_bump IS NOT NULL AND c0.last_bump <= @__currentTime_0 AND @__currentTime_0 >= c0.last_bump + CAST(@__p_1::text || ' mins' AS interval)
2024-02-29 18:47:10.436 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:47:10.437 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi) in 6.1272ms
2024-02-29 18:47:10.439 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:47:10.439 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - -
2024-02-29 18:47:10.440 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification - - - 200 2 application/json;+charset=utf-8 11.9499ms
2024-02-29 18:47:10.441 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:47:10.443 +03:00 [INF] Route matched with {action = "CheckExpiredSubscriptions", controller = "Subscription"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] CheckExpiredSubscriptions() on controller TgCheckerApi.Controllers.SubscriptionController (TgCheckerApi).
2024-02-29 18:47:10.447 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", s.id, s.multiplier, s.name, s.price, s.tag_limit
FROM "ChannelHasSubscription" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "SubType" AS s ON c.type_id = s.id
WHERE c.expires IS NOT NULL AND c.expires <= now()::timestamp
2024-02-29 18:47:10.451 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__channelAccessIds_0='?' (DbType = Object)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c.channel_id = ANY (@__channelAccessIds_0) OR (c.channel_id IS NULL AND array_position(@__channelAccessIds_0, NULL) IS NOT NULL)
2024-02-29 18:47:10.453 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:47:10.455 +03:00 [INF] Executed action TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi) in 9.9799ms
2024-02-29 18:47:10.456 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:47:10.458 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - -
2024-02-29 18:47:10.458 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - - - 200 2 application/json;+charset=utf-8 18.3824ms
2024-02-29 18:47:10.458 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:47:10.460 +03:00 [INF] Route matched with {action = "GetEligiblePromoPosts", controller = "Notification"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.PromoPost]] GetEligiblePromoPosts() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:47:10.463 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__currentTimeOnly_0='?' (DbType = Time), @__currentTime_1='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c."IsPartner", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."TopPos", c."Url", c."user"
FROM "Channel" AS c
WHERE c.promo_post = TRUE AND (c.promo_post_time IS NULL OR c.promo_post_time <= @__currentTimeOnly_0) AND (c.promo_post_last IS NULL OR c.promo_post_last + CAST(COALESCE(c.promo_post_interval, 0)::double precision::text || ' days' AS interval) <= @__currentTime_1)
2024-02-29 18:47:10.466 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.PromoPost, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:47:10.467 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi) in 5.2746ms
2024-02-29 18:47:10.468 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:47:10.469 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - - - 200 2 application/json;+charset=utf-8 11.2353ms
2024-02-29 18:47:15.435 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification - -
2024-02-29 18:47:15.436 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:47:15.437 +03:00 [INF] Route matched with {action = "GetNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] GetNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:47:15.441 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__currentTime_0='?' (DbType = DateTime2), @__p_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c0.notifications = TRUE AND (c0.notification_sent <> TRUE OR c0.notification_sent IS NULL) AND c0.last_bump IS NOT NULL AND c0.last_bump <= @__currentTime_0 AND @__currentTime_0 >= c0.last_bump + CAST(@__p_1::text || ' mins' AS interval)
2024-02-29 18:47:15.446 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:47:15.447 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi) in 7.1985ms
2024-02-29 18:47:15.448 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:47:15.449 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - -
2024-02-29 18:47:15.450 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification - - - 200 2 application/json;+charset=utf-8 14.4799ms
2024-02-29 18:47:15.450 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:47:15.453 +03:00 [INF] Route matched with {action = "CheckExpiredSubscriptions", controller = "Subscription"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] CheckExpiredSubscriptions() on controller TgCheckerApi.Controllers.SubscriptionController (TgCheckerApi).
2024-02-29 18:47:15.456 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", s.id, s.multiplier, s.name, s.price, s.tag_limit
FROM "ChannelHasSubscription" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "SubType" AS s ON c.type_id = s.id
WHERE c.expires IS NOT NULL AND c.expires <= now()::timestamp
2024-02-29 18:47:15.460 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__channelAccessIds_0='?' (DbType = Object)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c.channel_id = ANY (@__channelAccessIds_0) OR (c.channel_id IS NULL AND array_position(@__channelAccessIds_0, NULL) IS NOT NULL)
2024-02-29 18:47:15.463 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:47:15.465 +03:00 [INF] Executed action TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi) in 9.97ms
2024-02-29 18:47:15.467 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - -
2024-02-29 18:47:15.467 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:47:15.468 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:47:15.469 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - - - 200 2 application/json;+charset=utf-8 20.0231ms
2024-02-29 18:47:15.470 +03:00 [INF] Route matched with {action = "GetEligiblePromoPosts", controller = "Notification"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.PromoPost]] GetEligiblePromoPosts() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:47:15.474 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__currentTimeOnly_0='?' (DbType = Time), @__currentTime_1='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c."IsPartner", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."TopPos", c."Url", c."user"
FROM "Channel" AS c
WHERE c.promo_post = TRUE AND (c.promo_post_time IS NULL OR c.promo_post_time <= @__currentTimeOnly_0) AND (c.promo_post_last IS NULL OR c.promo_post_last + CAST(COALESCE(c.promo_post_interval, 0)::double precision::text || ' days' AS interval) <= @__currentTime_1)
2024-02-29 18:47:15.477 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.PromoPost, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:47:15.478 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi) in 4.9249ms
2024-02-29 18:47:15.479 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:47:15.480 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - - - 200 2 application/json;+charset=utf-8 13.2384ms
2024-02-29 18:47:16.952 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/api/Channel/Bump/80 - 0
2024-02-29 18:47:16.954 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.ChannelController.BumpChannel (TgCheckerApi)'
2024-02-29 18:47:16.955 +03:00 [INF] Route matched with {action = "BumpChannel", controller = "Channel"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] BumpChannel(Int32) on controller TgCheckerApi.Controllers.ChannelController (TgCheckerApi).
2024-02-29 18:47:16.959 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c."IsPartner", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."TopPos", c."Url", c."user"
FROM "Channel" AS c
WHERE c.id = @__p_0
LIMIT 1
2024-02-29 18:47:16.962 +03:00 [INF] Executing BadRequestObjectResult, writing value of type 'System.String'.
2024-02-29 18:47:16.964 +03:00 [INF] Executed action TgCheckerApi.Controllers.ChannelController.BumpChannel (TgCheckerApi) in 6.7967ms
2024-02-29 18:47:16.965 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.ChannelController.BumpChannel (TgCheckerApi)'
2024-02-29 18:47:16.966 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/api/Channel/Bump/80 - 0 - 400 - text/plain;+charset=utf-8 13.6939ms
2024-02-29 18:47:19.485 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/api/Channel/Bump/80 - 0
2024-02-29 18:47:19.486 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.ChannelController.BumpChannel (TgCheckerApi)'
2024-02-29 18:47:19.488 +03:00 [INF] Route matched with {action = "BumpChannel", controller = "Channel"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] BumpChannel(Int32) on controller TgCheckerApi.Controllers.ChannelController (TgCheckerApi).
2024-02-29 18:47:19.492 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c."IsPartner", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."TopPos", c."Url", c."user"
FROM "Channel" AS c
WHERE c.id = @__p_0
LIMIT 1
2024-02-29 18:47:19.497 +03:00 [INF] Executing BadRequestObjectResult, writing value of type 'System.String'.
2024-02-29 18:47:19.498 +03:00 [INF] Executed action TgCheckerApi.Controllers.ChannelController.BumpChannel (TgCheckerApi) in 8.1197ms
2024-02-29 18:47:19.500 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.ChannelController.BumpChannel (TgCheckerApi)'
2024-02-29 18:47:19.501 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/api/Channel/Bump/80 - 0 - 400 - text/plain;+charset=utf-8 15.4700ms
2024-02-29 18:47:20.431 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification - -
2024-02-29 18:47:20.432 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:47:20.433 +03:00 [INF] Route matched with {action = "GetNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] GetNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:47:20.437 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__currentTime_0='?' (DbType = DateTime2), @__p_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c0.notifications = TRUE AND (c0.notification_sent <> TRUE OR c0.notification_sent IS NULL) AND c0.last_bump IS NOT NULL AND c0.last_bump <= @__currentTime_0 AND @__currentTime_0 >= c0.last_bump + CAST(@__p_1::text || ' mins' AS interval)
2024-02-29 18:47:20.440 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:47:20.442 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi) in 6.8301ms
2024-02-29 18:47:20.443 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:47:20.444 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification - - - 200 2 application/json;+charset=utf-8 13.3704ms
2024-02-29 18:47:20.445 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - -
2024-02-29 18:47:20.446 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:47:20.447 +03:00 [INF] Route matched with {action = "CheckExpiredSubscriptions", controller = "Subscription"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] CheckExpiredSubscriptions() on controller TgCheckerApi.Controllers.SubscriptionController (TgCheckerApi).
2024-02-29 18:47:20.451 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", s.id, s.multiplier, s.name, s.price, s.tag_limit
FROM "ChannelHasSubscription" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "SubType" AS s ON c.type_id = s.id
WHERE c.expires IS NOT NULL AND c.expires <= now()::timestamp
2024-02-29 18:47:20.456 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__channelAccessIds_0='?' (DbType = Object)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c.channel_id = ANY (@__channelAccessIds_0) OR (c.channel_id IS NULL AND array_position(@__channelAccessIds_0, NULL) IS NOT NULL)
2024-02-29 18:47:20.459 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:47:20.460 +03:00 [INF] Executed action TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi) in 10.5127ms
2024-02-29 18:47:20.461 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:47:20.462 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - -
2024-02-29 18:47:20.463 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - - - 200 2 application/json;+charset=utf-8 17.7794ms
2024-02-29 18:47:20.463 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:47:20.465 +03:00 [INF] Route matched with {action = "GetEligiblePromoPosts", controller = "Notification"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.PromoPost]] GetEligiblePromoPosts() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:47:20.468 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__currentTimeOnly_0='?' (DbType = Time), @__currentTime_1='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c."IsPartner", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."TopPos", c."Url", c."user"
FROM "Channel" AS c
WHERE c.promo_post = TRUE AND (c.promo_post_time IS NULL OR c.promo_post_time <= @__currentTimeOnly_0) AND (c.promo_post_last IS NULL OR c.promo_post_last + CAST(COALESCE(c.promo_post_interval, 0)::double precision::text || ' days' AS interval) <= @__currentTime_1)
2024-02-29 18:47:20.471 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.PromoPost, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:47:20.472 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi) in 5.2941ms
2024-02-29 18:47:20.477 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:47:20.486 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - - - 200 2 application/json;+charset=utf-8 24.1927ms
2024-02-29 18:47:25.431 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification - -
2024-02-29 18:47:25.432 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:47:25.434 +03:00 [INF] Route matched with {action = "GetNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] GetNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:47:25.441 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__currentTime_0='?' (DbType = DateTime2), @__p_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c0.notifications = TRUE AND (c0.notification_sent <> TRUE OR c0.notification_sent IS NULL) AND c0.last_bump IS NOT NULL AND c0.last_bump <= @__currentTime_0 AND @__currentTime_0 >= c0.last_bump + CAST(@__p_1::text || ' mins' AS interval)
2024-02-29 18:47:25.447 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:47:25.449 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi) in 9.7612ms
2024-02-29 18:47:25.451 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - -
2024-02-29 18:47:25.451 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:47:25.453 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:47:25.454 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification - - - 200 2 application/json;+charset=utf-8 23.3526ms
2024-02-29 18:47:25.456 +03:00 [INF] Route matched with {action = "CheckExpiredSubscriptions", controller = "Subscription"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] CheckExpiredSubscriptions() on controller TgCheckerApi.Controllers.SubscriptionController (TgCheckerApi).
2024-02-29 18:47:25.461 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", s.id, s.multiplier, s.name, s.price, s.tag_limit
FROM "ChannelHasSubscription" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "SubType" AS s ON c.type_id = s.id
WHERE c.expires IS NOT NULL AND c.expires <= now()::timestamp
2024-02-29 18:47:25.467 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__channelAccessIds_0='?' (DbType = Object)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c.channel_id = ANY (@__channelAccessIds_0) OR (c.channel_id IS NULL AND array_position(@__channelAccessIds_0, NULL) IS NOT NULL)
2024-02-29 18:47:25.470 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:47:25.472 +03:00 [INF] Executed action TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi) in 12.6499ms
2024-02-29 18:47:25.474 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:47:25.474 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - -
2024-02-29 18:47:25.476 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - - - 200 2 application/json;+charset=utf-8 25.1677ms
2024-02-29 18:47:25.478 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:47:25.485 +03:00 [INF] Route matched with {action = "GetEligiblePromoPosts", controller = "Notification"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.PromoPost]] GetEligiblePromoPosts() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:47:25.492 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__currentTimeOnly_0='?' (DbType = Time), @__currentTime_1='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c."IsPartner", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."TopPos", c."Url", c."user"
FROM "Channel" AS c
WHERE c.promo_post = TRUE AND (c.promo_post_time IS NULL OR c.promo_post_time <= @__currentTimeOnly_0) AND (c.promo_post_last IS NULL OR c.promo_post_last + CAST(COALESCE(c.promo_post_interval, 0)::double precision::text || ' days' AS interval) <= @__currentTime_1)
2024-02-29 18:47:25.497 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.PromoPost, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:47:25.499 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi) in 8.7209ms
2024-02-29 18:47:25.501 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:47:25.502 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - - - 200 2 application/json;+charset=utf-8 27.5992ms
2024-02-29 18:47:30.436 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification - -
2024-02-29 18:47:30.437 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:47:30.437 +03:00 [INF] Route matched with {action = "GetNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] GetNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:47:30.442 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__currentTime_0='?' (DbType = DateTime2), @__p_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c0.notifications = TRUE AND (c0.notification_sent <> TRUE OR c0.notification_sent IS NULL) AND c0.last_bump IS NOT NULL AND c0.last_bump <= @__currentTime_0 AND @__currentTime_0 >= c0.last_bump + CAST(@__p_1::text || ' mins' AS interval)
2024-02-29 18:47:30.445 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:47:30.446 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi) in 7.0558ms
2024-02-29 18:47:30.448 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:47:30.449 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - -
2024-02-29 18:47:30.450 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification - - - 200 2 application/json;+charset=utf-8 13.9609ms
2024-02-29 18:47:30.451 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:47:30.453 +03:00 [INF] Route matched with {action = "CheckExpiredSubscriptions", controller = "Subscription"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] CheckExpiredSubscriptions() on controller TgCheckerApi.Controllers.SubscriptionController (TgCheckerApi).
2024-02-29 18:47:30.457 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", s.id, s.multiplier, s.name, s.price, s.tag_limit
FROM "ChannelHasSubscription" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "SubType" AS s ON c.type_id = s.id
WHERE c.expires IS NOT NULL AND c.expires <= now()::timestamp
2024-02-29 18:47:30.461 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__channelAccessIds_0='?' (DbType = Object)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c.channel_id = ANY (@__channelAccessIds_0) OR (c.channel_id IS NULL AND array_position(@__channelAccessIds_0, NULL) IS NOT NULL)
2024-02-29 18:47:30.464 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:47:30.465 +03:00 [INF] Executed action TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi) in 10.5296ms
2024-02-29 18:47:30.466 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:47:30.467 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - -
2024-02-29 18:47:30.468 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - - - 200 2 application/json;+charset=utf-8 19.0734ms
2024-02-29 18:47:30.468 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:47:30.470 +03:00 [INF] Route matched with {action = "GetEligiblePromoPosts", controller = "Notification"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.PromoPost]] GetEligiblePromoPosts() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:47:30.473 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__currentTimeOnly_0='?' (DbType = Time), @__currentTime_1='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c."IsPartner", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."TopPos", c."Url", c."user"
FROM "Channel" AS c
WHERE c.promo_post = TRUE AND (c.promo_post_time IS NULL OR c.promo_post_time <= @__currentTimeOnly_0) AND (c.promo_post_last IS NULL OR c.promo_post_last + CAST(COALESCE(c.promo_post_interval, 0)::double precision::text || ' days' AS interval) <= @__currentTime_1)
2024-02-29 18:47:30.475 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.PromoPost, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:47:30.477 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi) in 4.7562ms
2024-02-29 18:47:30.478 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:47:30.479 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - - - 200 2 application/json;+charset=utf-8 11.5041ms
2024-02-29 18:47:35.432 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification - -
2024-02-29 18:47:35.433 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:47:35.434 +03:00 [INF] Route matched with {action = "GetNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] GetNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:47:35.439 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__currentTime_0='?' (DbType = DateTime2), @__p_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c0.notifications = TRUE AND (c0.notification_sent <> TRUE OR c0.notification_sent IS NULL) AND c0.last_bump IS NOT NULL AND c0.last_bump <= @__currentTime_0 AND @__currentTime_0 >= c0.last_bump + CAST(@__p_1::text || ' mins' AS interval)
2024-02-29 18:47:35.442 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:47:35.443 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi) in 7.0105ms
2024-02-29 18:47:35.445 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:47:35.446 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification - - - 200 2 application/json;+charset=utf-8 14.5909ms
2024-02-29 18:47:35.446 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - -
2024-02-29 18:47:35.448 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:47:35.449 +03:00 [INF] Route matched with {action = "CheckExpiredSubscriptions", controller = "Subscription"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] CheckExpiredSubscriptions() on controller TgCheckerApi.Controllers.SubscriptionController (TgCheckerApi).
2024-02-29 18:47:35.452 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", s.id, s.multiplier, s.name, s.price, s.tag_limit
FROM "ChannelHasSubscription" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "SubType" AS s ON c.type_id = s.id
WHERE c.expires IS NOT NULL AND c.expires <= now()::timestamp
2024-02-29 18:47:35.456 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__channelAccessIds_0='?' (DbType = Object)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c.channel_id = ANY (@__channelAccessIds_0) OR (c.channel_id IS NULL AND array_position(@__channelAccessIds_0, NULL) IS NOT NULL)
2024-02-29 18:47:35.459 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:47:35.460 +03:00 [INF] Executed action TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi) in 9.316ms
2024-02-29 18:47:35.461 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:47:35.462 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - - - 200 2 application/json;+charset=utf-8 16.0829ms
2024-02-29 18:47:35.463 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - -
2024-02-29 18:47:35.464 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:47:35.465 +03:00 [INF] Route matched with {action = "GetEligiblePromoPosts", controller = "Notification"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.PromoPost]] GetEligiblePromoPosts() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:47:35.468 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__currentTimeOnly_0='?' (DbType = Time), @__currentTime_1='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c."IsPartner", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."TopPos", c."Url", c."user"
FROM "Channel" AS c
WHERE c.promo_post = TRUE AND (c.promo_post_time IS NULL OR c.promo_post_time <= @__currentTimeOnly_0) AND (c.promo_post_last IS NULL OR c.promo_post_last + CAST(COALESCE(c.promo_post_interval, 0)::double precision::text || ' days' AS interval) <= @__currentTime_1)
2024-02-29 18:47:35.470 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.PromoPost, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:47:35.471 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi) in 4.832ms
2024-02-29 18:47:35.473 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:47:35.478 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - - - 200 2 application/json;+charset=utf-8 15.0277ms
2024-02-29 18:47:40.434 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification - -
2024-02-29 18:47:40.435 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:47:40.435 +03:00 [INF] Route matched with {action = "GetNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] GetNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:47:40.439 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__currentTime_0='?' (DbType = DateTime2), @__p_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c0.notifications = TRUE AND (c0.notification_sent <> TRUE OR c0.notification_sent IS NULL) AND c0.last_bump IS NOT NULL AND c0.last_bump <= @__currentTime_0 AND @__currentTime_0 >= c0.last_bump + CAST(@__p_1::text || ' mins' AS interval)
2024-02-29 18:47:40.443 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:47:40.444 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi) in 7.1609ms
2024-02-29 18:47:40.446 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:47:40.447 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - -
2024-02-29 18:47:40.448 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification - - - 200 2 application/json;+charset=utf-8 14.3514ms
2024-02-29 18:47:40.449 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:47:40.451 +03:00 [INF] Route matched with {action = "CheckExpiredSubscriptions", controller = "Subscription"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] CheckExpiredSubscriptions() on controller TgCheckerApi.Controllers.SubscriptionController (TgCheckerApi).
2024-02-29 18:47:40.455 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", s.id, s.multiplier, s.name, s.price, s.tag_limit
FROM "ChannelHasSubscription" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "SubType" AS s ON c.type_id = s.id
WHERE c.expires IS NOT NULL AND c.expires <= now()::timestamp
2024-02-29 18:47:40.459 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__channelAccessIds_0='?' (DbType = Object)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c.channel_id = ANY (@__channelAccessIds_0) OR (c.channel_id IS NULL AND array_position(@__channelAccessIds_0, NULL) IS NOT NULL)
2024-02-29 18:47:40.462 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:47:40.464 +03:00 [INF] Executed action TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi) in 11.5768ms
2024-02-29 18:47:40.466 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:47:40.468 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - -
2024-02-29 18:47:40.468 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - - - 200 2 application/json;+charset=utf-8 20.4210ms
2024-02-29 18:47:40.468 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:47:40.470 +03:00 [INF] Route matched with {action = "GetEligiblePromoPosts", controller = "Notification"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.PromoPost]] GetEligiblePromoPosts() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:47:40.473 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__currentTimeOnly_0='?' (DbType = Time), @__currentTime_1='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c."IsPartner", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."TopPos", c."Url", c."user"
FROM "Channel" AS c
WHERE c.promo_post = TRUE AND (c.promo_post_time IS NULL OR c.promo_post_time <= @__currentTimeOnly_0) AND (c.promo_post_last IS NULL OR c.promo_post_last + CAST(COALESCE(c.promo_post_interval, 0)::double precision::text || ' days' AS interval) <= @__currentTime_1)
2024-02-29 18:47:40.475 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.PromoPost, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:47:40.476 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi) in 3.8713ms
2024-02-29 18:47:40.477 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:47:40.478 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - - - 200 2 application/json;+charset=utf-8 10.3549ms
2024-02-29 18:47:45.431 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification - -
2024-02-29 18:47:45.432 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:47:45.433 +03:00 [INF] Route matched with {action = "GetNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] GetNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:47:45.436 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__currentTime_0='?' (DbType = DateTime2), @__p_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c0.notifications = TRUE AND (c0.notification_sent <> TRUE OR c0.notification_sent IS NULL) AND c0.last_bump IS NOT NULL AND c0.last_bump <= @__currentTime_0 AND @__currentTime_0 >= c0.last_bump + CAST(@__p_1::text || ' mins' AS interval)
2024-02-29 18:47:45.439 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:47:45.440 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi) in 5.3404ms
2024-02-29 18:47:45.441 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:47:45.442 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification - - - 200 2 application/json;+charset=utf-8 10.2901ms
2024-02-29 18:47:45.442 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - -
2024-02-29 18:47:45.443 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:47:45.444 +03:00 [INF] Route matched with {action = "CheckExpiredSubscriptions", controller = "Subscription"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] CheckExpiredSubscriptions() on controller TgCheckerApi.Controllers.SubscriptionController (TgCheckerApi).
2024-02-29 18:47:45.448 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.expires, c.type_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", s.id, s.multiplier, s.name, s.price, s.tag_limit
FROM "ChannelHasSubscription" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "SubType" AS s ON c.type_id = s.id
WHERE c.expires IS NOT NULL AND c.expires <= now()::timestamp
2024-02-29 18:47:45.451 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__channelAccessIds_0='?' (DbType = Object)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c.channel_id = ANY (@__channelAccessIds_0) OR (c.channel_id IS NULL AND array_position(@__channelAccessIds_0, NULL) IS NOT NULL)
2024-02-29 18:47:45.455 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:47:45.456 +03:00 [INF] Executed action TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi) in 9.5436ms
2024-02-29 18:47:45.459 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - -
2024-02-29 18:47:45.462 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.SubscriptionController.CheckExpiredSubscriptions (TgCheckerApi)'
2024-02-29 18:47:45.463 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:47:45.465 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Subscription/CheckExpiredSubscriptions - - - 200 2 application/json;+charset=utf-8 22.6266ms
2024-02-29 18:47:45.466 +03:00 [INF] Route matched with {action = "GetEligiblePromoPosts", controller = "Notification"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.PromoPost]] GetEligiblePromoPosts() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:47:45.472 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__currentTimeOnly_0='?' (DbType = Time), @__currentTime_1='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.avatar, c.bumps, c.description, c.flag, c."Hidden", c."IsPartner", c.language, c.last_bump, c.members, c.name, c.notification_sent, c.notifications, c.promo_post, c.promo_post_interval, c.promo_post_last, c.promo_post_sent, c.promo_post_time, c.telegram_id, c."TopPos", c."Url", c."user"
FROM "Channel" AS c
WHERE c.promo_post = TRUE AND (c.promo_post_time IS NULL OR c.promo_post_time <= @__currentTimeOnly_0) AND (c.promo_post_last IS NULL OR c.promo_post_last + CAST(COALESCE(c.promo_post_interval, 0)::double precision::text || ' days' AS interval) <= @__currentTime_1)
2024-02-29 18:47:45.481 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.PromoPost, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:47:45.483 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi) in 11.8151ms
2024-02-29 18:47:45.485 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetEligiblePromoPosts (TgCheckerApi)'
2024-02-29 18:47:45.487 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification/GetPromoPosts - - - 200 2 application/json;+charset=utf-8 27.7983ms
2024-02-29 18:47:48.850 +03:00 [ERR] Failed to invoke hub method 'ReceiveStream'.
System.OperationCanceledException: The underlying connection was closed.
   at System.Threading.Channels.AsyncOperation`1.GetResult(Int16 token)
   at System.Threading.Channels.ChannelReader`1.ReadAllAsync(CancellationToken cancellationToken)+MoveNext()
   at System.Threading.Channels.ChannelReader`1.ReadAllAsync(CancellationToken cancellationToken)+System.Threading.Tasks.Sources.IValueTaskSource<System.Boolean>.GetResult()
   at TgCheckerApi.Websockets.BotHub.ReceiveStream(IAsyncEnumerable`1 stream, String param) in C:\Users\timar\source\Repos\goldman2g5\TgCheckerApi\TgCheckerApi\Websockets\BotHub.cs:line 39
   at TgCheckerApi.Websockets.BotHub.ReceiveStream(IAsyncEnumerable`1 stream, String param) in C:\Users\timar\source\Repos\goldman2g5\TgCheckerApi\TgCheckerApi\Websockets\BotHub.cs:line 39
   at Microsoft.AspNetCore.SignalR.Internal.DefaultHubDispatcher`1.ExecuteMethod(ObjectMethodExecutor methodExecutor, Hub hub, Object[] arguments)
   at Microsoft.AspNetCore.SignalR.Internal.DefaultHubDispatcher`1.<Invoke>g__ExecuteInvocation|16_0(DefaultHubDispatcher`1 dispatcher, ObjectMethodExecutor methodExecutor, THub hub, Object[] arguments, AsyncServiceScope scope, IHubActivator`1 hubActivator, HubConnectionContext connection, HubMethodInvocationMessage hubMethodInvocationMessage, Boolean isStreamCall)
2024-02-29 18:47:48.852 +03:00 [INF] Executed endpoint '/BotHub'
2024-02-29 18:47:48.862 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/BotHub?id=Jsgd7OcbD1R4YjFj8Erlbg - - - 101 - - 286316.4224ms
2024-02-29 18:47:59.685 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-29 18:47:59.686 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-29 18:47:59.699 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-29 18:47:59.700 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 14.8262ms
2024-02-29 18:47:59.712 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=vRO1qgPXDmiG3LVFxIREnw - -
2024-02-29 18:47:59.712 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-29 18:48:04.497 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification - -
2024-02-29 18:48:04.499 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:48:04.500 +03:00 [INF] Route matched with {action = "GetNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] GetNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:48:04.538 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__currentTime_0='?' (DbType = DateTime2), @__p_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c0.notifications = TRUE AND (c0.notification_sent <> TRUE OR c0.notification_sent IS NULL) AND c0.last_bump IS NOT NULL AND c0.last_bump <= @__currentTime_0 AND @__currentTime_0 >= c0.last_bump + CAST(@__p_1::text || ' mins' AS interval)
2024-02-29 18:48:04.543 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:48:04.544 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi) in 32.7952ms
2024-02-29 18:48:04.545 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:48:04.546 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification - - - 200 2 application/json;+charset=utf-8 48.3604ms
2024-02-29 18:48:05.252 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification - -
2024-02-29 18:48:05.253 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:48:05.254 +03:00 [INF] Route matched with {action = "GetNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] GetNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:48:05.264 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__currentTime_0='?' (DbType = DateTime2), @__p_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c0.notifications = TRUE AND (c0.notification_sent <> TRUE OR c0.notification_sent IS NULL) AND c0.last_bump IS NOT NULL AND c0.last_bump <= @__currentTime_0 AND @__currentTime_0 >= c0.last_bump + CAST(@__p_1::text || ' mins' AS interval)
2024-02-29 18:48:05.270 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:48:05.270 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi) in 9.8673ms
2024-02-29 18:48:05.271 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:48:05.272 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification - - - 200 2 application/json;+charset=utf-8 20.0683ms
2024-02-29 18:48:26.742 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification - -
2024-02-29 18:48:26.744 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:48:26.745 +03:00 [INF] Route matched with {action = "GetNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] GetNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:48:26.791 +03:00 [INF] Executed DbCommand (44ms) [Parameters=[@__currentTime_0='?' (DbType = DateTime2), @__p_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c0.notifications = TRUE AND (c0.notification_sent <> TRUE OR c0.notification_sent IS NULL) AND c0.last_bump IS NOT NULL AND c0.last_bump <= @__currentTime_0 AND @__currentTime_0 >= c0.last_bump + CAST(@__p_1::text || ' mins' AS interval)
2024-02-29 18:48:26.865 +03:00 [INF] Executed DbCommand (49ms) [Parameters=[@__typeId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.text
FROM "NotificationType" AS n
WHERE n.id = @__typeId_0
LIMIT 1
2024-02-29 18:48:26.987 +03:00 [INF] Executed DbCommand (62ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?', @p2='?' (DbType = DateTime), @p3='?' (DbType = Boolean), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Notification" (channel_id, content, date, is_new, type_id, user_id)
VALUES (@p0, @p1, @p2, @p3, @p4, @p5)
RETURNING id;
2024-02-29 18:48:27.011 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:8000/send_notifications"
2024-02-29 18:48:27.012 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:8000/send_notifications"
2024-02-29 18:48:27.031 +03:00 [INF] Received HTTP response headers after 13.8626ms - 422
2024-02-29 18:48:27.033 +03:00 [INF] End processing HTTP request after 21.8179ms - 422
2024-02-29 18:48:27.126 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi) in 379.1385ms
2024-02-29 18:48:27.128 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:48:27.130 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Error sending notifications: StatusCode: 422, ReasonPhrase: 'Unprocessable Entity', Version: 1.1, Content: System.Net.Http.HttpConnectionResponseContent, Headers:
{
  Date: Thu, 29 Feb 2024 15:48:26 GMT
  Server: uvicorn
  Content-Length: 117
  Content-Type: application/json
}
   at TgCheckerApi.Services.NotificationService.SendTelegramNotificationAsync(List`1 notificationModels) in C:\Users\timar\source\Repos\goldman2g5\TgCheckerApi\TgCheckerApi\Services\NotificationService.cs:line 154
   at TgCheckerApi.Services.NotificationService.SendTelegramNotificationAsync(TelegramNotification notificationModel) in C:\Users\timar\source\Repos\goldman2g5\TgCheckerApi\TgCheckerApi\Services\NotificationService.cs:line 136
   at TgCheckerApi.Services.NotificationService.CreateNotificationAsync(Int32 channelId, String content, Int32 typeId, Int32 userId, Boolean targetTelegram, String contentType, String channelName, Nullable`1 telegramUserId, Nullable`1 telegramChatId, Nullable`1 telegramChannelId) in C:\Users\timar\source\Repos\goldman2g5\TgCheckerApi\TgCheckerApi\Services\NotificationService.cs:line 117
   at TgCheckerApi.Services.NotificationService.GetBumpNotifications() in C:\Users\timar\source\Repos\goldman2g5\TgCheckerApi\TgCheckerApi\Services\NotificationService.cs:line 55
   at TgCheckerApi.Controllers.NotificationController.GetNotifications() in C:\Users\timar\source\Repos\goldman2g5\TgCheckerApi\TgCheckerApi\Controllers\NotificationController.cs:line 37
   at lambda_method317(Closure , Object )
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2024-02-29 18:48:27.145 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification - - - 500 - text/plain;+charset=utf-8 403.3726ms
2024-02-29 18:48:56.307 +03:00 [INF] Executed endpoint '/BotHub'
2024-02-29 18:48:56.324 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/BotHub?id=vRO1qgPXDmiG3LVFxIREnw - - - 101 - - 56612.2702ms
2024-02-29 18:48:56.324 +03:00 [ERR] Failed to invoke hub method 'ReceiveStream'.
System.OperationCanceledException: The underlying connection was closed.
   at System.Threading.Channels.AsyncOperation`1.GetResult(Int16 token)
   at System.Threading.Channels.ChannelReader`1.ReadAllAsync(CancellationToken cancellationToken)+MoveNext()
   at System.Threading.Channels.ChannelReader`1.ReadAllAsync(CancellationToken cancellationToken)+System.Threading.Tasks.Sources.IValueTaskSource<System.Boolean>.GetResult()
   at TgCheckerApi.Websockets.BotHub.ReceiveStream(IAsyncEnumerable`1 stream, String param) in C:\Users\timar\source\Repos\goldman2g5\TgCheckerApi\TgCheckerApi\Websockets\BotHub.cs:line 39
   at TgCheckerApi.Websockets.BotHub.ReceiveStream(IAsyncEnumerable`1 stream, String param) in C:\Users\timar\source\Repos\goldman2g5\TgCheckerApi\TgCheckerApi\Websockets\BotHub.cs:line 39
   at Microsoft.AspNetCore.SignalR.Internal.DefaultHubDispatcher`1.ExecuteMethod(ObjectMethodExecutor methodExecutor, Hub hub, Object[] arguments)
   at Microsoft.AspNetCore.SignalR.Internal.DefaultHubDispatcher`1.<Invoke>g__ExecuteInvocation|16_0(DefaultHubDispatcher`1 dispatcher, ObjectMethodExecutor methodExecutor, THub hub, Object[] arguments, AsyncServiceScope scope, IHubActivator`1 hubActivator, HubConnectionContext connection, HubMethodInvocationMessage hubMethodInvocationMessage, Boolean isStreamCall)
2024-02-29 18:48:59.316 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0
2024-02-29 18:48:59.316 +03:00 [INF] Executing endpoint '/BotHub/negotiate'
2024-02-29 18:48:59.317 +03:00 [INF] Executed endpoint '/BotHub/negotiate'
2024-02-29 18:48:59.318 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:7256/BotHub/negotiate?negotiateVersion=0 - 0 - 200 273 application/json 2.9276ms
2024-02-29 18:48:59.331 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/BotHub?id=CcbGjg2kbXZUM4sWL0AY1Q - -
2024-02-29 18:48:59.332 +03:00 [INF] Executing endpoint '/BotHub'
2024-02-29 18:49:03.019 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:7256/api/Notification - -
2024-02-29 18:49:03.021 +03:00 [INF] Executing endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:49:03.035 +03:00 [INF] Route matched with {action = "GetNotifications", controller = "Notification"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TgCheckerApi.Models.NotificationModels.TelegramNotification]]] GetNotifications() on controller TgCheckerApi.Controllers.NotificationController (TgCheckerApi).
2024-02-29 18:49:03.041 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__currentTime_0='?' (DbType = DateTime2), @__p_1='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.channel_id, c.user_id, c0.id, c0.avatar, c0.bumps, c0.description, c0.flag, c0."Hidden", c0."IsPartner", c0.language, c0.last_bump, c0.members, c0.name, c0.notification_sent, c0.notifications, c0.promo_post, c0.promo_post_interval, c0.promo_post_last, c0.promo_post_sent, c0.promo_post_time, c0.telegram_id, c0."TopPos", c0."Url", c0."user", u.id, u.avatar, u.chat_id, u.last_update, u.notification_settings, u.telegram_id, u.unique_key, u.username
FROM "ChannelAccess" AS c
LEFT JOIN "Channel" AS c0 ON c.channel_id = c0.id
LEFT JOIN "User" AS u ON c.user_id = u.id
WHERE c0.notifications = TRUE AND (c0.notification_sent <> TRUE OR c0.notification_sent IS NULL) AND c0.last_bump IS NOT NULL AND c0.last_bump <= @__currentTime_0 AND @__currentTime_0 >= c0.last_bump + CAST(@__p_1::text || ' mins' AS interval)
2024-02-29 18:49:03.045 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__typeId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.text
FROM "NotificationType" AS n
WHERE n.id = @__typeId_0
LIMIT 1
2024-02-29 18:49:03.050 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?', @p2='?' (DbType = DateTime), @p3='?' (DbType = Boolean), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Notification" (channel_id, content, date, is_new, type_id, user_id)
VALUES (@p0, @p1, @p2, @p3, @p4, @p5)
RETURNING id;
2024-02-29 18:49:03.052 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:8000/send_notifications"
2024-02-29 18:49:03.053 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:8000/send_notifications"
2024-02-29 18:49:04.261 +03:00 [INF] Received HTTP response headers after 1207.5854ms - 200
2024-02-29 18:49:04.263 +03:00 [INF] End processing HTTP request after 1210.3245ms - 200
2024-02-29 18:49:04.265 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__typeId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.text
FROM "NotificationType" AS n
WHERE n.id = @__typeId_0
LIMIT 1
2024-02-29 18:49:04.287 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean), @p2='?' (DbType = Int32), @p3='?', @p4='?' (DbType = DateTime), @p5='?' (DbType = Boolean), @p6='?' (DbType = Int32), @p7='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Channel" SET notification_sent = @p0
WHERE id = @p1;
INSERT INTO "Notification" (channel_id, content, date, is_new, type_id, user_id)
VALUES (@p2, @p3, @p4, @p5, @p6, @p7)
RETURNING id;
2024-02-29 18:49:04.308 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:8000/send_notifications"
2024-02-29 18:49:04.310 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:8000/send_notifications"
2024-02-29 18:49:05.400 +03:00 [INF] Received HTTP response headers after 1089.6996ms - 200
2024-02-29 18:49:05.401 +03:00 [INF] End processing HTTP request after 1092.9363ms - 200
2024-02-29 18:49:05.404 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__typeId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.text
FROM "NotificationType" AS n
WHERE n.id = @__typeId_0
LIMIT 1
2024-02-29 18:49:05.407 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?', @p2='?' (DbType = DateTime), @p3='?' (DbType = Boolean), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Notification" (channel_id, content, date, is_new, type_id, user_id)
VALUES (@p0, @p1, @p2, @p3, @p4, @p5)
RETURNING id;
2024-02-29 18:49:05.410 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:8000/send_notifications"
2024-02-29 18:49:05.411 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:8000/send_notifications"
2024-02-29 18:49:06.634 +03:00 [INF] Received HTTP response headers after 1222.0703ms - 200
2024-02-29 18:49:06.636 +03:00 [INF] End processing HTTP request after 1226.2908ms - 200
2024-02-29 18:49:06.638 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__typeId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT n.id, n.text
FROM "NotificationType" AS n
WHERE n.id = @__typeId_0
LIMIT 1
2024-02-29 18:49:06.643 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?', @p2='?' (DbType = DateTime), @p3='?' (DbType = Boolean), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Notification" (channel_id, content, date, is_new, type_id, user_id)
VALUES (@p0, @p1, @p2, @p3, @p4, @p5)
RETURNING id;
2024-02-29 18:49:06.646 +03:00 [INF] Start processing HTTP request POST "http://127.0.0.1:8000/send_notifications"
2024-02-29 18:49:06.648 +03:00 [INF] Sending HTTP request POST "http://127.0.0.1:8000/send_notifications"
2024-02-29 18:49:07.751 +03:00 [INF] Received HTTP response headers after 1101.832ms - 200
2024-02-29 18:49:07.752 +03:00 [INF] End processing HTTP request after 1106.1844ms - 200
2024-02-29 18:49:07.753 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TgCheckerApi.Models.NotificationModels.TelegramNotification, TgCheckerApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-29 18:49:07.768 +03:00 [INF] Executed action TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi) in 4729.458ms
2024-02-29 18:49:07.770 +03:00 [INF] Executed endpoint 'TgCheckerApi.Controllers.NotificationController.GetNotifications (TgCheckerApi)'
2024-02-29 18:49:07.771 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:7256/api/Notification - - - 200 86904 application/json;+charset=utf-8 4751.3866ms
